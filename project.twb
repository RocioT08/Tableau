<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20232.23.0611.2007                               -->
<workbook original-version='18.1' source-build='2023.2.0 (20232.23.0611.2007)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Adjuster' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='150.'>
        <calculation class='tableau' formula='150.' />
      </column>
      <column caption='Top' datatype='real' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='10.'>
        <calculation class='tableau' formula='10.' />
      </column>
    </datasource>
    <datasource caption='data files+ (data files 2)' inline='true' name='federated.1mrxccd0f5yf3o17xtxi5030y1dq' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='data files 2' name='excel-direct.0yfgyr50vi772m120orxg0w80iq6'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/owner/Downloads/data files 2.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='Book2' name='excel-direct.0fcq1l61xfex6915x9b4z00baq44'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/owner/Documents/DataAnalitics/Data_visualization/Book2.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation join='left' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[listings].[id]' />
              <expression op='[Sheet2].[id]' />
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[data files].[listing_id]' />
                <expression op='[reviews ].[listing_id]' />
              </expression>
            </clause>
            <relation join='inner' type='join'>
              <clause type='join'>
                <expression op='='>
                  <expression op='[data files].[listing_id]' />
                  <expression op='[listings].[id]' />
                </expression>
              </clause>
              <relation connection='excel-direct.0yfgyr50vi772m120orxg0w80iq6' name='data files' table='[&apos;data files$&apos;]' type='table'>
                <columns gridOrigin='A1:G10001:no:A1:G10001:0' header='yes' outcome='6'>
                  <column datatype='integer' name='listing_id' ordinal='0' />
                  <column datatype='date' name='date' ordinal='1' />
                  <column datatype='string' name='available' ordinal='2' />
                  <column datatype='integer' name='price' ordinal='3' />
                  <column datatype='integer' name='adjusted_price' ordinal='4' />
                  <column datatype='integer' name='minimum_nights' ordinal='5' />
                  <column datatype='integer' name='maximum_nights' ordinal='6' />
                </columns>
              </relation>
              <relation connection='excel-direct.0yfgyr50vi772m120orxg0w80iq6' name='listings' table='[listings$]' type='table'>
                <columns gridOrigin='A1:BO10001:no:A1:BO10001:0' header='yes' outcome='2'>
                  <column datatype='integer' name='id' ordinal='0' />
                  <column datatype='string' name='source' ordinal='1' />
                  <column datatype='string' name='name' ordinal='2' />
                  <column datatype='string' name='description' ordinal='3' />
                  <column datatype='string' name='neighborhood_overview' ordinal='4' />
                  <column datatype='integer' name='host_id' ordinal='5' />
                  <column datatype='string' name='host_name' ordinal='6' />
                  <column datatype='date' name='host_since' ordinal='7' />
                  <column datatype='string' name='host_location' ordinal='8' />
                  <column datatype='string' name='host_about' ordinal='9' />
                  <column datatype='string' name='host_response_time' ordinal='10' />
                  <column datatype='string' name='host_response_rate' ordinal='11' />
                  <column datatype='string' name='host_acceptance_rate' ordinal='12' />
                  <column datatype='string' name='host_is_superhost' ordinal='13' />
                  <column datatype='integer' name='host_listings_count' ordinal='14' />
                  <column datatype='integer' name='host_total_listings_count' ordinal='15' />
                  <column datatype='string' name='host_verifications' ordinal='16' />
                  <column datatype='string' name='host_has_profile_pic' ordinal='17' />
                  <column datatype='string' name='host_identity_verified' ordinal='18' />
                  <column datatype='string' name='neighbourhood' ordinal='19' />
                  <column datatype='string' name='neighbourhood_cleansed' ordinal='20' />
                  <column datatype='string' name='neighbourhood_group_cleansed' ordinal='21' />
                  <column datatype='real' name='latitude' ordinal='22' />
                  <column datatype='real' name='longitude' ordinal='23' />
                  <column datatype='string' name='property_type' ordinal='24' />
                  <column datatype='string' name='room_type' ordinal='25' />
                  <column datatype='integer' name='accommodates' ordinal='26' />
                  <column datatype='string' name='bathrooms' ordinal='27' />
                  <column datatype='string' name='bathrooms_text' ordinal='28' />
                  <column datatype='integer' name='bedrooms' ordinal='29' />
                  <column datatype='integer' name='beds' ordinal='30' />
                  <column datatype='string' name='amenities' ordinal='31' />
                  <column datatype='real' name='price' ordinal='32' />
                  <column datatype='integer' name='minimum_nights' ordinal='33' />
                  <column datatype='integer' name='maximum_nights' ordinal='34' />
                  <column datatype='integer' name='minimum_minimum_nights' ordinal='35' />
                  <column datatype='integer' name='maximum_minimum_nights' ordinal='36' />
                  <column datatype='integer' name='minimum_maximum_nights' ordinal='37' />
                  <column datatype='integer' name='maximum_maximum_nights' ordinal='38' />
                  <column datatype='real' name='minimum_nights_avg_ntm' ordinal='39' />
                  <column datatype='real' name='maximum_nights_avg_ntm' ordinal='40' />
                  <column datatype='string' name='calendar_updated' ordinal='41' />
                  <column datatype='string' name='has_availability' ordinal='42' />
                  <column datatype='integer' name='availability_30' ordinal='43' />
                  <column datatype='integer' name='availability_60' ordinal='44' />
                  <column datatype='integer' name='availability_90' ordinal='45' />
                  <column datatype='integer' name='availability_365' ordinal='46' />
                  <column datatype='date' name='calendar_last_scraped' ordinal='47' />
                  <column datatype='integer' name='number_of_reviews' ordinal='48' />
                  <column datatype='integer' name='number_of_reviews_ltm' ordinal='49' />
                  <column datatype='integer' name='number_of_reviews_l30d' ordinal='50' />
                  <column datatype='date' name='first_review' ordinal='51' />
                  <column datatype='date' name='last_review' ordinal='52' />
                  <column datatype='real' name='review_scores_rating' ordinal='53' />
                  <column datatype='real' name='review_scores_accuracy' ordinal='54' />
                  <column datatype='real' name='review_scores_cleanliness' ordinal='55' />
                  <column datatype='real' name='review_scores_checkin' ordinal='56' />
                  <column datatype='real' name='review_scores_communication' ordinal='57' />
                  <column datatype='real' name='review_scores_location' ordinal='58' />
                  <column datatype='real' name='review_scores_value' ordinal='59' />
                  <column datatype='string' name='license' ordinal='60' />
                  <column datatype='string' name='instant_bookable' ordinal='61' />
                  <column datatype='integer' name='calculated_host_listings_count' ordinal='62' />
                  <column datatype='integer' name='calculated_host_listings_count_entire_homes' ordinal='63' />
                  <column datatype='integer' name='calculated_host_listings_count_private_rooms' ordinal='64' />
                  <column datatype='integer' name='calculated_host_listings_count_shared_rooms' ordinal='65' />
                  <column datatype='real' name='reviews_per_month' ordinal='66' />
                </columns>
              </relation>
            </relation>
            <relation connection='excel-direct.0yfgyr50vi772m120orxg0w80iq6' name='reviews ' table='[&apos;reviews $&apos;]' type='table'>
              <columns gridOrigin='A1:F10001:no:A1:F10001:0' header='yes' outcome='6'>
                <column datatype='integer' name='listing_id' ordinal='0' />
                <column datatype='integer' name='id' ordinal='1' />
                <column datatype='date' name='date' ordinal='2' />
                <column datatype='integer' name='reviewer_id' ordinal='3' />
                <column datatype='string' name='reviewer_name' ordinal='4' />
                <column datatype='string' name='comments' ordinal='5' />
              </columns>
            </relation>
          </relation>
          <relation connection='excel-direct.0fcq1l61xfex6915x9b4z00baq44' name='Sheet2' table='[Sheet2$]' type='table'>
            <columns gridOrigin='A1:C1001:no:A1:C1001:0' header='yes' outcome='6'>
              <column datatype='integer' name='id' ordinal='0' />
              <column datatype='string' name='Attribute' ordinal='1' />
              <column datatype='string' name='Value' ordinal='2' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation join='left' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[listings].[id]' />
              <expression op='[Sheet2].[id]' />
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[data files].[listing_id]' />
                <expression op='[reviews ].[listing_id]' />
              </expression>
            </clause>
            <relation join='inner' type='join'>
              <clause type='join'>
                <expression op='='>
                  <expression op='[data files].[listing_id]' />
                  <expression op='[listings].[id]' />
                </expression>
              </clause>
              <relation connection='excel-direct.0yfgyr50vi772m120orxg0w80iq6' name='data files' table='[&apos;data files$&apos;]' type='table'>
                <columns gridOrigin='A1:G10001:no:A1:G10001:0' header='yes' outcome='6'>
                  <column datatype='integer' name='listing_id' ordinal='0' />
                  <column datatype='date' name='date' ordinal='1' />
                  <column datatype='string' name='available' ordinal='2' />
                  <column datatype='integer' name='price' ordinal='3' />
                  <column datatype='integer' name='adjusted_price' ordinal='4' />
                  <column datatype='integer' name='minimum_nights' ordinal='5' />
                  <column datatype='integer' name='maximum_nights' ordinal='6' />
                </columns>
              </relation>
              <relation connection='excel-direct.0yfgyr50vi772m120orxg0w80iq6' name='listings' table='[listings$]' type='table'>
                <columns gridOrigin='A1:BO10001:no:A1:BO10001:0' header='yes' outcome='2'>
                  <column datatype='integer' name='id' ordinal='0' />
                  <column datatype='string' name='source' ordinal='1' />
                  <column datatype='string' name='name' ordinal='2' />
                  <column datatype='string' name='description' ordinal='3' />
                  <column datatype='string' name='neighborhood_overview' ordinal='4' />
                  <column datatype='integer' name='host_id' ordinal='5' />
                  <column datatype='string' name='host_name' ordinal='6' />
                  <column datatype='date' name='host_since' ordinal='7' />
                  <column datatype='string' name='host_location' ordinal='8' />
                  <column datatype='string' name='host_about' ordinal='9' />
                  <column datatype='string' name='host_response_time' ordinal='10' />
                  <column datatype='string' name='host_response_rate' ordinal='11' />
                  <column datatype='string' name='host_acceptance_rate' ordinal='12' />
                  <column datatype='string' name='host_is_superhost' ordinal='13' />
                  <column datatype='integer' name='host_listings_count' ordinal='14' />
                  <column datatype='integer' name='host_total_listings_count' ordinal='15' />
                  <column datatype='string' name='host_verifications' ordinal='16' />
                  <column datatype='string' name='host_has_profile_pic' ordinal='17' />
                  <column datatype='string' name='host_identity_verified' ordinal='18' />
                  <column datatype='string' name='neighbourhood' ordinal='19' />
                  <column datatype='string' name='neighbourhood_cleansed' ordinal='20' />
                  <column datatype='string' name='neighbourhood_group_cleansed' ordinal='21' />
                  <column datatype='real' name='latitude' ordinal='22' />
                  <column datatype='real' name='longitude' ordinal='23' />
                  <column datatype='string' name='property_type' ordinal='24' />
                  <column datatype='string' name='room_type' ordinal='25' />
                  <column datatype='integer' name='accommodates' ordinal='26' />
                  <column datatype='string' name='bathrooms' ordinal='27' />
                  <column datatype='string' name='bathrooms_text' ordinal='28' />
                  <column datatype='integer' name='bedrooms' ordinal='29' />
                  <column datatype='integer' name='beds' ordinal='30' />
                  <column datatype='string' name='amenities' ordinal='31' />
                  <column datatype='real' name='price' ordinal='32' />
                  <column datatype='integer' name='minimum_nights' ordinal='33' />
                  <column datatype='integer' name='maximum_nights' ordinal='34' />
                  <column datatype='integer' name='minimum_minimum_nights' ordinal='35' />
                  <column datatype='integer' name='maximum_minimum_nights' ordinal='36' />
                  <column datatype='integer' name='minimum_maximum_nights' ordinal='37' />
                  <column datatype='integer' name='maximum_maximum_nights' ordinal='38' />
                  <column datatype='real' name='minimum_nights_avg_ntm' ordinal='39' />
                  <column datatype='real' name='maximum_nights_avg_ntm' ordinal='40' />
                  <column datatype='string' name='calendar_updated' ordinal='41' />
                  <column datatype='string' name='has_availability' ordinal='42' />
                  <column datatype='integer' name='availability_30' ordinal='43' />
                  <column datatype='integer' name='availability_60' ordinal='44' />
                  <column datatype='integer' name='availability_90' ordinal='45' />
                  <column datatype='integer' name='availability_365' ordinal='46' />
                  <column datatype='date' name='calendar_last_scraped' ordinal='47' />
                  <column datatype='integer' name='number_of_reviews' ordinal='48' />
                  <column datatype='integer' name='number_of_reviews_ltm' ordinal='49' />
                  <column datatype='integer' name='number_of_reviews_l30d' ordinal='50' />
                  <column datatype='date' name='first_review' ordinal='51' />
                  <column datatype='date' name='last_review' ordinal='52' />
                  <column datatype='real' name='review_scores_rating' ordinal='53' />
                  <column datatype='real' name='review_scores_accuracy' ordinal='54' />
                  <column datatype='real' name='review_scores_cleanliness' ordinal='55' />
                  <column datatype='real' name='review_scores_checkin' ordinal='56' />
                  <column datatype='real' name='review_scores_communication' ordinal='57' />
                  <column datatype='real' name='review_scores_location' ordinal='58' />
                  <column datatype='real' name='review_scores_value' ordinal='59' />
                  <column datatype='string' name='license' ordinal='60' />
                  <column datatype='string' name='instant_bookable' ordinal='61' />
                  <column datatype='integer' name='calculated_host_listings_count' ordinal='62' />
                  <column datatype='integer' name='calculated_host_listings_count_entire_homes' ordinal='63' />
                  <column datatype='integer' name='calculated_host_listings_count_private_rooms' ordinal='64' />
                  <column datatype='integer' name='calculated_host_listings_count_shared_rooms' ordinal='65' />
                  <column datatype='real' name='reviews_per_month' ordinal='66' />
                </columns>
              </relation>
            </relation>
            <relation connection='excel-direct.0yfgyr50vi772m120orxg0w80iq6' name='reviews ' table='[&apos;reviews $&apos;]' type='table'>
              <columns gridOrigin='A1:F10001:no:A1:F10001:0' header='yes' outcome='6'>
                <column datatype='integer' name='listing_id' ordinal='0' />
                <column datatype='integer' name='id' ordinal='1' />
                <column datatype='date' name='date' ordinal='2' />
                <column datatype='integer' name='reviewer_id' ordinal='3' />
                <column datatype='string' name='reviewer_name' ordinal='4' />
                <column datatype='string' name='comments' ordinal='5' />
              </columns>
            </relation>
          </relation>
          <relation connection='excel-direct.0fcq1l61xfex6915x9b4z00baq44' name='Sheet2' table='[Sheet2$]' type='table'>
            <columns gridOrigin='A1:C1001:no:A1:C1001:0' header='yes' outcome='6'>
              <column datatype='integer' name='id' ordinal='0' />
              <column datatype='string' name='Attribute' ordinal='1' />
              <column datatype='string' name='Value' ordinal='2' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Attribute]' value='[Sheet2].[Attribute]' />
          <map key='[Value]' value='[Sheet2].[Value]' />
          <map key='[accommodates]' value='[listings].[accommodates]' />
          <map key='[adjusted_price]' value='[data files].[adjusted_price]' />
          <map key='[amenities]' value='[listings].[amenities]' />
          <map key='[availability_30]' value='[listings].[availability_30]' />
          <map key='[availability_365]' value='[listings].[availability_365]' />
          <map key='[availability_60]' value='[listings].[availability_60]' />
          <map key='[availability_90]' value='[listings].[availability_90]' />
          <map key='[available]' value='[data files].[available]' />
          <map key='[bathrooms]' value='[listings].[bathrooms]' />
          <map key='[bathrooms_text]' value='[listings].[bathrooms_text]' />
          <map key='[bedrooms]' value='[listings].[bedrooms]' />
          <map key='[beds]' value='[listings].[beds]' />
          <map key='[calculated_host_listings_count]' value='[listings].[calculated_host_listings_count]' />
          <map key='[calculated_host_listings_count_entire_homes]' value='[listings].[calculated_host_listings_count_entire_homes]' />
          <map key='[calculated_host_listings_count_private_rooms]' value='[listings].[calculated_host_listings_count_private_rooms]' />
          <map key='[calculated_host_listings_count_shared_rooms]' value='[listings].[calculated_host_listings_count_shared_rooms]' />
          <map key='[calendar_last_scraped]' value='[listings].[calendar_last_scraped]' />
          <map key='[calendar_updated]' value='[listings].[calendar_updated]' />
          <map key='[comments]' value='[reviews ].[comments]' />
          <map key='[date (reviews )]' value='[reviews ].[date]' />
          <map key='[date]' value='[data files].[date]' />
          <map key='[description]' value='[listings].[description]' />
          <map key='[first_review]' value='[listings].[first_review]' />
          <map key='[has_availability]' value='[listings].[has_availability]' />
          <map key='[host_about]' value='[listings].[host_about]' />
          <map key='[host_acceptance_rate]' value='[listings].[host_acceptance_rate]' />
          <map key='[host_has_profile_pic]' value='[listings].[host_has_profile_pic]' />
          <map key='[host_id]' value='[listings].[host_id]' />
          <map key='[host_identity_verified]' value='[listings].[host_identity_verified]' />
          <map key='[host_is_superhost]' value='[listings].[host_is_superhost]' />
          <map key='[host_listings_count]' value='[listings].[host_listings_count]' />
          <map key='[host_location]' value='[listings].[host_location]' />
          <map key='[host_name]' value='[listings].[host_name]' />
          <map key='[host_response_rate]' value='[listings].[host_response_rate]' />
          <map key='[host_response_time]' value='[listings].[host_response_time]' />
          <map key='[host_since]' value='[listings].[host_since]' />
          <map key='[host_total_listings_count]' value='[listings].[host_total_listings_count]' />
          <map key='[host_verifications]' value='[listings].[host_verifications]' />
          <map key='[id (Sheet2)]' value='[Sheet2].[id]' />
          <map key='[id (reviews )]' value='[reviews ].[id]' />
          <map key='[id]' value='[listings].[id]' />
          <map key='[instant_bookable]' value='[listings].[instant_bookable]' />
          <map key='[last_review]' value='[listings].[last_review]' />
          <map key='[latitude]' value='[listings].[latitude]' />
          <map key='[license]' value='[listings].[license]' />
          <map key='[listing_id (reviews )]' value='[reviews ].[listing_id]' />
          <map key='[listing_id]' value='[data files].[listing_id]' />
          <map key='[longitude]' value='[listings].[longitude]' />
          <map key='[maximum_maximum_nights]' value='[listings].[maximum_maximum_nights]' />
          <map key='[maximum_minimum_nights]' value='[listings].[maximum_minimum_nights]' />
          <map key='[maximum_nights (listings)]' value='[listings].[maximum_nights]' />
          <map key='[maximum_nights]' value='[data files].[maximum_nights]' />
          <map key='[maximum_nights_avg_ntm]' value='[listings].[maximum_nights_avg_ntm]' />
          <map key='[minimum_maximum_nights]' value='[listings].[minimum_maximum_nights]' />
          <map key='[minimum_minimum_nights]' value='[listings].[minimum_minimum_nights]' />
          <map key='[minimum_nights (listings)]' value='[listings].[minimum_nights]' />
          <map key='[minimum_nights]' value='[data files].[minimum_nights]' />
          <map key='[minimum_nights_avg_ntm]' value='[listings].[minimum_nights_avg_ntm]' />
          <map key='[name]' value='[listings].[name]' />
          <map key='[neighborhood_overview]' value='[listings].[neighborhood_overview]' />
          <map key='[neighbourhood]' value='[listings].[neighbourhood]' />
          <map key='[neighbourhood_cleansed]' value='[listings].[neighbourhood_cleansed]' />
          <map key='[neighbourhood_group_cleansed]' value='[listings].[neighbourhood_group_cleansed]' />
          <map key='[number_of_reviews]' value='[listings].[number_of_reviews]' />
          <map key='[number_of_reviews_l30d]' value='[listings].[number_of_reviews_l30d]' />
          <map key='[number_of_reviews_ltm]' value='[listings].[number_of_reviews_ltm]' />
          <map key='[price (listings)]' value='[listings].[price]' />
          <map key='[price]' value='[data files].[price]' />
          <map key='[property_type]' value='[listings].[property_type]' />
          <map key='[review_scores_accuracy]' value='[listings].[review_scores_accuracy]' />
          <map key='[review_scores_checkin]' value='[listings].[review_scores_checkin]' />
          <map key='[review_scores_cleanliness]' value='[listings].[review_scores_cleanliness]' />
          <map key='[review_scores_communication]' value='[listings].[review_scores_communication]' />
          <map key='[review_scores_location]' value='[listings].[review_scores_location]' />
          <map key='[review_scores_rating]' value='[listings].[review_scores_rating]' />
          <map key='[review_scores_value]' value='[listings].[review_scores_value]' />
          <map key='[reviewer_id]' value='[reviews ].[reviewer_id]' />
          <map key='[reviewer_name]' value='[reviews ].[reviewer_name]' />
          <map key='[reviews_per_month]' value='[listings].[reviews_per_month]' />
          <map key='[room_type]' value='[listings].[room_type]' />
          <map key='[source]' value='[listings].[source]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[data files]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:G10001:no:A1:G10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[listings]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:BO10001:no:A1:BO10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[reviews ]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:F10001:no:A1:F10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet2]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C1001:no:A1:C1001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>listing_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[listing_id]</local-name>
            <parent-name>[data files]</parent-name>
            <remote-alias>listing_id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data files_77B996D8F24C4A9C92BE380A5C653AC4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[data files]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data files_77B996D8F24C4A9C92BE380A5C653AC4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>available</remote-name>
            <remote-type>130</remote-type>
            <local-name>[available]</local-name>
            <parent-name>[data files]</parent-name>
            <remote-alias>available</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data files_77B996D8F24C4A9C92BE380A5C653AC4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>price</remote-name>
            <remote-type>20</remote-type>
            <local-name>[price]</local-name>
            <parent-name>[data files]</parent-name>
            <remote-alias>price</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data files_77B996D8F24C4A9C92BE380A5C653AC4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>adjusted_price</remote-name>
            <remote-type>20</remote-type>
            <local-name>[adjusted_price]</local-name>
            <parent-name>[data files]</parent-name>
            <remote-alias>adjusted_price</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data files_77B996D8F24C4A9C92BE380A5C653AC4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>minimum_nights</remote-name>
            <remote-type>20</remote-type>
            <local-name>[minimum_nights]</local-name>
            <parent-name>[data files]</parent-name>
            <remote-alias>minimum_nights</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data files_77B996D8F24C4A9C92BE380A5C653AC4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>maximum_nights</remote-name>
            <remote-type>20</remote-type>
            <local-name>[maximum_nights]</local-name>
            <parent-name>[data files]</parent-name>
            <remote-alias>maximum_nights</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data files_77B996D8F24C4A9C92BE380A5C653AC4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[listings]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data files_77B996D8F24C4A9C92BE380A5C653AC4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>source</remote-name>
            <remote-type>130</remote-type>
            <local-name>[source]</local-name>
            <parent-name>[listings]</parent-name>
            <remote-alias>source</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data files_77B996D8F24C4A9C92BE380A5C653AC4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[listings]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data files_77B996D8F24C4A9C92BE380A5C653AC4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>description</remote-name>
            <remote-type>130</remote-type>
            <local-name>[description]</local-name>
            <parent-name>[listings]</parent-name>
            <remote-alias>description</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data files_77B996D8F24C4A9C92BE380A5C653AC4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>neighborhood_overview</remote-name>
            <remote-type>130</remote-type>
            <local-name>[neighborhood_overview]</local-name>
            <parent-name>[listings]</parent-name>
            <remote-alias>neighborhood_overview</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data files_77B996D8F24C4A9C92BE380A5C653AC4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>host_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[host_id]</local-name>
            <parent-name>[listings]</parent-name>
            <remote-alias>host_id</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data files_77B996D8F24C4A9C92BE380A5C653AC4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>host_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[host_name]</local-name>
            <parent-name>[listings]</parent-name>
            <remote-alias>host_name</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data files_77B996D8F24C4A9C92BE380A5C653AC4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>host_since</remote-name>
            <remote-type>7</remote-type>
            <local-name>[host_since]</local-name>
            <parent-name>[listings]</parent-name>
            <remote-alias>host_since</remote-alias>
            <ordinal>14</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data files_77B996D8F24C4A9C92BE380A5C653AC4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>host_location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[host_location]</local-name>
            <parent-name>[listings]</parent-name>
            <remote-alias>host_location</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data files_77B996D8F24C4A9C92BE380A5C653AC4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>host_about</remote-name>
            <remote-type>130</remote-type>
            <local-name>[host_about]</local-name>
            <parent-name>[listings]</parent-name>
            <remote-alias>host_about</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data files_77B996D8F24C4A9C92BE380A5C653AC4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>host_response_time</remote-name>
            <remote-type>130</remote-type>
            <local-name>[host_response_time]</local-name>
            <parent-name>[listings]</parent-name>
            <remote-alias>host_response_time</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data files_77B996D8F24C4A9C92BE380A5C653AC4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>host_response_rate</remote-name>
            <remote-type>130</remote-type>
            <local-name>[host_response_rate]</local-name>
            <parent-name>[listings]</parent-name>
            <remote-alias>host_response_rate</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data files_77B996D8F24C4A9C92BE380A5C653AC4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>host_acceptance_rate</remote-name>
            <remote-type>130</remote-type>
            <local-name>[host_acceptance_rate]</local-name>
            <parent-name>[listings]</parent-name>
            <remote-alias>host_acceptance_rate</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data files_77B996D8F24C4A9C92BE380A5C653AC4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>host_is_superhost</remote-name>
            <remote-type>130</remote-type>
            <local-name>[host_is_superhost]</local-name>
            <parent-name>[listings]</parent-name>
            <remote-alias>host_is_superhost</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data files_77B996D8F24C4A9C92BE380A5C653AC4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>host_listings_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[host_listings_count]</local-name>
            <parent-name>[listings]</parent-name>
            <remote-alias>host_listings_count</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data files_77B996D8F24C4A9C92BE380A5C653AC4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>host_total_listings_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[host_total_listings_count]</local-name>
            <parent-name>[listings]</parent-name>
            <remote-alias>host_total_listings_count</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data files_77B996D8F24C4A9C92BE380A5C653AC4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>host_verifications</remote-name>
            <remote-type>130</remote-type>
            <local-name>[host_verifications]</local-name>
            <parent-name>[listings]</parent-name>
            <remote-alias>host_verifications</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data files_77B996D8F24C4A9C92BE380A5C653AC4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>host_has_profile_pic</remote-name>
            <remote-type>130</remote-type>
            <local-name>[host_has_profile_pic]</local-name>
            <parent-name>[listings]</parent-name>
            <remote-alias>host_has_profile_pic</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data files_77B996D8F24C4A9C92BE380A5C653AC4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>host_identity_verified</remote-name>
            <remote-type>130</remote-type>
            <local-name>[host_identity_verified]</local-name>
            <parent-name>[listings]</parent-name>
            <remote-alias>host_identity_verified</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data files_77B996D8F24C4A9C92BE380A5C653AC4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>neighbourhood</remote-name>
            <remote-type>130</remote-type>
            <local-name>[neighbourhood]</local-name>
            <parent-name>[listings]</parent-name>
            <remote-alias>neighbourhood</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data files_77B996D8F24C4A9C92BE380A5C653AC4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>neighbourhood_cleansed</remote-name>
            <remote-type>130</remote-type>
            <local-name>[neighbourhood_cleansed]</local-name>
            <parent-name>[listings]</parent-name>
            <remote-alias>neighbourhood_cleansed</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data files_77B996D8F24C4A9C92BE380A5C653AC4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>neighbourhood_group_cleansed</remote-name>
            <remote-type>130</remote-type>
            <local-name>[neighbourhood_group_cleansed]</local-name>
            <parent-name>[listings]</parent-name>
            <remote-alias>neighbourhood_group_cleansed</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data files_77B996D8F24C4A9C92BE380A5C653AC4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[listings]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data files_77B996D8F24C4A9C92BE380A5C653AC4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[listings]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data files_77B996D8F24C4A9C92BE380A5C653AC4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>property_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[property_type]</local-name>
            <parent-name>[listings]</parent-name>
            <remote-alias>property_type</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data files_77B996D8F24C4A9C92BE380A5C653AC4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>room_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[room_type]</local-name>
            <parent-name>[listings]</parent-name>
            <remote-alias>room_type</remote-alias>
            <ordinal>32</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data files_77B996D8F24C4A9C92BE380A5C653AC4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>accommodates</remote-name>
            <remote-type>20</remote-type>
            <local-name>[accommodates]</local-name>
            <parent-name>[listings]</parent-name>
            <remote-alias>accommodates</remote-alias>
            <ordinal>33</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data files_77B996D8F24C4A9C92BE380A5C653AC4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bathrooms</remote-name>
            <remote-type>130</remote-type>
            <local-name>[bathrooms]</local-name>
            <parent-name>[listings]</parent-name>
            <remote-alias>bathrooms</remote-alias>
            <ordinal>34</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data files_77B996D8F24C4A9C92BE380A5C653AC4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bathrooms_text</remote-name>
            <remote-type>130</remote-type>
            <local-name>[bathrooms_text]</local-name>
            <parent-name>[listings]</parent-name>
            <remote-alias>bathrooms_text</remote-alias>
            <ordinal>35</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data files_77B996D8F24C4A9C92BE380A5C653AC4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bedrooms</remote-name>
            <remote-type>20</remote-type>
            <local-name>[bedrooms]</local-name>
            <parent-name>[listings]</parent-name>
            <remote-alias>bedrooms</remote-alias>
            <ordinal>36</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data files_77B996D8F24C4A9C92BE380A5C653AC4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>beds</remote-name>
            <remote-type>20</remote-type>
            <local-name>[beds]</local-name>
            <parent-name>[listings]</parent-name>
            <remote-alias>beds</remote-alias>
            <ordinal>37</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data files_77B996D8F24C4A9C92BE380A5C653AC4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>amenities</remote-name>
            <remote-type>130</remote-type>
            <local-name>[amenities]</local-name>
            <parent-name>[listings]</parent-name>
            <remote-alias>amenities</remote-alias>
            <ordinal>38</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data files_77B996D8F24C4A9C92BE380A5C653AC4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[price (listings)]</local-name>
            <parent-name>[listings]</parent-name>
            <remote-alias>price</remote-alias>
            <ordinal>39</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data files_77B996D8F24C4A9C92BE380A5C653AC4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>minimum_nights</remote-name>
            <remote-type>20</remote-type>
            <local-name>[minimum_nights (listings)]</local-name>
            <parent-name>[listings]</parent-name>
            <remote-alias>minimum_nights</remote-alias>
            <ordinal>40</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data files_77B996D8F24C4A9C92BE380A5C653AC4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>maximum_nights</remote-name>
            <remote-type>20</remote-type>
            <local-name>[maximum_nights (listings)]</local-name>
            <parent-name>[listings]</parent-name>
            <remote-alias>maximum_nights</remote-alias>
            <ordinal>41</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data files_77B996D8F24C4A9C92BE380A5C653AC4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>minimum_minimum_nights</remote-name>
            <remote-type>20</remote-type>
            <local-name>[minimum_minimum_nights]</local-name>
            <parent-name>[listings]</parent-name>
            <remote-alias>minimum_minimum_nights</remote-alias>
            <ordinal>42</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data files_77B996D8F24C4A9C92BE380A5C653AC4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>maximum_minimum_nights</remote-name>
            <remote-type>20</remote-type>
            <local-name>[maximum_minimum_nights]</local-name>
            <parent-name>[listings]</parent-name>
            <remote-alias>maximum_minimum_nights</remote-alias>
            <ordinal>43</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data files_77B996D8F24C4A9C92BE380A5C653AC4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>minimum_maximum_nights</remote-name>
            <remote-type>20</remote-type>
            <local-name>[minimum_maximum_nights]</local-name>
            <parent-name>[listings]</parent-name>
            <remote-alias>minimum_maximum_nights</remote-alias>
            <ordinal>44</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data files_77B996D8F24C4A9C92BE380A5C653AC4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>maximum_maximum_nights</remote-name>
            <remote-type>20</remote-type>
            <local-name>[maximum_maximum_nights]</local-name>
            <parent-name>[listings]</parent-name>
            <remote-alias>maximum_maximum_nights</remote-alias>
            <ordinal>45</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data files_77B996D8F24C4A9C92BE380A5C653AC4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>minimum_nights_avg_ntm</remote-name>
            <remote-type>5</remote-type>
            <local-name>[minimum_nights_avg_ntm]</local-name>
            <parent-name>[listings]</parent-name>
            <remote-alias>minimum_nights_avg_ntm</remote-alias>
            <ordinal>46</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data files_77B996D8F24C4A9C92BE380A5C653AC4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>maximum_nights_avg_ntm</remote-name>
            <remote-type>5</remote-type>
            <local-name>[maximum_nights_avg_ntm]</local-name>
            <parent-name>[listings]</parent-name>
            <remote-alias>maximum_nights_avg_ntm</remote-alias>
            <ordinal>47</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data files_77B996D8F24C4A9C92BE380A5C653AC4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>calendar_updated</remote-name>
            <remote-type>130</remote-type>
            <local-name>[calendar_updated]</local-name>
            <parent-name>[listings]</parent-name>
            <remote-alias>calendar_updated</remote-alias>
            <ordinal>48</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data files_77B996D8F24C4A9C92BE380A5C653AC4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>has_availability</remote-name>
            <remote-type>130</remote-type>
            <local-name>[has_availability]</local-name>
            <parent-name>[listings]</parent-name>
            <remote-alias>has_availability</remote-alias>
            <ordinal>49</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data files_77B996D8F24C4A9C92BE380A5C653AC4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>availability_30</remote-name>
            <remote-type>20</remote-type>
            <local-name>[availability_30]</local-name>
            <parent-name>[listings]</parent-name>
            <remote-alias>availability_30</remote-alias>
            <ordinal>50</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data files_77B996D8F24C4A9C92BE380A5C653AC4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>availability_60</remote-name>
            <remote-type>20</remote-type>
            <local-name>[availability_60]</local-name>
            <parent-name>[listings]</parent-name>
            <remote-alias>availability_60</remote-alias>
            <ordinal>51</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data files_77B996D8F24C4A9C92BE380A5C653AC4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>availability_90</remote-name>
            <remote-type>20</remote-type>
            <local-name>[availability_90]</local-name>
            <parent-name>[listings]</parent-name>
            <remote-alias>availability_90</remote-alias>
            <ordinal>52</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data files_77B996D8F24C4A9C92BE380A5C653AC4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>availability_365</remote-name>
            <remote-type>20</remote-type>
            <local-name>[availability_365]</local-name>
            <parent-name>[listings]</parent-name>
            <remote-alias>availability_365</remote-alias>
            <ordinal>53</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data files_77B996D8F24C4A9C92BE380A5C653AC4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>calendar_last_scraped</remote-name>
            <remote-type>7</remote-type>
            <local-name>[calendar_last_scraped]</local-name>
            <parent-name>[listings]</parent-name>
            <remote-alias>calendar_last_scraped</remote-alias>
            <ordinal>54</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data files_77B996D8F24C4A9C92BE380A5C653AC4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>number_of_reviews</remote-name>
            <remote-type>20</remote-type>
            <local-name>[number_of_reviews]</local-name>
            <parent-name>[listings]</parent-name>
            <remote-alias>number_of_reviews</remote-alias>
            <ordinal>55</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data files_77B996D8F24C4A9C92BE380A5C653AC4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>number_of_reviews_ltm</remote-name>
            <remote-type>20</remote-type>
            <local-name>[number_of_reviews_ltm]</local-name>
            <parent-name>[listings]</parent-name>
            <remote-alias>number_of_reviews_ltm</remote-alias>
            <ordinal>56</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data files_77B996D8F24C4A9C92BE380A5C653AC4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>number_of_reviews_l30d</remote-name>
            <remote-type>20</remote-type>
            <local-name>[number_of_reviews_l30d]</local-name>
            <parent-name>[listings]</parent-name>
            <remote-alias>number_of_reviews_l30d</remote-alias>
            <ordinal>57</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data files_77B996D8F24C4A9C92BE380A5C653AC4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>first_review</remote-name>
            <remote-type>7</remote-type>
            <local-name>[first_review]</local-name>
            <parent-name>[listings]</parent-name>
            <remote-alias>first_review</remote-alias>
            <ordinal>58</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data files_77B996D8F24C4A9C92BE380A5C653AC4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>last_review</remote-name>
            <remote-type>7</remote-type>
            <local-name>[last_review]</local-name>
            <parent-name>[listings]</parent-name>
            <remote-alias>last_review</remote-alias>
            <ordinal>59</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data files_77B996D8F24C4A9C92BE380A5C653AC4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>review_scores_rating</remote-name>
            <remote-type>5</remote-type>
            <local-name>[review_scores_rating]</local-name>
            <parent-name>[listings]</parent-name>
            <remote-alias>review_scores_rating</remote-alias>
            <ordinal>60</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data files_77B996D8F24C4A9C92BE380A5C653AC4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>review_scores_accuracy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[review_scores_accuracy]</local-name>
            <parent-name>[listings]</parent-name>
            <remote-alias>review_scores_accuracy</remote-alias>
            <ordinal>61</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data files_77B996D8F24C4A9C92BE380A5C653AC4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>review_scores_cleanliness</remote-name>
            <remote-type>5</remote-type>
            <local-name>[review_scores_cleanliness]</local-name>
            <parent-name>[listings]</parent-name>
            <remote-alias>review_scores_cleanliness</remote-alias>
            <ordinal>62</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data files_77B996D8F24C4A9C92BE380A5C653AC4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>review_scores_checkin</remote-name>
            <remote-type>5</remote-type>
            <local-name>[review_scores_checkin]</local-name>
            <parent-name>[listings]</parent-name>
            <remote-alias>review_scores_checkin</remote-alias>
            <ordinal>63</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data files_77B996D8F24C4A9C92BE380A5C653AC4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>review_scores_communication</remote-name>
            <remote-type>5</remote-type>
            <local-name>[review_scores_communication]</local-name>
            <parent-name>[listings]</parent-name>
            <remote-alias>review_scores_communication</remote-alias>
            <ordinal>64</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data files_77B996D8F24C4A9C92BE380A5C653AC4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>review_scores_location</remote-name>
            <remote-type>5</remote-type>
            <local-name>[review_scores_location]</local-name>
            <parent-name>[listings]</parent-name>
            <remote-alias>review_scores_location</remote-alias>
            <ordinal>65</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data files_77B996D8F24C4A9C92BE380A5C653AC4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>review_scores_value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[review_scores_value]</local-name>
            <parent-name>[listings]</parent-name>
            <remote-alias>review_scores_value</remote-alias>
            <ordinal>66</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data files_77B996D8F24C4A9C92BE380A5C653AC4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>license</remote-name>
            <remote-type>130</remote-type>
            <local-name>[license]</local-name>
            <parent-name>[listings]</parent-name>
            <remote-alias>license</remote-alias>
            <ordinal>67</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data files_77B996D8F24C4A9C92BE380A5C653AC4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>instant_bookable</remote-name>
            <remote-type>130</remote-type>
            <local-name>[instant_bookable]</local-name>
            <parent-name>[listings]</parent-name>
            <remote-alias>instant_bookable</remote-alias>
            <ordinal>68</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data files_77B996D8F24C4A9C92BE380A5C653AC4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>calculated_host_listings_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[calculated_host_listings_count]</local-name>
            <parent-name>[listings]</parent-name>
            <remote-alias>calculated_host_listings_count</remote-alias>
            <ordinal>69</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data files_77B996D8F24C4A9C92BE380A5C653AC4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>calculated_host_listings_count_entire_homes</remote-name>
            <remote-type>20</remote-type>
            <local-name>[calculated_host_listings_count_entire_homes]</local-name>
            <parent-name>[listings]</parent-name>
            <remote-alias>calculated_host_listings_count_entire_homes</remote-alias>
            <ordinal>70</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data files_77B996D8F24C4A9C92BE380A5C653AC4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>calculated_host_listings_count_private_rooms</remote-name>
            <remote-type>20</remote-type>
            <local-name>[calculated_host_listings_count_private_rooms]</local-name>
            <parent-name>[listings]</parent-name>
            <remote-alias>calculated_host_listings_count_private_rooms</remote-alias>
            <ordinal>71</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data files_77B996D8F24C4A9C92BE380A5C653AC4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>calculated_host_listings_count_shared_rooms</remote-name>
            <remote-type>20</remote-type>
            <local-name>[calculated_host_listings_count_shared_rooms]</local-name>
            <parent-name>[listings]</parent-name>
            <remote-alias>calculated_host_listings_count_shared_rooms</remote-alias>
            <ordinal>72</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data files_77B996D8F24C4A9C92BE380A5C653AC4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>reviews_per_month</remote-name>
            <remote-type>5</remote-type>
            <local-name>[reviews_per_month]</local-name>
            <parent-name>[listings]</parent-name>
            <remote-alias>reviews_per_month</remote-alias>
            <ordinal>73</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data files_77B996D8F24C4A9C92BE380A5C653AC4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>listing_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[listing_id (reviews )]</local-name>
            <parent-name>[reviews ]</parent-name>
            <remote-alias>listing_id</remote-alias>
            <ordinal>74</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data files_77B996D8F24C4A9C92BE380A5C653AC4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id (reviews )]</local-name>
            <parent-name>[reviews ]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>75</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data files_77B996D8F24C4A9C92BE380A5C653AC4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date (reviews )]</local-name>
            <parent-name>[reviews ]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>76</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data files_77B996D8F24C4A9C92BE380A5C653AC4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>reviewer_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[reviewer_id]</local-name>
            <parent-name>[reviews ]</parent-name>
            <remote-alias>reviewer_id</remote-alias>
            <ordinal>77</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data files_77B996D8F24C4A9C92BE380A5C653AC4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>reviewer_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[reviewer_name]</local-name>
            <parent-name>[reviews ]</parent-name>
            <remote-alias>reviewer_name</remote-alias>
            <ordinal>78</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data files_77B996D8F24C4A9C92BE380A5C653AC4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>comments</remote-name>
            <remote-type>130</remote-type>
            <local-name>[comments]</local-name>
            <parent-name>[reviews ]</parent-name>
            <remote-alias>comments</remote-alias>
            <ordinal>79</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data files_77B996D8F24C4A9C92BE380A5C653AC4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id (Sheet2)]</local-name>
            <parent-name>[Sheet2]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>80</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data files_77B996D8F24C4A9C92BE380A5C653AC4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Attribute</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Attribute]</local-name>
            <parent-name>[Sheet2]</parent-name>
            <remote-alias>Attribute</remote-alias>
            <ordinal>81</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data files_77B996D8F24C4A9C92BE380A5C653AC4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Value</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Value]</local-name>
            <parent-name>[Sheet2]</parent-name>
            <remote-alias>Value</remote-alias>
            <ordinal>82</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data files_77B996D8F24C4A9C92BE380A5C653AC4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[avg:price (listings):qk]&quot;' value='Avg. Price' />
          <alias key='&quot;[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[max:price (listings):qk]&quot;' value='Max. Price' />
          <alias key='&quot;[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[min:price (listings):qk]&quot;' value='Min. Price' />
          <alias key='&quot;[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[sum:price (listings):qk]&quot;' value='Price' />
          <alias key='&quot;[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[sum:price:qk]&quot;' value='Prices' />
        </aliases>
      </column>
      <column caption='month' datatype='integer' name='[Calculation_2549881870621995008]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='DATEPART(&apos;month&apos;,[date])' />
      </column>
      <column caption='Season' datatype='string' name='[Calculation_2549881870625669121]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_2549881870621995008]&gt;=1 AND [Calculation_2549881870621995008]&lt;4 THEN &apos;Winter&apos;&#13;&#10;ELSEIF [Calculation_2549881870621995008]&gt;=4 AND [Calculation_2549881870621995008]&lt;7 THEN &apos;Spring&apos;&#13;&#10;ELSEIF [Calculation_2549881870621995008]&gt;=7 AND [Calculation_2549881870621995008]&lt;10 THEN &apos;Summer&apos;&#13;&#10;ELSE &apos;Autumn&apos;&#13;&#10;END' />
      </column>
      <column aggregation='Avg' caption='HEXBIN X' datatype='real' name='[Calculation_2549881870627368962]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative'>
        <calculation class='tableau' formula='HEXBINX([longitude]*[Parameters].[Parameter 1],[latitude]*[Parameters].[Parameter 1])/[Parameters].[Parameter 1]' />
      </column>
      <column caption='InUse' datatype='integer' name='[Calculation_2549881870966579205]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [available]==&apos;f&apos; THEN 1&#13;&#10;ELSE 0&#13;&#10;END' />
      </column>
      <column aggregation='Avg' caption='HEXBIN Y' datatype='real' name='[HEXBIN X (copy)_2549881870627528707]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative'>
        <calculation class='tableau' formula='HEXBINY([longitude]*[Parameters].[Parameter 1],[latitude]*[Parameters].[Parameter 1])/[Parameters].[Parameter 1]' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='data files' datatype='table' name='[__tableau_internal_object_id__].[data files_77B996D8F24C4A9C92BE380A5C653AC4]' role='measure' type='quantitative' />
      <column caption='Accommodates' datatype='integer' name='[accommodates]' role='measure' type='quantitative' />
      <column caption='Adjusted Price' datatype='integer' name='[adjusted_price]' role='measure' type='quantitative' />
      <column caption='Amenities' datatype='string' name='[amenities]' role='dimension' type='nominal' />
      <column caption='Availability 30' datatype='integer' name='[availability_30]' role='measure' type='quantitative' />
      <column caption='Availability 365' datatype='integer' name='[availability_365]' role='measure' type='quantitative' />
      <column caption='Availability 60' datatype='integer' name='[availability_60]' role='measure' type='quantitative' />
      <column caption='Availability 90' datatype='integer' name='[availability_90]' role='measure' type='quantitative' />
      <column caption='Available' datatype='string' name='[available]' role='dimension' type='nominal' />
      <column caption='Bathrooms' datatype='string' name='[bathrooms]' role='dimension' type='nominal' />
      <column caption='Bathrooms Text' datatype='string' name='[bathrooms_text]' role='dimension' type='nominal' />
      <column caption='Bedrooms' datatype='integer' name='[bedrooms]' role='measure' type='quantitative' />
      <column caption='Beds' datatype='integer' name='[beds]' role='measure' type='quantitative' />
      <column caption='Calculated Host Listings Count' datatype='integer' name='[calculated_host_listings_count]' role='measure' type='quantitative' />
      <column caption='Calculated Host Listings Count Entire Homes' datatype='integer' name='[calculated_host_listings_count_entire_homes]' role='measure' type='quantitative' />
      <column caption='Calculated Host Listings Count Private Rooms' datatype='integer' name='[calculated_host_listings_count_private_rooms]' role='measure' type='quantitative' />
      <column caption='Calculated Host Listings Count Shared Rooms' datatype='integer' name='[calculated_host_listings_count_shared_rooms]' role='measure' type='quantitative' />
      <column caption='Calendar Last Scraped' datatype='date' name='[calendar_last_scraped]' role='dimension' type='ordinal' />
      <column caption='Calendar Updated' datatype='string' name='[calendar_updated]' role='dimension' type='nominal' />
      <column caption='Comments' datatype='string' name='[comments]' role='dimension' type='nominal' />
      <column caption='Date (Reviews )' datatype='date' name='[date (reviews )]' role='dimension' type='ordinal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Description' datatype='string' name='[description]' role='dimension' type='nominal' />
      <column caption='First Review' datatype='date' name='[first_review]' role='dimension' type='ordinal' />
      <column caption='Has Availability' datatype='string' name='[has_availability]' role='dimension' type='nominal' />
      <column caption='Host About' datatype='string' name='[host_about]' role='dimension' type='nominal' />
      <column caption='Host Acceptance Rate' datatype='string' name='[host_acceptance_rate]' role='dimension' type='nominal' />
      <column caption='Host Has Profile Pic' datatype='string' name='[host_has_profile_pic]' role='dimension' type='nominal' />
      <column caption='Host Id' datatype='integer' name='[host_id]' role='dimension' type='ordinal' />
      <column caption='Host Identity Verified' datatype='string' name='[host_identity_verified]' role='dimension' type='nominal' />
      <column caption='Host Is Superhost' datatype='string' name='[host_is_superhost]' role='dimension' type='nominal' />
      <column caption='Host Listings Count' datatype='integer' name='[host_listings_count]' role='measure' type='quantitative' />
      <column caption='Host Location' datatype='string' name='[host_location]' role='dimension' type='nominal' />
      <column caption='Host Name' datatype='string' name='[host_name]' role='dimension' type='nominal' />
      <column caption='Host Response Rate' datatype='string' name='[host_response_rate]' role='dimension' type='nominal' />
      <column caption='Host Response Time' datatype='string' name='[host_response_time]' role='dimension' type='nominal' />
      <column caption='Host Since' datatype='date' name='[host_since]' role='dimension' type='ordinal' />
      <column caption='Host Total Listings Count' datatype='integer' name='[host_total_listings_count]' role='measure' type='quantitative' />
      <column caption='Host Verifications' datatype='string' name='[host_verifications]' role='dimension' type='nominal' />
      <column datatype='integer' name='[id (Sheet2)]' role='dimension' type='ordinal' />
      <column caption='Id (Reviews )' datatype='integer' name='[id (reviews )]' role='dimension' type='ordinal' />
      <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
      <column caption='Instant Bookable' datatype='string' name='[instant_bookable]' role='dimension' type='nominal' />
      <column caption='Last Review' datatype='date' name='[last_review]' role='dimension' type='ordinal' />
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column caption='License' datatype='string' name='[license]' role='dimension' type='nominal' />
      <column caption='Listing Id (Reviews )' datatype='integer' name='[listing_id (reviews )]' role='dimension' type='ordinal' />
      <column caption='Listing Id' datatype='integer' name='[listing_id]' role='dimension' type='ordinal' />
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Maximum Maximum Nights' datatype='integer' name='[maximum_maximum_nights]' role='measure' type='quantitative' />
      <column caption='Maximum Minimum Nights' datatype='integer' name='[maximum_minimum_nights]' role='measure' type='quantitative' />
      <column caption='Maximum Nights (Listings)' datatype='integer' name='[maximum_nights (listings)]' role='measure' type='quantitative' />
      <column caption='Maximum Nights' datatype='integer' name='[maximum_nights]' role='measure' type='quantitative' />
      <column caption='Maximum Nights Avg Ntm' datatype='real' name='[maximum_nights_avg_ntm]' role='measure' type='quantitative' />
      <column caption='Minimum Maximum Nights' datatype='integer' name='[minimum_maximum_nights]' role='measure' type='quantitative' />
      <column caption='Minimum Minimum Nights' datatype='integer' name='[minimum_minimum_nights]' role='measure' type='quantitative' />
      <column caption='Minimum Nights (Listings)' datatype='integer' name='[minimum_nights (listings)]' role='measure' type='quantitative' />
      <column caption='Minimum Nights' datatype='integer' name='[minimum_nights]' role='measure' type='quantitative' />
      <column caption='Minimum Nights Avg Ntm' datatype='real' name='[minimum_nights_avg_ntm]' role='measure' type='quantitative' />
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
      <column caption='Neighborhood Overview' datatype='string' name='[neighborhood_overview]' role='dimension' type='nominal' />
      <column caption='Neighbourhood' datatype='string' name='[neighbourhood]' role='dimension' type='nominal' />
      <column caption='Neighbourhood Cleansed' datatype='string' name='[neighbourhood_cleansed]' role='dimension' type='nominal' />
      <column caption='Neighbourhood Group Cleansed' datatype='string' name='[neighbourhood_group_cleansed]' role='dimension' type='nominal' />
      <column caption='Number Of Reviews' datatype='integer' name='[number_of_reviews]' role='measure' type='quantitative' />
      <column caption='Number Of Reviews L30D' datatype='integer' name='[number_of_reviews_l30d]' role='measure' type='quantitative' />
      <column caption='Number Of Reviews Ltm' datatype='integer' name='[number_of_reviews_ltm]' role='measure' type='quantitative' />
      <column caption='Price (Listings)' datatype='real' name='[price (listings)]' role='measure' type='quantitative' />
      <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
      <column caption='Property Type' datatype='string' name='[property_type]' role='dimension' type='nominal' />
      <column caption='Review Scores Accuracy' datatype='real' name='[review_scores_accuracy]' role='measure' type='quantitative' />
      <column caption='Review Scores Checkin' datatype='real' name='[review_scores_checkin]' role='measure' type='quantitative' />
      <column caption='Review Scores Cleanliness' datatype='real' name='[review_scores_cleanliness]' role='measure' type='quantitative' />
      <column caption='Review Scores Communication' datatype='real' name='[review_scores_communication]' role='measure' type='quantitative' />
      <column caption='Review Scores Location' datatype='real' name='[review_scores_location]' role='measure' type='quantitative' />
      <column caption='Review Scores Rating' datatype='real' name='[review_scores_rating]' role='measure' type='quantitative' />
      <column caption='Review Scores Value' datatype='real' name='[review_scores_value]' role='measure' type='quantitative' />
      <column caption='Reviewer Id' datatype='integer' name='[reviewer_id]' role='dimension' type='ordinal' />
      <column caption='Reviewer Name' datatype='string' name='[reviewer_name]' role='dimension' type='nominal' />
      <column caption='Reviews Per Month' datatype='real' name='[reviews_per_month]' role='dimension' type='quantitative' />
      <column caption='Room Type' datatype='string' name='[room_type]' role='dimension' type='nominal' />
      <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
      <column-instance column='[Calculation_2549881870966579205]' derivation='Avg' name='[avg:Calculation_2549881870966579205:qk]' pivot='key' type='quantitative' />
      <column-instance column='[price (listings)]' derivation='Avg' name='[avg:price (listings):qk]' pivot='key' type='quantitative' />
      <column-instance column='[review_scores_rating]' derivation='Avg' name='[avg:review_scores_rating:qk]' pivot='key' type='quantitative' />
      <column-instance column='[date]' derivation='Day' name='[dy:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[price (listings)]' derivation='Max' name='[max:price (listings):qk]' pivot='key' type='quantitative' />
      <column-instance column='[price (listings)]' derivation='Min' name='[min:price (listings):qk]' pivot='key' type='quantitative' />
      <column-instance column='[review_scores_rating]' derivation='Min' name='[min:review_scores_rating:qk]' pivot='key' type='quantitative' />
      <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_2549881870627368962]' derivation='None' name='[none:Calculation_2549881870627368962:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_2549881870966579205]' derivation='None' name='[none:Calculation_2549881870966579205:qk]' pivot='key' type='quantitative' />
      <column-instance column='[HEXBIN X (copy)_2549881870627528707]' derivation='None' name='[none:HEXBIN X (copy)_2549881870627528707:ok]' pivot='key' type='ordinal' />
      <column-instance column='[neighbourhood_cleansed]' derivation='None' name='[none:neighbourhood_cleansed:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_2549881870966579205]' derivation='Sum' name='[sum:Calculation_2549881870966579205:qk]' pivot='key' type='quantitative' />
      <column-instance column='[price (listings)]' derivation='Sum' name='[sum:price (listings):qk]' pivot='key' type='quantitative' />
      <column-instance column='[price]' derivation='Sum' name='[sum:price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[review_scores_rating]' derivation='Sum' name='[sum:review_scores_rating:qk]' pivot='key' type='quantitative' />
      <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:ok]' pivot='key' type='ordinal' />
      <group caption='Action (HEXBIN X,HEXBIN Y)' hidden='true' name='[Action (HEXBIN X,HEXBIN Y)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Calculation_2549881870627368962:ok]' />
          <groupfilter function='level-members' level='[none:HEXBIN X (copy)_2549881870627528707:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (HEXBIN X,HEXBIN Y,Neighbourhood Cleansed)' hidden='true' name='[Action (HEXBIN X,HEXBIN Y,Neighbourhood Cleansed)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Calculation_2549881870627368962:ok]' />
          <groupfilter function='level-members' level='[none:HEXBIN X (copy)_2549881870627528707:ok]' />
          <groupfilter function='level-members' level='[neighbourhood_cleansed]' />
        </groupfilter>
      </group>
      <group caption='Action (Neighbourhood Cleansed)' hidden='true' name='[Action (Neighbourhood Cleansed)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[neighbourhood_cleansed]' />
        </groupfilter>
      </group>
      <group caption='Action (Room Type)' hidden='true' name='[Action (Room Type)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[room_type]' />
        </groupfilter>
      </group>
      <group caption='Action (Season,MONTH(Date))' hidden='true' name='[Action (Season,MONTH(Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_2549881870625669121]' />
          <groupfilter function='level-members' level='[mn:date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Season,MONTH(Date),DAY(Date))' hidden='true' name='[Action (Season,MONTH(Date),DAY(Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_2549881870625669121]' />
          <groupfilter function='level-members' level='[mn:date:ok]' />
          <groupfilter function='level-members' level='[dy:date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Season,MONTH(Date),Room Type)' hidden='true' name='[Action (Season,MONTH(Date),Room Type)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_2549881870625669121]' />
          <groupfilter function='level-members' level='[tmn:date:ok]' />
          <groupfilter function='level-members' level='[room_type]' />
        </groupfilter>
      </group>
      <group caption='Neighbourhood Good Review' name='[Neighbourhood Cleansed Set 2]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter expression='MIN([review_scores_rating]) &gt; 4.' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
          <groupfilter function='level-members' level='[neighbourhood_cleansed]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        </groupfilter>
      </group>
      <group caption='Neighbourhood Top Review' name='[Neighbourhood Cleansed Set]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='[Parameters].[Parameter 2]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='MIN([review_scores_rating])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[neighbourhood_cleansed]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='Neighbourhood No Airbnb' name='[Neighbourhood No Airbnb]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='[Parameters].[Parameter 2]' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='COUNT([listing_id])' function='order' user:ui-marker='order'>
            <groupfilter expression='COUNT([host_id]) &gt; 10' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[neighbourhood_cleansed]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </groupfilter>
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[avg:Calculation_2549881870966579205:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[none:Calculation_2549881870966579205:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[sum:Calculation_2549881870966579205:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[avg:review_scores_rating:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[min:review_scores_rating:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[sum:review_scores_rating:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Neighbourhood Cleansed Set]' type='palette'>
            <map to='#499894'>
              <bucket>(&quot;Bayview Woods-Steeles&quot;)</bucket>
            </map>
            <map to='#499894'>
              <bucket>(&quot;Don Valley Village&quot;)</bucket>
            </map>
            <map to='#499894'>
              <bucket>(&quot;Dorset Park&quot;)</bucket>
            </map>
            <map to='#499894'>
              <bucket>(&quot;Long Branch&quot;)</bucket>
            </map>
            <map to='#499894'>
              <bucket>(&quot;Old East York&quot;)</bucket>
            </map>
            <map to='#499894'>
              <bucket>(&quot;South Parkdale&quot;)</bucket>
            </map>
            <map to='#499894'>
              <bucket>(&quot;Woodbine-Lumsden&quot;)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(&quot;Agincourt North&quot;)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(&quot;Bathurst Manor&quot;)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(&quot;Briar Hill-Belgravia&quot;)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(&quot;Flemingdon Park&quot;)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(&quot;Mount Pleasant East&quot;)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(&quot;Steeles&quot;)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(&quot;Weston&quot;)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(&quot;Banbury-Don Mills&quot;)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(&quot;Glenfield-Jane Heights&quot;)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(&quot;Greenwood-Coxwell&quot;)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(&quot;Lawrence Park North&quot;)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(&quot;North St.James Town&quot;)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(&quot;Rouge&quot;)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(&quot;Willowdale West&quot;)</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>(&quot;Forest Hill North&quot;)</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>(&quot;Yonge-St.Clair&quot;)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(&quot;Birchcliffe-Cliffside&quot;)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(&quot;Dufferin Grove&quot;)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(&quot;Milliken&quot;)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(&quot;Playter Estates-Danforth&quot;)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(&quot;Scarborough Village&quot;)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(&quot;Thorncliffe Park&quot;)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(&quot;York University Heights&quot;)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(&quot;Bedford Park-Nortown&quot;)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(&quot;High Park-Swansea&quot;)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(&quot;Malvern&quot;)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(&quot;Palmerston-Little Italy&quot;)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(&quot;Pelmo Park-Humberlea&quot;)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(&quot;Taylor-Massey&quot;)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(&quot;Church-Yonge Corridor&quot;)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(&quot;Eringate-Centennial-West Deane&quot;)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(&quot;Guildwood&quot;)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(&quot;Kensington-Chinatown&quot;)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(&quot;Lawrence Park South&quot;)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(&quot;O&apos;Connor-Parkview&quot;)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(&quot;Willowridge-Martingrove-Richview&quot;)</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>(&quot;Morningside&quot;)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(&quot;Caledonia-Fairbank&quot;)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(&quot;Humbermede&quot;)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(&quot;Kennedy Park&quot;)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(&quot;Roncesvalles&quot;)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(&quot;Yonge-Eglinton&quot;)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(&quot;Agincourt South-Malvern West&quot;)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(&quot;Bayview Village&quot;)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(&quot;Bridle Path-Sunnybrook-York Mills&quot;)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(&quot;Ionview&quot;)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(&quot;L&apos;Amoreaux&quot;)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(&quot;Newtonbrook West&quot;)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(&quot;Weston-Pellam Park&quot;)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(&quot;Broadview North&quot;)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(&quot;Elms-Old Rexdale&quot;)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(&quot;Highland Creek&quot;)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(&quot;Junction Area&quot;)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(&quot;St.Andrew-Windfields&quot;)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(&quot;Waterfront Communities-The Island&quot;)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(&quot;Bay Street Corridor&quot;)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(&quot;Henry Farm&quot;)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(&quot;Humber Heights-Westmount&quot;)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(&quot;Leaside-Bennington&quot;)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(&quot;Mount Pleasant West&quot;)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(&quot;Oakridge&quot;)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(&quot;Woburn&quot;)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(&quot;Blake-Jones&quot;)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(&quot;East End-Danforth&quot;)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(&quot;Mimico (includes Humber Bay Shores\)&quot;)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(&quot;Pleasant View&quot;)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(&quot;Trinity-Bellwoods&quot;)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(&quot;Woodbine Corridor&quot;)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(&quot;Yorkdale-Glen Park&quot;)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(&quot;Corso Italia-Davenport&quot;)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(&quot;Hillcrest Village&quot;)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(&quot;Newtonbrook East&quot;)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(&quot;Princess-Rosethorn&quot;)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(&quot;West Humber-Clairville&quot;)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(&quot;Wychwood&quot;)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(&quot;Cabbagetown-South St.James Town&quot;)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(&quot;Englemount-Lawrence&quot;)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(&quot;Keelesdale-Eglinton West&quot;)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(&quot;Rockcliffe-Smythe&quot;)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(&quot;West Hill&quot;)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(&quot;Casa Loma&quot;)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(&quot;Humewood-Cedarvale&quot;)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(&quot;Mount Dennis&quot;)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(&quot;Rosedale-Moore Park&quot;)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(&quot;Westminster-Branson&quot;)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(&quot;Clanton Park&quot;)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(&quot;Dovercourt-Wallace Emerson-Junction&quot;)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(&quot;Edenbridge-Humber Valley&quot;)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(&quot;New Toronto&quot;)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(&quot;Parkwoods-Donalda&quot;)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(&quot;Tam O&apos;Shanter-Sullivan&quot;)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(&quot;The Beaches&quot;)</bucket>
            </map>
            <map to='#edc948'>
              <bucket>(&quot;Etobicoke West Mall&quot;)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(&quot;Clairlea-Birchmount&quot;)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(&quot;Danforth East York&quot;)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(&quot;Little Portugal&quot;)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(&quot;Maple Leaf&quot;)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(&quot;Niagara&quot;)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(&quot;Oakwood Village&quot;)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(&quot;Stonegate-Queensway&quot;)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(&quot;Alderwood&quot;)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(&quot;Beechborough-Greenbrook&quot;)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(&quot;Forest Hill South&quot;)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(&quot;High Park North&quot;)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(&quot;Lambton Baby Point&quot;)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(&quot;Runnymede-Bloor West Village&quot;)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(&quot;Wexford/Maryvale&quot;)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(&quot;Danforth&quot;)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(&quot;Eglinton East&quot;)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(&quot;Moss Park&quot;)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(&quot;Regent Park&quot;)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(&quot;Victoria Village&quot;)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(&quot;Cliffcrest&quot;)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(&quot;Downsview-Roding-CFB&quot;)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(&quot;Markland Wood&quot;)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(&quot;Rexdale-Kipling&quot;)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(&quot;South Riverdale&quot;)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(&quot;Thistletown-Beaumond Heights&quot;)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(&quot;University&quot;)</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>(&quot;Kingsview Village-The Westway&quot;)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(&quot;Annex&quot;)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(&quot;Bendale&quot;)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(&quot;Centennial Scarborough&quot;)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(&quot;Islington-City Centre West&quot;)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(&quot;Lansing-Westgate&quot;)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(&quot;North Riverdale&quot;)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(&quot;Willowdale East&quot;)</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:neighbourhood_cleansed:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Bayview Woods-Steeles&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Don Valley Village&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;High Park-Swansea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Long Branch&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Old East York&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tam O&apos;Shanter-Sullivan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Woodbine-Lumsden&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Agincourt North&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Centennial Scarborough&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Flemingdon Park&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kingsview Village-The Westway&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Newtonbrook East&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rouge&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Weston&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Banbury-Don Mills&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cliffcrest&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Greenwood-Coxwell&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lawrence Park North&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North St.James Town&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Riverdale&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Willowdale West&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Birchcliffe-Cliffside&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dufferin Grove&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Humbermede&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Milliken&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Playter Estates-Danforth&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Thorncliffe Park&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;York University Heights&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bedford Park-Nortown&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dorset Park&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Highland Creek&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malvern&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Palmerston-Little Italy&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Taylor-Massey&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Wychwood&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bathurst Manor&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Corso Italia-Davenport&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guildwood&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lawrence Park South&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;O&apos;Connor-Parkview&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;St.Andrew-Windfields&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Willowridge-Martingrove-Richview&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Caledonia-Fairbank&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Eringate-Centennial-West Deane&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kennedy Park&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mount Pleasant West&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Roncesvalles&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;West Humber-Clairville&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Agincourt South-Malvern West&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Church-Yonge Corridor&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Forest Hill North&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;L&apos;Amoreaux&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Newtonbrook West&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Runnymede-Bloor West Village&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Weston-Pellam Park&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Broadview North&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Elms-Old Rexdale&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Junction Area&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mount Dennis&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rexdale-Kipling&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Waterfront Communities-The Island&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bay Street Corridor&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Danforth&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Henry Farm&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Leaside-Bennington&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Oakridge&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Steeles&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Woburn&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Blake-Jones&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;East End-Danforth&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Humewood-Cedarvale&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mimico (includes Humber Bay Shores)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pleasant View&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Trinity-Bellwoods&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Yorkdale-Glen Park&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Briar Hill-Belgravia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Edenbridge-Humber Valley&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ionview&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Morningside&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Princess-Rosethorn&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;University&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cabbagetown-South St.James Town&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Englemount-Lawrence&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Keelesdale-Eglinton West&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mount Pleasant East&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rockcliffe-Smythe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;West Hill&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Casa Loma&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Etobicoke West Mall&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kensington-Chinatown&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;New Toronto&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rosedale-Moore Park&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Westminster-Branson&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Beechborough-Greenbrook&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dovercourt-Wallace Emerson-Junction&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hillcrest Village&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Maple Leaf&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Parkwoods-Donalda&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;The Beaches&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Yonge-Eglinton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bayview Village&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Danforth East York&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;High Park North&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Little Portugal&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Oakwood Village&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Stonegate-Queensway&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Woodbine Corridor&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Alderwood&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Clairlea-Birchmount&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Forest Hill South&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lambton Baby Point&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Niagara&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Scarborough Village&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Wexford/Maryvale&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bridle Path-Sunnybrook-York Mills&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Eglinton East&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Islington-City Centre West&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Moss Park&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Regent Park&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Victoria Village&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bendale&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Downsview-Roding-CFB&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Humber Heights-Westmount&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Markland Wood&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pelmo Park-Humberlea&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Thistletown-Beaumond Heights&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Yonge-St.Clair&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Annex&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Clanton Park&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Glenfield-Jane Heights&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lansing-Westgate&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North Riverdale&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South Parkdale&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Willowdale East&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Adjuster' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='150.'>
          <calculation class='tableau' formula='150.' />
        </column>
        <column caption='Top' datatype='real' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='10.'>
          <calculation class='tableau' formula='10.' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='data files' id='data files_77B996D8F24C4A9C92BE380A5C653AC4'>
            <properties context=''>
              <relation join='left' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[listings].[id]' />
                    <expression op='[Sheet2].[id]' />
                  </expression>
                </clause>
                <relation join='inner' type='join'>
                  <clause type='join'>
                    <expression op='='>
                      <expression op='[data files].[listing_id]' />
                      <expression op='[reviews ].[listing_id]' />
                    </expression>
                  </clause>
                  <relation join='inner' type='join'>
                    <clause type='join'>
                      <expression op='='>
                        <expression op='[data files].[listing_id]' />
                        <expression op='[listings].[id]' />
                      </expression>
                    </clause>
                    <relation connection='excel-direct.0yfgyr50vi772m120orxg0w80iq6' name='data files' table='[&apos;data files$&apos;]' type='table'>
                      <columns gridOrigin='A1:G10001:no:A1:G10001:0' header='yes' outcome='6'>
                        <column datatype='integer' name='listing_id' ordinal='0' />
                        <column datatype='date' name='date' ordinal='1' />
                        <column datatype='string' name='available' ordinal='2' />
                        <column datatype='integer' name='price' ordinal='3' />
                        <column datatype='integer' name='adjusted_price' ordinal='4' />
                        <column datatype='integer' name='minimum_nights' ordinal='5' />
                        <column datatype='integer' name='maximum_nights' ordinal='6' />
                      </columns>
                    </relation>
                    <relation connection='excel-direct.0yfgyr50vi772m120orxg0w80iq6' name='listings' table='[listings$]' type='table'>
                      <columns gridOrigin='A1:BO10001:no:A1:BO10001:0' header='yes' outcome='2'>
                        <column datatype='integer' name='id' ordinal='0' />
                        <column datatype='string' name='source' ordinal='1' />
                        <column datatype='string' name='name' ordinal='2' />
                        <column datatype='string' name='description' ordinal='3' />
                        <column datatype='string' name='neighborhood_overview' ordinal='4' />
                        <column datatype='integer' name='host_id' ordinal='5' />
                        <column datatype='string' name='host_name' ordinal='6' />
                        <column datatype='date' name='host_since' ordinal='7' />
                        <column datatype='string' name='host_location' ordinal='8' />
                        <column datatype='string' name='host_about' ordinal='9' />
                        <column datatype='string' name='host_response_time' ordinal='10' />
                        <column datatype='string' name='host_response_rate' ordinal='11' />
                        <column datatype='string' name='host_acceptance_rate' ordinal='12' />
                        <column datatype='string' name='host_is_superhost' ordinal='13' />
                        <column datatype='integer' name='host_listings_count' ordinal='14' />
                        <column datatype='integer' name='host_total_listings_count' ordinal='15' />
                        <column datatype='string' name='host_verifications' ordinal='16' />
                        <column datatype='string' name='host_has_profile_pic' ordinal='17' />
                        <column datatype='string' name='host_identity_verified' ordinal='18' />
                        <column datatype='string' name='neighbourhood' ordinal='19' />
                        <column datatype='string' name='neighbourhood_cleansed' ordinal='20' />
                        <column datatype='string' name='neighbourhood_group_cleansed' ordinal='21' />
                        <column datatype='real' name='latitude' ordinal='22' />
                        <column datatype='real' name='longitude' ordinal='23' />
                        <column datatype='string' name='property_type' ordinal='24' />
                        <column datatype='string' name='room_type' ordinal='25' />
                        <column datatype='integer' name='accommodates' ordinal='26' />
                        <column datatype='string' name='bathrooms' ordinal='27' />
                        <column datatype='string' name='bathrooms_text' ordinal='28' />
                        <column datatype='integer' name='bedrooms' ordinal='29' />
                        <column datatype='integer' name='beds' ordinal='30' />
                        <column datatype='string' name='amenities' ordinal='31' />
                        <column datatype='real' name='price' ordinal='32' />
                        <column datatype='integer' name='minimum_nights' ordinal='33' />
                        <column datatype='integer' name='maximum_nights' ordinal='34' />
                        <column datatype='integer' name='minimum_minimum_nights' ordinal='35' />
                        <column datatype='integer' name='maximum_minimum_nights' ordinal='36' />
                        <column datatype='integer' name='minimum_maximum_nights' ordinal='37' />
                        <column datatype='integer' name='maximum_maximum_nights' ordinal='38' />
                        <column datatype='real' name='minimum_nights_avg_ntm' ordinal='39' />
                        <column datatype='real' name='maximum_nights_avg_ntm' ordinal='40' />
                        <column datatype='string' name='calendar_updated' ordinal='41' />
                        <column datatype='string' name='has_availability' ordinal='42' />
                        <column datatype='integer' name='availability_30' ordinal='43' />
                        <column datatype='integer' name='availability_60' ordinal='44' />
                        <column datatype='integer' name='availability_90' ordinal='45' />
                        <column datatype='integer' name='availability_365' ordinal='46' />
                        <column datatype='date' name='calendar_last_scraped' ordinal='47' />
                        <column datatype='integer' name='number_of_reviews' ordinal='48' />
                        <column datatype='integer' name='number_of_reviews_ltm' ordinal='49' />
                        <column datatype='integer' name='number_of_reviews_l30d' ordinal='50' />
                        <column datatype='date' name='first_review' ordinal='51' />
                        <column datatype='date' name='last_review' ordinal='52' />
                        <column datatype='real' name='review_scores_rating' ordinal='53' />
                        <column datatype='real' name='review_scores_accuracy' ordinal='54' />
                        <column datatype='real' name='review_scores_cleanliness' ordinal='55' />
                        <column datatype='real' name='review_scores_checkin' ordinal='56' />
                        <column datatype='real' name='review_scores_communication' ordinal='57' />
                        <column datatype='real' name='review_scores_location' ordinal='58' />
                        <column datatype='real' name='review_scores_value' ordinal='59' />
                        <column datatype='string' name='license' ordinal='60' />
                        <column datatype='string' name='instant_bookable' ordinal='61' />
                        <column datatype='integer' name='calculated_host_listings_count' ordinal='62' />
                        <column datatype='integer' name='calculated_host_listings_count_entire_homes' ordinal='63' />
                        <column datatype='integer' name='calculated_host_listings_count_private_rooms' ordinal='64' />
                        <column datatype='integer' name='calculated_host_listings_count_shared_rooms' ordinal='65' />
                        <column datatype='real' name='reviews_per_month' ordinal='66' />
                      </columns>
                    </relation>
                  </relation>
                  <relation connection='excel-direct.0yfgyr50vi772m120orxg0w80iq6' name='reviews ' table='[&apos;reviews $&apos;]' type='table'>
                    <columns gridOrigin='A1:F10001:no:A1:F10001:0' header='yes' outcome='6'>
                      <column datatype='integer' name='listing_id' ordinal='0' />
                      <column datatype='integer' name='id' ordinal='1' />
                      <column datatype='date' name='date' ordinal='2' />
                      <column datatype='integer' name='reviewer_id' ordinal='3' />
                      <column datatype='string' name='reviewer_name' ordinal='4' />
                      <column datatype='string' name='comments' ordinal='5' />
                    </columns>
                  </relation>
                </relation>
                <relation connection='excel-direct.0fcq1l61xfex6915x9b4z00baq44' name='Sheet2' table='[Sheet2$]' type='table'>
                  <columns gridOrigin='A1:C1001:no:A1:C1001:0' header='yes' outcome='6'>
                    <column datatype='integer' name='id' ordinal='0' />
                    <column datatype='string' name='Attribute' ordinal='1' />
                    <column datatype='string' name='Value' ordinal='2' />
                  </columns>
                </relation>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight4' name='[Action10_A97281B423B544F4A8896977B9384C0A]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='ExpantionofMarket' type='sheet' worksheet='LessMarketSaturation' />
      <command command='tsc:brush'>
        <param name='exclude' value='LessMarketSaturation' />
        <param name='special-fields' value='all' />
        <param name='target' value='ExpantionofMarket' />
      </command>
    </action>
    <action caption='Filter 6 (generated)' name='[Action11_286A867C7466419EB5939D4AD1C82059]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='ExpantionofMarket' type='sheet' worksheet='LessMarketSaturation' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='ExpantionofMarket' />
      </command>
    </action>
    <action caption='Filter 7 (generated)' name='[Action12_D604727180A643C5A18549253351D384]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='ExpantionofMarket' type='sheet' worksheet='SaturationANDReviewANDPrice' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='ExpantionofMarket' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3_013E4E59BF1E4DFD8F9F9F83B0F9A0DB]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Overall' type='sheet' worksheet='AvgPriceByRoomType' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Overall' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action4_AED91860326B4AC5BF2C10E0018C955F]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Overall' type='sheet' worksheet='UseBySeason' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Overall' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action5_08F808E2B23940D5B27C813F08E7C39D]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Overall' type='sheet' worksheet='NeighbourhoodLocation' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Overall' />
      </command>
    </action>
    <action caption='Highlight1' name='[Action5_5D6E79DEEDB64110853E9234A69C69D1]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Top N Airbnb' type='sheet' worksheet='NeighborhoodByUseAndReview' />
      <command command='tsc:brush'>
        <param name='exclude' value='NeighborhoodByUseAndReview' />
        <param name='special-fields' value='all' />
        <param name='target' value='Top N Airbnb' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action5_9DFD18CFB9BF4C1983E065081692B73E]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Overall' type='sheet' worksheet='Price' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Overall' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action6_38FDCB060BA94F30B9386B5FA55EF4C6]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Top N Airbnb' type='sheet' worksheet='AvgPriceByRoomType' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Top N Airbnb' />
      </command>
    </action>
    <action caption='Highlight 1 (generated)' name='[Action7_F9D60128108F415981658A0F2279AD7A]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Reviews' />
      <command command='tsc:brush'>
        <param name='special-fields' value='all' />
        <param name='target' value='Reviews' />
      </command>
    </action>
    <action caption='Highlight2' name='[Action8_BFC1D90B062644C5A3B15856626A31F8]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Top N Airbnb' type='sheet' worksheet='Reviews' />
      <command command='tsc:brush'>
        <param name='exclude' value='Reviews' />
        <param name='special-fields' value='all' />
        <param name='target' value='Top N Airbnb' />
      </command>
    </action>
    <action caption='Highlight3' name='[Action9_B90D3148053643E388AF21DBB0DDAF7C]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='ExpantionofMarket' type='sheet' worksheet='SaturationANDReviewANDPrice' />
      <command command='tsc:brush'>
        <param name='exclude' value='SaturationANDReviewANDPrice' />
        <param name='special-fields' value='all' />
        <param name='target' value='ExpantionofMarket' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='AvgPriceByRoomType'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='11'>Number of Acomodatios</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data files+ (data files 2)' name='federated.1mrxccd0f5yf3o17xtxi5030y1dq' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Adjuster' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='150.'>
              <calculation class='tableau' formula='150.' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1mrxccd0f5yf3o17xtxi5030y1dq'>
            <column caption='month' datatype='integer' name='[Calculation_2549881870621995008]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='DATEPART(&apos;month&apos;,[date])' />
            </column>
            <column caption='Season' datatype='string' name='[Calculation_2549881870625669121]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_2549881870621995008]&gt;=1 AND [Calculation_2549881870621995008]&lt;4 THEN &apos;Winter&apos;&#13;&#10;ELSEIF [Calculation_2549881870621995008]&gt;=4 AND [Calculation_2549881870621995008]&lt;7 THEN &apos;Spring&apos;&#13;&#10;ELSEIF [Calculation_2549881870621995008]&gt;=7 AND [Calculation_2549881870621995008]&lt;10 THEN &apos;Summer&apos;&#13;&#10;ELSE &apos;Autumn&apos;&#13;&#10;END' />
            </column>
            <column aggregation='Avg' caption='HEXBIN X' datatype='real' name='[Calculation_2549881870627368962]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative'>
              <calculation class='tableau' formula='HEXBINX([longitude]*[Parameters].[Parameter 1],[latitude]*[Parameters].[Parameter 1])/[Parameters].[Parameter 1]' />
            </column>
            <column aggregation='Avg' caption='HEXBIN Y' datatype='real' name='[HEXBIN X (copy)_2549881870627528707]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative'>
              <calculation class='tableau' formula='HEXBINY([longitude]*[Parameters].[Parameter 1],[latitude]*[Parameters].[Parameter 1])/[Parameters].[Parameter 1]' />
            </column>
            <column-instance column='[listing_id]' derivation='CountD' name='[ctd:listing_id:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='Day' name='[dy:date:ok]' pivot='key' type='ordinal' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column caption='Listing Id' datatype='integer' name='[listing_id]' role='dimension' type='ordinal' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column caption='Neighbourhood Cleansed' datatype='string' name='[neighbourhood_cleansed]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_2549881870627368962]' derivation='None' name='[none:Calculation_2549881870627368962:ok]' pivot='key' type='ordinal' />
            <column-instance column='[HEXBIN X (copy)_2549881870627528707]' derivation='None' name='[none:HEXBIN X (copy)_2549881870627528707:ok]' pivot='key' type='ordinal' />
            <column-instance column='[room_type]' derivation='None' name='[none:room_type:nk]' pivot='key' type='nominal' />
            <column caption='Room Type' datatype='string' name='[room_type]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[Action (HEXBIN X,HEXBIN Y,Neighbourhood Cleansed)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_7C948E61F76B47DD8F0FF4D98C8FAB63]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_2549881870627368962:ok]' />
              <groupfilter function='level-members' level='[none:HEXBIN X (copy)_2549881870627528707:ok]' />
              <groupfilter function='level-members' level='[neighbourhood_cleansed]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[Action (Neighbourhood Cleansed)]'>
            <groupfilter function='level-members' level='[neighbourhood_cleansed]' user:ui-action-filter='[Action3_9D643E60FF694915B00024683F44A569]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[Action (Season,MONTH(Date),DAY(Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4_AED91860326B4AC5BF2C10E0018C955F]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_2549881870625669121]' />
              <groupfilter function='level-members' level='[mn:date:ok]' />
              <groupfilter function='level-members' level='[dy:date:ok]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[Action (HEXBIN X,HEXBIN Y,Neighbourhood Cleansed)]</column>
            <column>[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[Action (Neighbourhood Cleansed)]</column>
            <column>[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[Action (Season,MONTH(Date),DAY(Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[ctd:listing_id:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[none:room_type:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{8C1A592C-89CB-4B1D-992C-EC92C0975263}' />
    </worksheet>
    <worksheet name='LessMarketSaturation'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Less market saturation by use</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data files+ (data files 2)' name='federated.1mrxccd0f5yf3o17xtxi5030y1dq' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Adjuster' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='150.'>
              <calculation class='tableau' formula='150.' />
            </column>
            <column caption='Top' datatype='real' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='10.'>
              <calculation class='tableau' formula='10.' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1mrxccd0f5yf3o17xtxi5030y1dq'>
            <column aggregation='Avg' caption='HEXBIN X' datatype='real' name='[Calculation_2549881870627368962]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative'>
              <calculation class='tableau' formula='HEXBINX([longitude]*[Parameters].[Parameter 1],[latitude]*[Parameters].[Parameter 1])/[Parameters].[Parameter 1]' />
            </column>
            <column aggregation='Avg' caption='HEXBIN Y' datatype='real' name='[HEXBIN X (copy)_2549881870627528707]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative'>
              <calculation class='tableau' formula='HEXBINY([longitude]*[Parameters].[Parameter 1],[latitude]*[Parameters].[Parameter 1])/[Parameters].[Parameter 1]' />
            </column>
            <column-instance column='[listing_id]' derivation='Count' name='[cnt:listing_id:qk]' pivot='key' type='quantitative' />
            <column-instance column='[host_id]' derivation='CountD' name='[ctd:host_id:qk]' pivot='key' type='quantitative' />
            <column caption='Host Id' datatype='integer' name='[host_id]' role='dimension' type='ordinal' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column caption='Listing Id' datatype='integer' name='[listing_id]' role='dimension' type='ordinal' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Neighbourhood Cleansed' datatype='string' name='[neighbourhood_cleansed]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_2549881870627368962]' derivation='None' name='[none:Calculation_2549881870627368962:ok]' pivot='key' type='ordinal' />
            <column-instance column='[HEXBIN X (copy)_2549881870627528707]' derivation='None' name='[none:HEXBIN X (copy)_2549881870627528707:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[Action (HEXBIN X,HEXBIN Y)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action12_D604727180A643C5A18549253351D384]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_2549881870627368962:ok]' />
              <groupfilter function='level-members' level='[none:HEXBIN X (copy)_2549881870627528707:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[Neighbourhood No Airbnb]' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[Neighbourhood No Airbnb]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[cnt:listing_id:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[Neighbourhood No Airbnb]</column>
            <column>[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[Action (HEXBIN X,HEXBIN Y)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[ctd:host_id:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[cnt:listing_id:qk]</rows>
        <cols>[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[Neighbourhood No Airbnb]</cols>
      </table>
      <simple-id uuid='{FDF562E1-E283-4C62-82FE-E7C11268DBA0}' />
    </worksheet>
    <worksheet name='NeighborhoodByUseAndReview'>
      <table>
        <view>
          <datasources>
            <datasource caption='data files+ (data files 2)' name='federated.1mrxccd0f5yf3o17xtxi5030y1dq' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top' datatype='real' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='10.'>
              <calculation class='tableau' formula='10.' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1mrxccd0f5yf3o17xtxi5030y1dq'>
            <column-instance column='[price (listings)]' derivation='Avg' name='[avg:price (listings):qk]' pivot='key' type='quantitative' />
            <column-instance column='[listing_id]' derivation='CountD' name='[ctd:listing_id:qk]' pivot='key' type='quantitative' />
            <column caption='Listing Id' datatype='integer' name='[listing_id]' role='dimension' type='ordinal' />
            <column-instance column='[review_scores_rating]' derivation='Min' name='[min:review_scores_rating:qk]' pivot='key' type='quantitative' />
            <column caption='Neighbourhood Cleansed' datatype='string' name='[neighbourhood_cleansed]' role='dimension' type='nominal' />
            <column caption='Price (Listings)' datatype='real' name='[price (listings)]' role='measure' type='quantitative' />
            <column caption='Review Scores Rating' datatype='real' name='[review_scores_rating]' role='measure' type='quantitative' />
            <column caption='Room Type' datatype='string' name='[room_type]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[Action (Room Type)]'>
            <groupfilter function='level-members' level='[room_type]' user:ui-action-filter='[Action2_0F5F1C5234D84C148EFEED6F4FB93ADC]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[Neighbourhood Cleansed Set]' />
          <slices>
            <column>[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[Action (Room Type)]</column>
            <column>[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[Neighbourhood Cleansed Set]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[Neighbourhood Cleansed Set]' />
              <size column='[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[ctd:listing_id:qk]' />
              <text column='[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[Neighbourhood Cleansed Set]' />
              <text column='[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[min:review_scores_rating:qk]' />
              <text column='[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[avg:price (listings):qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Neighbourhood Top Review:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[Neighbourhood Cleansed Set]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Avg. Price:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[avg:price (listings):qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>No. Airbnbs:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[ctd:listing_id:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Min. Review Scores Rating:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[min:review_scores_rating:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[Neighbourhood Cleansed Set]</run>
                <run>&gt;&#10;Avg Price &lt;</run>
                <run>[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[avg:price (listings):qk]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{0ECE6C14-2DC8-490F-953C-BF217D811694}' />
    </worksheet>
    <worksheet name='NeighbourhoodLocation'>
      <table>
        <view>
          <datasources>
            <datasource caption='data files+ (data files 2)' name='federated.1mrxccd0f5yf3o17xtxi5030y1dq' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Adjuster' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='150.'>
              <calculation class='tableau' formula='150.' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1mrxccd0f5yf3o17xtxi5030y1dq'>
            <column caption='month' datatype='integer' name='[Calculation_2549881870621995008]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='DATEPART(&apos;month&apos;,[date])' />
            </column>
            <column caption='Season' datatype='string' name='[Calculation_2549881870625669121]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_2549881870621995008]&gt;=1 AND [Calculation_2549881870621995008]&lt;4 THEN &apos;Winter&apos;&#13;&#10;ELSEIF [Calculation_2549881870621995008]&gt;=4 AND [Calculation_2549881870621995008]&lt;7 THEN &apos;Spring&apos;&#13;&#10;ELSEIF [Calculation_2549881870621995008]&gt;=7 AND [Calculation_2549881870621995008]&lt;10 THEN &apos;Summer&apos;&#13;&#10;ELSE &apos;Autumn&apos;&#13;&#10;END' />
            </column>
            <column aggregation='Avg' caption='HEXBIN X' datatype='real' name='[Calculation_2549881870627368962]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative'>
              <calculation class='tableau' formula='HEXBINX([longitude]*[Parameters].[Parameter 1],[latitude]*[Parameters].[Parameter 1])/[Parameters].[Parameter 1]' />
            </column>
            <column aggregation='Avg' caption='HEXBIN Y' datatype='real' name='[HEXBIN X (copy)_2549881870627528707]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative'>
              <calculation class='tableau' formula='HEXBINY([longitude]*[Parameters].[Parameter 1],[latitude]*[Parameters].[Parameter 1])/[Parameters].[Parameter 1]' />
            </column>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='Day' name='[dy:date:ok]' pivot='key' type='ordinal' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column caption='Neighbourhood Cleansed' datatype='string' name='[neighbourhood_cleansed]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_2549881870627368962]' derivation='None' name='[none:Calculation_2549881870627368962:qk]' pivot='key' type='quantitative' />
            <column-instance column='[HEXBIN X (copy)_2549881870627528707]' derivation='None' name='[none:HEXBIN X (copy)_2549881870627528707:qk]' pivot='key' type='quantitative' />
            <column-instance column='[neighbourhood_cleansed]' derivation='None' name='[none:neighbourhood_cleansed:nk]' pivot='key' type='nominal' />
            <column caption='Room Type' datatype='string' name='[room_type]' role='dimension' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[Action (Neighbourhood Cleansed)]'>
            <groupfilter function='level-members' level='[neighbourhood_cleansed]' user:ui-action-filter='[Action3_9D643E60FF694915B00024683F44A569]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[Action (Room Type)]'>
            <groupfilter function='level-members' level='[room_type]' user:ui-action-filter='[Action2_0F5F1C5234D84C148EFEED6F4FB93ADC]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[Action (Season,MONTH(Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_4FD74725B1614D4EB70903D0BCC160BE]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_2549881870625669121]' />
              <groupfilter function='level-members' level='[mn:date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[Action (Season,MONTH(Date),DAY(Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4_AED91860326B4AC5BF2C10E0018C955F]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_2549881870625669121]' />
              <groupfilter function='level-members' level='[mn:date:ok]' />
              <groupfilter function='level-members' level='[dy:date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[Action (Season,MONTH(Date),Room Type)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_6EAB491B8D4F42F3BCD7D468F30A1053]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_2549881870625669121]' />
              <groupfilter function='level-members' level='[tmn:date:ok]' />
              <groupfilter function='level-members' level='[room_type]' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[none:neighbourhood_cleansed:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Agincourt North&quot;</bucket>
              <bucket>&quot;Agincourt South-Malvern West&quot;</bucket>
              <bucket>&quot;Alderwood&quot;</bucket>
              <bucket>&quot;Annex&quot;</bucket>
              <bucket>&quot;Banbury-Don Mills&quot;</bucket>
              <bucket>&quot;Bathurst Manor&quot;</bucket>
              <bucket>&quot;Bay Street Corridor&quot;</bucket>
              <bucket>&quot;Bayview Village&quot;</bucket>
              <bucket>&quot;Bayview Woods-Steeles&quot;</bucket>
              <bucket>&quot;Bedford Park-Nortown&quot;</bucket>
              <bucket>&quot;Beechborough-Greenbrook&quot;</bucket>
              <bucket>&quot;Bendale&quot;</bucket>
              <bucket>&quot;Birchcliffe-Cliffside&quot;</bucket>
              <bucket>&quot;Blake-Jones&quot;</bucket>
              <bucket>&quot;Briar Hill-Belgravia&quot;</bucket>
              <bucket>&quot;Bridle Path-Sunnybrook-York Mills&quot;</bucket>
              <bucket>&quot;Broadview North&quot;</bucket>
              <bucket>&quot;Cabbagetown-South St.James Town&quot;</bucket>
              <bucket>&quot;Caledonia-Fairbank&quot;</bucket>
              <bucket>&quot;Casa Loma&quot;</bucket>
              <bucket>&quot;Centennial Scarborough&quot;</bucket>
              <bucket>&quot;Church-Yonge Corridor&quot;</bucket>
              <bucket>&quot;Clairlea-Birchmount&quot;</bucket>
              <bucket>&quot;Clanton Park&quot;</bucket>
              <bucket>&quot;Cliffcrest&quot;</bucket>
              <bucket>&quot;Corso Italia-Davenport&quot;</bucket>
              <bucket>&quot;Danforth&quot;</bucket>
              <bucket>&quot;Danforth East York&quot;</bucket>
              <bucket>&quot;Don Valley Village&quot;</bucket>
              <bucket>&quot;Dorset Park&quot;</bucket>
              <bucket>&quot;Dovercourt-Wallace Emerson-Junction&quot;</bucket>
              <bucket>&quot;Downsview-Roding-CFB&quot;</bucket>
              <bucket>&quot;Dufferin Grove&quot;</bucket>
              <bucket>&quot;East End-Danforth&quot;</bucket>
              <bucket>&quot;Edenbridge-Humber Valley&quot;</bucket>
              <bucket>&quot;Eglinton East&quot;</bucket>
              <bucket>&quot;Elms-Old Rexdale&quot;</bucket>
              <bucket>&quot;Englemount-Lawrence&quot;</bucket>
              <bucket>&quot;Eringate-Centennial-West Deane&quot;</bucket>
              <bucket>&quot;Etobicoke West Mall&quot;</bucket>
              <bucket>&quot;Flemingdon Park&quot;</bucket>
              <bucket>&quot;Forest Hill North&quot;</bucket>
              <bucket>&quot;Forest Hill South&quot;</bucket>
              <bucket>&quot;Glenfield-Jane Heights&quot;</bucket>
              <bucket>&quot;Greenwood-Coxwell&quot;</bucket>
              <bucket>&quot;Guildwood&quot;</bucket>
              <bucket>&quot;Henry Farm&quot;</bucket>
              <bucket>&quot;High Park North&quot;</bucket>
              <bucket>&quot;High Park-Swansea&quot;</bucket>
              <bucket>&quot;Highland Creek&quot;</bucket>
              <bucket>&quot;Hillcrest Village&quot;</bucket>
              <bucket>&quot;Humber Heights-Westmount&quot;</bucket>
              <bucket>&quot;Humbermede&quot;</bucket>
              <bucket>&quot;Humewood-Cedarvale&quot;</bucket>
              <bucket>&quot;Ionview&quot;</bucket>
              <bucket>&quot;Islington-City Centre West&quot;</bucket>
              <bucket>&quot;Junction Area&quot;</bucket>
              <bucket>&quot;Keelesdale-Eglinton West&quot;</bucket>
              <bucket>&quot;Kennedy Park&quot;</bucket>
              <bucket>&quot;Kensington-Chinatown&quot;</bucket>
              <bucket>&quot;Kingsview Village-The Westway&quot;</bucket>
              <bucket>&quot;L&apos;Amoreaux&quot;</bucket>
              <bucket>&quot;Lambton Baby Point&quot;</bucket>
              <bucket>&quot;Lansing-Westgate&quot;</bucket>
              <bucket>&quot;Lawrence Park North&quot;</bucket>
              <bucket>&quot;Lawrence Park South&quot;</bucket>
              <bucket>&quot;Leaside-Bennington&quot;</bucket>
              <bucket>&quot;Little Portugal&quot;</bucket>
              <bucket>&quot;Long Branch&quot;</bucket>
              <bucket>&quot;Malvern&quot;</bucket>
              <bucket>&quot;Maple Leaf&quot;</bucket>
              <bucket>&quot;Markland Wood&quot;</bucket>
              <bucket>&quot;Milliken&quot;</bucket>
              <bucket>&quot;Mimico (includes Humber Bay Shores)&quot;</bucket>
              <bucket>&quot;Morningside&quot;</bucket>
              <bucket>&quot;Moss Park&quot;</bucket>
              <bucket>&quot;Mount Dennis&quot;</bucket>
              <bucket>&quot;Mount Pleasant East&quot;</bucket>
              <bucket>&quot;Mount Pleasant West&quot;</bucket>
              <bucket>&quot;New Toronto&quot;</bucket>
              <bucket>&quot;Newtonbrook East&quot;</bucket>
              <bucket>&quot;Newtonbrook West&quot;</bucket>
              <bucket>&quot;Niagara&quot;</bucket>
              <bucket>&quot;North Riverdale&quot;</bucket>
              <bucket>&quot;North St.James Town&quot;</bucket>
              <bucket>&quot;O&apos;Connor-Parkview&quot;</bucket>
              <bucket>&quot;Oakridge&quot;</bucket>
              <bucket>&quot;Oakwood Village&quot;</bucket>
              <bucket>&quot;Old East York&quot;</bucket>
              <bucket>&quot;Palmerston-Little Italy&quot;</bucket>
              <bucket>&quot;Parkwoods-Donalda&quot;</bucket>
              <bucket>&quot;Pelmo Park-Humberlea&quot;</bucket>
              <bucket>&quot;Playter Estates-Danforth&quot;</bucket>
              <bucket>&quot;Pleasant View&quot;</bucket>
              <bucket>&quot;Princess-Rosethorn&quot;</bucket>
              <bucket>&quot;Regent Park&quot;</bucket>
              <bucket>&quot;Rexdale-Kipling&quot;</bucket>
              <bucket>&quot;Rockcliffe-Smythe&quot;</bucket>
              <bucket>&quot;Roncesvalles&quot;</bucket>
              <bucket>&quot;Rosedale-Moore Park&quot;</bucket>
              <bucket>&quot;Rouge&quot;</bucket>
              <bucket>&quot;Runnymede-Bloor West Village&quot;</bucket>
              <bucket>&quot;Scarborough Village&quot;</bucket>
              <bucket>&quot;South Parkdale&quot;</bucket>
              <bucket>&quot;South Riverdale&quot;</bucket>
              <bucket>&quot;St.Andrew-Windfields&quot;</bucket>
              <bucket>&quot;Steeles&quot;</bucket>
              <bucket>&quot;Stonegate-Queensway&quot;</bucket>
              <bucket>&quot;Tam O&apos;Shanter-Sullivan&quot;</bucket>
              <bucket>&quot;Taylor-Massey&quot;</bucket>
              <bucket>&quot;The Beaches&quot;</bucket>
              <bucket>&quot;Thistletown-Beaumond Heights&quot;</bucket>
              <bucket>&quot;Thorncliffe Park&quot;</bucket>
              <bucket>&quot;Trinity-Bellwoods&quot;</bucket>
              <bucket>&quot;University&quot;</bucket>
              <bucket>&quot;Victoria Village&quot;</bucket>
              <bucket>&quot;Waterfront Communities-The Island&quot;</bucket>
              <bucket>&quot;West Hill&quot;</bucket>
              <bucket>&quot;West Humber-Clairville&quot;</bucket>
              <bucket>&quot;Westminster-Branson&quot;</bucket>
              <bucket>&quot;Weston&quot;</bucket>
              <bucket>&quot;Weston-Pellam Park&quot;</bucket>
              <bucket>&quot;Wexford/Maryvale&quot;</bucket>
              <bucket>&quot;Willowdale East&quot;</bucket>
              <bucket>&quot;Willowdale West&quot;</bucket>
              <bucket>&quot;Willowridge-Martingrove-Richview&quot;</bucket>
              <bucket>&quot;Woburn&quot;</bucket>
              <bucket>&quot;Woodbine Corridor&quot;</bucket>
              <bucket>&quot;Woodbine-Lumsden&quot;</bucket>
              <bucket>&quot;Wychwood&quot;</bucket>
              <bucket>&quot;Yonge-Eglinton&quot;</bucket>
              <bucket>&quot;Yonge-St.Clair&quot;</bucket>
              <bucket>&quot;York University Heights&quot;</bucket>
              <bucket>&quot;Yorkdale-Glen Park&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[Action (Season,MONTH(Date),Room Type)]</column>
            <column>[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[Action (Season,MONTH(Date))]</column>
            <column>[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[Action (Room Type)]</column>
            <column>[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[Action (Neighbourhood Cleansed)]</column>
            <column>[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[Action (Season,MONTH(Date),DAY(Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[none:neighbourhood_cleansed:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Neighbourhood Cleansed:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[none:neighbourhood_cleansed:nk]>]]></run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[none:HEXBIN X (copy)_2549881870627528707:qk]</rows>
        <cols>[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[none:Calculation_2549881870627368962:qk]</cols>
      </table>
      <simple-id uuid='{22353F56-4C6F-4396-9E2E-38A2119CB9C1}' />
    </worksheet>
    <worksheet name='Price'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='11'>Price</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data files+ (data files 2)' name='federated.1mrxccd0f5yf3o17xtxi5030y1dq' />
          </datasources>
          <datasource-dependencies datasource='federated.1mrxccd0f5yf3o17xtxi5030y1dq'>
            <column caption='month' datatype='integer' name='[Calculation_2549881870621995008]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='DATEPART(&apos;month&apos;,[date])' />
            </column>
            <column caption='Season' datatype='string' name='[Calculation_2549881870625669121]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_2549881870621995008]&gt;=1 AND [Calculation_2549881870621995008]&lt;4 THEN &apos;Winter&apos;&#13;&#10;ELSEIF [Calculation_2549881870621995008]&gt;=4 AND [Calculation_2549881870621995008]&lt;7 THEN &apos;Spring&apos;&#13;&#10;ELSEIF [Calculation_2549881870621995008]&gt;=7 AND [Calculation_2549881870621995008]&lt;10 THEN &apos;Summer&apos;&#13;&#10;ELSE &apos;Autumn&apos;&#13;&#10;END' />
            </column>
            <column-instance column='[price (listings)]' derivation='Avg' name='[avg:price (listings):qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='Day' name='[dy:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[price (listings)]' derivation='Max' name='[max:price (listings):qk]' pivot='key' type='quantitative' />
            <column-instance column='[price (listings)]' derivation='Min' name='[min:price (listings):qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column caption='Price (Listings)' datatype='real' name='[price (listings)]' role='measure' type='quantitative' />
            <column caption='Room Type' datatype='string' name='[room_type]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[avg:price (listings):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[max:price (listings):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[min:price (listings):qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[min:price (listings):qk]&quot;</bucket>
              <bucket>&quot;[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[avg:price (listings):qk]&quot;</bucket>
              <bucket>&quot;[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[max:price (listings):qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[Action (Room Type)]'>
            <groupfilter function='level-members' level='[room_type]' user:ui-action-filter='[Action3_013E4E59BF1E4DFD8F9F9F83B0F9A0DB]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[Action (Season,MONTH(Date),DAY(Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4_AED91860326B4AC5BF2C10E0018C955F]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_2549881870625669121]' />
              <groupfilter function='level-members' level='[mn:date:ok]' />
              <groupfilter function='level-members' level='[dy:date:ok]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[:Measure Names]</column>
            <column>[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[Action (Room Type)]</column>
            <column>[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[Action (Season,MONTH(Date),DAY(Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[:Measure Names]</rows>
        <cols />
      </table>
      <simple-id uuid='{8F466D21-A6C6-4923-BB5C-4BDD7D3F21AB}' />
    </worksheet>
    <worksheet name='Reviews'>
      <table>
        <view>
          <datasources>
            <datasource caption='data files+ (data files 2)' name='federated.1mrxccd0f5yf3o17xtxi5030y1dq' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Adjuster' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='150.'>
              <calculation class='tableau' formula='150.' />
            </column>
            <column caption='Top' datatype='real' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='10.'>
              <calculation class='tableau' formula='10.' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1mrxccd0f5yf3o17xtxi5030y1dq'>
            <column aggregation='Avg' caption='HEXBIN X' datatype='real' name='[Calculation_2549881870627368962]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative'>
              <calculation class='tableau' formula='HEXBINX([longitude]*[Parameters].[Parameter 1],[latitude]*[Parameters].[Parameter 1])/[Parameters].[Parameter 1]' />
            </column>
            <column aggregation='Avg' caption='HEXBIN Y' datatype='real' name='[HEXBIN X (copy)_2549881870627528707]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative'>
              <calculation class='tableau' formula='HEXBINY([longitude]*[Parameters].[Parameter 1],[latitude]*[Parameters].[Parameter 1])/[Parameters].[Parameter 1]' />
            </column>
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[review_scores_rating]' derivation='Min' name='[min:review_scores_rating:qk]' pivot='key' type='quantitative' />
            <column caption='Neighbourhood Cleansed' datatype='string' name='[neighbourhood_cleansed]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_2549881870627368962]' derivation='None' name='[none:Calculation_2549881870627368962:qk]' pivot='key' type='quantitative' />
            <column-instance column='[HEXBIN X (copy)_2549881870627528707]' derivation='None' name='[none:HEXBIN X (copy)_2549881870627528707:qk]' pivot='key' type='quantitative' />
            <column caption='Review Scores Rating' datatype='real' name='[review_scores_rating]' role='measure' type='quantitative' />
            <column caption='Room Type' datatype='string' name='[room_type]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[Action (Room Type)]'>
            <groupfilter function='level-members' level='[room_type]' user:ui-action-filter='[Action6_38FDCB060BA94F30B9386B5FA55EF4C6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[Neighbourhood Cleansed Set]' />
          <slices>
            <column>[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[Neighbourhood Cleansed Set]</column>
            <column>[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[Action (Room Type)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' center='2.5' field='[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[min:review_scores_rating:qk]' num-steps='3' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[min:review_scores_rating:qk]' />
              <text column='[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[Neighbourhood Cleansed Set]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Min. Review Scores Rating:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[min:review_scores_rating:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[none:HEXBIN X (copy)_2549881870627528707:qk]</rows>
        <cols>[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[none:Calculation_2549881870627368962:qk]</cols>
      </table>
      <simple-id uuid='{0E28FFE2-EC01-4F72-8774-2151BDD4B3E4}' />
    </worksheet>
    <worksheet name='SaturationANDReviewANDPrice'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Review and Price Across Location of Less Market Saturation</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data files+ (data files 2)' name='federated.1mrxccd0f5yf3o17xtxi5030y1dq' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Adjuster' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='150.'>
              <calculation class='tableau' formula='150.' />
            </column>
            <column caption='Top' datatype='real' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='10.'>
              <calculation class='tableau' formula='10.' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1mrxccd0f5yf3o17xtxi5030y1dq'>
            <column aggregation='Avg' caption='HEXBIN X' datatype='real' name='[Calculation_2549881870627368962]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative'>
              <calculation class='tableau' formula='HEXBINX([longitude]*[Parameters].[Parameter 1],[latitude]*[Parameters].[Parameter 1])/[Parameters].[Parameter 1]' />
            </column>
            <column aggregation='Avg' caption='HEXBIN Y' datatype='real' name='[HEXBIN X (copy)_2549881870627528707]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative'>
              <calculation class='tableau' formula='HEXBINY([longitude]*[Parameters].[Parameter 1],[latitude]*[Parameters].[Parameter 1])/[Parameters].[Parameter 1]' />
            </column>
            <column-instance column='[price]' derivation='Avg' name='[avg:price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[review_scores_rating]' derivation='Avg' name='[avg:review_scores_rating:qk]' pivot='key' type='quantitative' />
            <column caption='Host Id' datatype='integer' name='[host_id]' role='dimension' type='ordinal' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column caption='Listing Id' datatype='integer' name='[listing_id]' role='dimension' type='ordinal' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Neighbourhood Cleansed' datatype='string' name='[neighbourhood_cleansed]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_2549881870627368962]' derivation='None' name='[none:Calculation_2549881870627368962:qk]' pivot='key' type='quantitative' />
            <column-instance column='[HEXBIN X (copy)_2549881870627528707]' derivation='None' name='[none:HEXBIN X (copy)_2549881870627528707:qk]' pivot='key' type='quantitative' />
            <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
            <column caption='Review Scores Rating' datatype='real' name='[review_scores_rating]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[Neighbourhood No Airbnb]' />
          <slices>
            <column>[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[Neighbourhood No Airbnb]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[avg:review_scores_rating:qk]' num-steps='3' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[avg:review_scores_rating:qk]' />
              <size column='[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[avg:price:qk]' />
              <text column='[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[Neighbourhood No Airbnb]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Neighbourhood No Airbnb:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[Neighbourhood No Airbnb]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Avg. Price:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[avg:price:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Avg. Review Scores Rating:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[avg:review_scores_rating:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[none:HEXBIN X (copy)_2549881870627528707:qk]</rows>
        <cols>[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[none:Calculation_2549881870627368962:qk]</cols>
      </table>
      <simple-id uuid='{8740160B-419E-43C9-802E-CC8C3A002B47}' />
    </worksheet>
    <worksheet name='UseBySeason'>
      <table>
        <view>
          <datasources>
            <datasource caption='data files+ (data files 2)' name='federated.1mrxccd0f5yf3o17xtxi5030y1dq' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1mrxccd0f5yf3o17xtxi5030y1dq'>
            <column caption='month' datatype='integer' name='[Calculation_2549881870621995008]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='DATEPART(&apos;month&apos;,[date])' />
            </column>
            <column caption='Season' datatype='string' name='[Calculation_2549881870625669121]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_2549881870621995008]&gt;=1 AND [Calculation_2549881870621995008]&lt;4 THEN &apos;Winter&apos;&#13;&#10;ELSEIF [Calculation_2549881870621995008]&gt;=4 AND [Calculation_2549881870621995008]&lt;7 THEN &apos;Spring&apos;&#13;&#10;ELSEIF [Calculation_2549881870621995008]&gt;=7 AND [Calculation_2549881870621995008]&lt;10 THEN &apos;Summer&apos;&#13;&#10;ELSE &apos;Autumn&apos;&#13;&#10;END' />
            </column>
            <column caption='InUse' datatype='integer' name='[Calculation_2549881870966579205]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [available]==&apos;f&apos; THEN 1&#13;&#10;ELSE 0&#13;&#10;END' />
            </column>
            <column caption='Available' datatype='string' name='[available]' role='dimension' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='Day' name='[dy:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_2549881870625669121]' derivation='None' name='[none:Calculation_2549881870625669121:nk]' pivot='key' type='nominal' />
            <column caption='Room Type' datatype='string' name='[room_type]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_2549881870966579205]' derivation='Sum' name='[sum:Calculation_2549881870966579205:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[Action (Room Type)]'>
            <groupfilter function='level-members' level='[room_type]' user:ui-action-filter='[Action3_013E4E59BF1E4DFD8F9F9F83B0F9A0DB]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[Action (Room Type)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[sum:Calculation_2549881870966579205:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[dy:date:ok]</rows>
        <cols>([federated.1mrxccd0f5yf3o17xtxi5030y1dq].[none:Calculation_2549881870625669121:nk] / [federated.1mrxccd0f5yf3o17xtxi5030y1dq].[mn:date:ok])</cols>
      </table>
      <simple-id uuid='{F8B4F571-008E-4A19-8597-5D06B430F525}' />
    </worksheet>
    <worksheet name='amenities'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='11'>Amenities by Airbnb Price</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data files+ (data files 2)' name='federated.1mrxccd0f5yf3o17xtxi5030y1dq' />
          </datasources>
          <datasource-dependencies datasource='federated.1mrxccd0f5yf3o17xtxi5030y1dq'>
            <column datatype='string' name='[Value]' role='dimension' type='nominal' />
            <column-instance column='[price (listings)]' derivation='Avg' name='[avg:price (listings):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Value]' derivation='Count' name='[cnt:Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Value]' derivation='None' name='[none:Value:nk]' pivot='key' type='nominal' />
            <column caption='Price (Listings)' datatype='real' name='[price (listings)]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[avg:price (listings):qk]' palette='green_gold_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <color column='[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[avg:price (listings):qk]' />
              <size column='[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[cnt:Value:qk]' />
              <text column='[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[none:Value:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{4BFB5380-42B6-4AA4-8D6C-FBD888CA0AA1}' />
    </worksheet>
    <worksheet name='bedrooms'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='11'>Preference in number of Bedrooms</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data files+ (data files 2)' name='federated.1mrxccd0f5yf3o17xtxi5030y1dq' />
          </datasources>
          <datasource-dependencies datasource='federated.1mrxccd0f5yf3o17xtxi5030y1dq'>
            <column caption='Bedrooms' datatype='integer' name='[bedrooms]' role='measure' type='quantitative' />
            <column-instance column='[host_id]' derivation='CountD' name='[ctd:host_id:qk]' pivot='key' type='quantitative' />
            <column caption='Host Id' datatype='integer' name='[host_id]' role='dimension' type='ordinal' />
            <column-instance column='[bedrooms]' derivation='None' name='[none:bedrooms:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[none:bedrooms:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[none:bedrooms:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[ctd:host_id:qk]</rows>
        <cols>[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[none:bedrooms:qk]</cols>
      </table>
      <simple-id uuid='{13EBCE82-4739-477C-B6F7-053C1F8D8290}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 4'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='9' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='7' type-v2='layout-basic' w='98400' x='800' y='1000'>
              <zone forceUpdate='true' h='98000' id='5' is-centered='0' is-scaled='1' param='C:/Users/owner/Downloads/6ceb9338-b300-4ba2-bd47-d64db7ddb14f.jpeg' type-v2='bitmap' w='49200' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone forceUpdate='true' h='21750' id='6' param='C:/Users/owner/Downloads/airbnb.png' type-v2='bitmap' w='49200' x='50000' y='77250'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='34375' id='10' type-v2='text' w='49200' x='50000' y='42875'>
                <formatted-text>
                  <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='28'>AIRBNB TORONTO</run>
                  <run fontalignment='1'>Æ&#10;</run>
                  <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='15'>Lois Akor</run>
                  <run fontalignment='1'>Æ&#10;</run>
                  <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='15'>Fanny R. Tutillo</run>
                  <run fontalignment='1'>Æ&#10;</run>
                  <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='15'>Maria F. Vargas Charry</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone forceUpdate='true' h='41875' id='11' is-centered='0' is-scaled='1' param='C:/Users/owner/Downloads/4cc109c7-60a2-4574-b760-2ccf06189730.jpeg' type-v2='bitmap' w='49200' x='50000' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='850' minheight='850' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='27' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='26' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' forceUpdate='true' h='98000' id='5' is-centered='0' is-fixed='true' is-scaled='1' param='C:/Users/owner/Downloads/6ceb9338-b300-4ba2-bd47-d64db7ddb14f.jpeg' type-v2='bitmap' w='49200' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' forceUpdate='true' h='41875' id='11' is-centered='0' is-fixed='true' is-scaled='1' param='C:/Users/owner/Downloads/4cc109c7-60a2-4574-b760-2ccf06189730.jpeg' type-v2='bitmap' w='49200' x='50000' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='34375' id='10' type-v2='text' w='49200' x='50000' y='42875'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='28'>AIRBNB TORONTO</run>
                    <run fontalignment='1'>Æ&#10;</run>
                    <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='15'>Lois Akor</run>
                    <run fontalignment='1'>Æ&#10;</run>
                    <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='15'>Fanny R. Tutillo</run>
                    <run fontalignment='1'>Æ&#10;</run>
                    <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='15'>Maria F. Vargas Charry</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='166' forceUpdate='true' h='21750' id='6' is-fixed='true' param='C:/Users/owner/Downloads/airbnb.png' type-v2='bitmap' w='49200' x='50000' y='77250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{1E1E3856-1362-4888-931E-977F2DF3EE7A}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 5'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='11' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='8' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
              <zone h='98000' id='6' type-v2='layout-basic' w='98400' x='800' y='1000'>
                <zone h='49000' id='3' is-centered='0' param='C:/Users/owner/Downloads/b143c1fd-3264-44bd-9d7e-93c60abb7188.jpeg' type-v2='bitmap' w='49200' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='32375' id='5' is-centered='0' is-scaled='1' param='C:/Users/owner/Downloads/27eaec84-79f4-467c-a603-4e45da6cf9fc.jpeg' type-v2='bitmap' w='49200' x='50000' y='66625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='49000' id='9' type-v2='text' w='49200' x='800' y='50000'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='48'>OBJECTIVES</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='65625' id='12' type-v2='text' w='49200' x='50000' y='1000'>
                  <formatted-text>
                    <run bold='true' fontcolor='#000000' fontsize='16'>• Seasonal Pricing: </run>
                    <run fontcolor='#000000' fontsize='16'>Comparing location preferences and prices in different seasons of the year.</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontsize='16'>• </run>
                    <run bold='true' fontcolor='#000000' fontsize='16'>Booking trends:</run>
                    <run fontcolor='#000000' fontsize='16'> Evaluate if there is a preference in accommodation based across seasons</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontsize='16'>• </run>
                    <run bold='true' fontcolor='#000000' fontsize='16'>Neighborhood comparison</run>
                    <run fontcolor='#000000' fontsize='16'> : Review the distribution of Airbnb listings across different neighborhoods based on number of host and rating</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='26' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='25' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='49000' id='3' is-centered='0' is-fixed='true' param='C:/Users/owner/Downloads/b143c1fd-3264-44bd-9d7e-93c60abb7188.jpeg' type-v2='bitmap' w='49200' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='65625' id='12' type-v2='text' w='49200' x='50000' y='1000'>
                  <formatted-text>
                    <run bold='true' fontcolor='#000000' fontsize='16'>• Seasonal Pricing: </run>
                    <run fontcolor='#000000' fontsize='16'>Comparing location preferences and prices in different seasons of the year.</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontsize='16'>• </run>
                    <run bold='true' fontcolor='#000000' fontsize='16'>Booking trends:</run>
                    <run fontcolor='#000000' fontsize='16'> Evaluate if there is a preference in accommodation based across seasons</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontsize='16'>• </run>
                    <run bold='true' fontcolor='#000000' fontsize='16'>Neighborhood comparison</run>
                    <run fontcolor='#000000' fontsize='16'> : Review the distribution of Airbnb listings across different neighborhoods based on number of host and rating</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='49000' id='9' type-v2='text' w='49200' x='800' y='50000'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='48'>OBJECTIVES</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='251' forceUpdate='true' h='32375' id='5' is-centered='0' is-fixed='true' is-scaled='1' param='C:/Users/owner/Downloads/27eaec84-79f4-467c-a603-4e45da6cf9fc.jpeg' type-v2='bitmap' w='49200' x='50000' y='66625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{F3FA2B72-66F5-4D20-90EC-0988990B8F70}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='ExpantionofMarket'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Top' datatype='real' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='10.'>
          <calculation class='tableau' formula='10.' />
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type-v2='layout-basic' w='98400' x='800' y='1000'>
              <zone h='49000' id='3' name='SaturationANDReviewANDPrice' w='42900' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='10' name='LessMarketSaturation' w='49200' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='17' name='amenities' w='46700' x='52500' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='19' name='bedrooms' w='49200' x='50000' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='9' mode='type_in' param='[Parameters].[Parameter 2]' type-v2='paramctrl' w='8800' x='43700' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1250' minheight='1250' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='37' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='36' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='SaturationANDReviewANDPrice' w='42900' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='49000' id='9' mode='type_in' param='[Parameters].[Parameter 2]' type-v2='paramctrl' w='8800' x='43700' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='17' is-fixed='true' name='amenities' w='46700' x='52500' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='10' is-fixed='true' name='LessMarketSaturation' w='49200' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='19' is-fixed='true' name='bedrooms' w='49200' x='50000' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{79236E9D-B882-4A29-8F93-657F41913B4E}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Overall'>
      <style />
      <size maxheight='800' maxwidth='1200' minheight='800' minwidth='1200' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type-v2='layout-flow' w='98666' x='667' y='1000'>
            <zone h='98000' id='5' type-v2='layout-basic' w='77333' x='667' y='1000'>
              <zone h='42750' id='3' name='UseBySeason' w='77333' x='667' y='56250'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='9' name='NeighbourhoodLocation' w='77333' x='667' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6250' id='8' name='UseBySeason' pane-specification-id='3' param='[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[sum:Calculation_2549881870966579205:qk]' type-v2='color' w='77333' x='667' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='256' h='98000' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='21333' x='78000' y='1000'>
              <zone fixed-size='155' h='20375' id='20' is-fixed='true' name='Price' w='21333' x='78000' y='1000'>
                <layout-cache fixed-size-w='142' type-h='fixed' type-w='fixed' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='313' h='40125' id='15' is-fixed='true' name='AvgPriceByRoomType' w='21333' x='78000' y='21375'>
                <layout-cache fixed-size-w='182' type-h='fixed' type-w='fixed' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1100' minheight='1100' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='44' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='43' param='vert' type-v2='layout-flow' w='98666' x='667' y='1000'>
                <zone fixed-size='280' h='49000' id='9' is-fixed='true' name='NeighbourhoodLocation' w='77333' x='667' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='155' h='20375' id='20' is-fixed='true' name='Price' w='21333' x='78000' y='1000'>
                  <layout-cache fixed-size-w='142' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40125' id='15' is-fixed='true' name='AvgPriceByRoomType' w='21333' x='78000' y='21375'>
                  <layout-cache fixed-size-w='182' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42750' id='3' is-fixed='true' name='UseBySeason' w='77333' x='667' y='56250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6250' id='8' name='UseBySeason' pane-specification-id='3' param='[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[sum:Calculation_2549881870966579205:qk]' type-v2='color' w='77333' x='667' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{CB431E06-0703-4336-B85C-12771E3773F5}' />
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Airbnb Toronto</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='story-description'>
          <format attr='background-color' id='story-description_13' value='#ffffffd9' />
          <format attr='border-width' id='story-description_13' value='0' />
          <format attr='border-style' id='story-description_13' value='none' />
        </style-rule>
      </style>
      <size maxheight='964' maxwidth='1216' minheight='964' minwidth='1216' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='11' param='vert' removable='false' type-v2='layout-flow' w='98684' x='658' y='830'>
            <zone h='5187' id='12' type-v2='title' w='98684' x='658' y='830'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='93153' id='9' param='vert' removable='false' type-v2='layout-flow' w='98684' x='658' y='6017'>
              <zone h='93153' id='7' param='vert' removable='false' type-v2='layout-flow' w='98684' x='658' y='6017'>
                <zone h='93153' id='1' param='vert' removable='false' type-v2='layout-flow' w='98684' x='658' y='6017'>
                  <zone h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='98684' x='658' y='6017' />
                  <zone h='82676' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='98684' x='658' y='16494'>
                    <flipboard active-id='5' nav-type='caption' show-nav-arrows='true'>
                      <story-points>
                        <story-point caption='Airbnb' captured-sheet='Dashboard 4' id='1' />
                        <story-point caption='Objectives' captured-sheet='Dashboard 5' id='2' />
                        <story-point caption='Summary' captured-sheet='Overall' id='3'>
                          <capturedDeltas>
                            <worksheet name='AvgPriceByRoomType'>
                              <selection-collection>
                                <tuple-selection>
                                  <tuple-reference>
                                    <tuple-descriptor>
                                      <pane-descriptor>
                                        <x-fields />
                                        <y-fields>
                                          <field>[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[none:room_type:nk]</field>
                                        </y-fields>
                                      </pane-descriptor>
                                      <columns>
                                        <field>[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[cnt:room_type:qk]</field>
                                        <field>[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[none:room_type:nk]</field>
                                      </columns>
                                    </tuple-descriptor>
                                    <tuple>
                                      <value>208050</value>
                                      <value>&quot;Shared room&quot;</value>
                                    </tuple>
                                  </tuple-reference>
                                </tuple-selection>
                              </selection-collection>
                            </worksheet>
                            <worksheet name='NeighbourhoodLocation'>
                              <filter class='categorical' column='[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[Action (Room Type)]'>
                                <groupfilter function='member' level='[room_type]' member='&quot;Shared room&quot;' user:ui-action-filter='[Action2_0F5F1C5234D84C148EFEED6F4FB93ADC]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                              </filter>
                              <style delta-type='added'>
                                <style-rule element='axis'>
                                  <encoding attr='space' class='0' field='[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[none:HEXBIN X (copy)_2549881870627528707:qk]' field-type='quantitative' max='5441213.9373550247' min='5400001.6612147717' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                                  <encoding attr='space' class='0' field='[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[none:Calculation_2549881870627368962:qk]' field-type='quantitative' max='-8796216.6684186049' min='-8893740.0142340772' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                                </style-rule>
                              </style>
                            </worksheet>
                            <worksheet name='Price'>
                              <filter class='categorical' column='[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[Action (Room Type)]'>
                                <groupfilter function='member' level='[room_type]' member='&quot;Shared room&quot;' user:ui-action-filter='[Action3_013E4E59BF1E4DFD8F9F9F83B0F9A0DB]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                              </filter>
                            </worksheet>
                            <worksheet name='UseBySeason'>
                              <filter class='categorical' column='[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[Action (Room Type)]'>
                                <groupfilter function='member' level='[room_type]' member='&quot;Shared room&quot;' user:ui-action-filter='[Action3_013E4E59BF1E4DFD8F9F9F83B0F9A0DB]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                              </filter>
                            </worksheet>
                          </capturedDeltas>
                        </story-point>
                        <story-point caption='Top Airbnbs' captured-sheet='Top N Airbnb' id='4'>
                          <capturedDeltas>
                            <worksheet name='AvgPriceByRoomType'>
                              <selection-collection>
                                <node-selection select-tuples='false'>
                                  <oriented-node-reference orientation='vertical'>
                                    <node-reference>
                                      <fields>
                                        <field>[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[none:room_type:nk]</field>
                                      </fields>
                                      <multibucket>
                                        <bucket>&quot;Entire home/apt&quot;</bucket>
                                      </multibucket>
                                    </node-reference>
                                    <page-reference />
                                  </oriented-node-reference>
                                </node-selection>
                              </selection-collection>
                            </worksheet>
                            <worksheet name='NeighborhoodByUseAndReview'>
                              <filter class='categorical' column='[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[Action (Room Type)]'>
                                <groupfilter function='member' level='[room_type]' member='&quot;Entire home/apt&quot;' user:ui-action-filter='[Action2_0F5F1C5234D84C148EFEED6F4FB93ADC]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                              </filter>
                            </worksheet>
                            <worksheet name='Reviews'>
                              <filter class='categorical' column='[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[Action (Room Type)]'>
                                <groupfilter function='member' level='[room_type]' member='&quot;Entire home/apt&quot;' user:ui-action-filter='[Action6_38FDCB060BA94F30B9386B5FA55EF4C6]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                              </filter>
                            </worksheet>
                            <datasource name='Parameters'>
                              <column name='[Parameter 2]' value='1000.0' />
                            </datasource>
                          </capturedDeltas>
                        </story-point>
                        <story-point caption='Market' captured-sheet='ExpantionofMarket' id='5' />
                      </story-points>
                    </flipboard>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='32884' hidden='true' id='13' story-point-id='3' type-v2='text' w='27385' x='70066' y='63278'>
          <formatted-text>
            <run fontalignment='0' fontsize='12'>Room type preference  changes over the seasons. Private rooms are most preferred year round. This could be due to privacy and price. We can see shared room does have more bookings outside if common vacation season.</run>
          </formatted-text>
        </zone>
      </zones>
      <simple-id uuid='{9B822159-545C-4F5C-B41C-26E34D26354B}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Top N Airbnb'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Top' datatype='real' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='10.'>
          <calculation class='tableau' formula='10.' />
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='22' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='19' param='horz' type-v2='layout-flow' w='82400' x='800' y='1000'>
              <zone h='98000' id='5' type-v2='layout-basic' w='82400' x='800' y='1000'>
                <zone h='76875' id='27' name='NeighborhoodByUseAndReview' w='41200' x='42000' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='98000' id='33' name='Reviews' w='41200' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone fixed-size='231' h='21125' id='38' is-fixed='true' name='AvgPriceByRoomType' w='41200' x='42000' y='77875'>
                  <layout-cache fixed-size-w='182' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='21' is-fixed='true' param='vert' type-v2='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='7000' id='24' mode='type_in' param='[Parameters].[Parameter 2]' type-v2='paramctrl' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='30000' id='28' name='NeighborhoodByUseAndReview' pane-specification-id='0' param='[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[Neighbourhood Cleansed Set]' type-v2='color' w='16000' x='83200' y='8000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9125' id='35' name='Reviews' pane-specification-id='0' param='[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[min:review_scores_rating:qk]' type-v2='color' w='16000' x='83200' y='38000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='950' minheight='950' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='62' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='61' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='98000' id='33' is-fixed='true' name='Reviews' w='41200' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9125' id='35' name='Reviews' pane-specification-id='0' param='[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[min:review_scores_rating:qk]' type-v2='color' w='16000' x='83200' y='38000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='76875' id='27' is-fixed='true' name='NeighborhoodByUseAndReview' w='41200' x='42000' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='30000' id='28' name='NeighborhoodByUseAndReview' pane-specification-id='0' param='[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[Neighbourhood Cleansed Set]' type-v2='color' w='16000' x='83200' y='8000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7000' id='24' mode='type_in' param='[Parameters].[Parameter 2]' type-v2='paramctrl' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='161' h='21125' id='38' is-fixed='true' name='AvgPriceByRoomType' w='41200' x='42000' y='77875'>
                  <layout-cache fixed-size-w='182' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{4AB5D9D5-2C11-4B74-AF3D-87CE26D9988D}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' maximized='true' name='AvgPriceByRoomType'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[none:listing_id:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E26F73A6-3E35-4AEF-A9CA-603EC3D58F1D}' />
    </window>
    <window class='worksheet' name='Price'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{1898775B-AD54-433F-9A1E-7C8AD65B8EA3}' />
    </window>
    <window class='worksheet' name='NeighbourhoodLocation'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[none:neighbourhood_cleansed:nk]' type='color' />
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{96932100-1793-4704-B754-DAF0775A26EB}' />
    </window>
    <window class='worksheet' name='NeighborhoodByUseAndReview'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[Neighbourhood Cleansed Set]' type='color' />
            <card mode='type_in' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{A32C95F6-470E-4962-B032-5AD183CB7388}' />
    </window>
    <window class='worksheet' name='UseBySeason'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[sum:Calculation_2549881870966579205:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{03137D12-F771-4B37-8DBE-03D86C906224}' />
    </window>
    <window class='worksheet' name='Reviews'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[min:review_scores_rating:qk]' type='color' />
            <card mode='type_in' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{55CF6482-4574-4B97-8CEE-A25782131369}' />
    </window>
    <window class='worksheet' name='LessMarketSaturation'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[ctd:host_id:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{B41FD1F3-16FA-44D6-8ECC-2A6BCD124CE8}' />
    </window>
    <window class='worksheet' name='SaturationANDReviewANDPrice'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[avg:price:qk]' type='size' />
            <card mode='type_in' param='[Parameters].[Parameter 2]' type='parameter' />
            <card pane-specification-id='0' param='[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[avg:review_scores_rating:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{B592AD7F-1980-4EB5-A67E-2711A480D2B0}' />
    </window>
    <window class='worksheet' name='bedrooms'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[none:host_id:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2605224A-14F4-4790-B308-09271B6F8AE2}' />
    </window>
    <window class='worksheet' name='amenities'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[avg:price (listings):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[avg:price (listings):qk]</field>
            <field>[federated.1mrxccd0f5yf3o17xtxi5030y1dq].[none:Value:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E0C5AC8B-EEE2-4A4C-9F21-350978FBB77F}' />
    </window>
    <window class='dashboard' name='Overall'>
      <viewpoints>
        <viewpoint name='AvgPriceByRoomType' />
        <viewpoint name='NeighbourhoodLocation'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Price' />
        <viewpoint name='UseBySeason' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{ED3B7EA9-A819-4321-8C60-8DBA49042198}' />
    </window>
    <window class='dashboard' name='Top N Airbnb'>
      <viewpoints>
        <viewpoint name='AvgPriceByRoomType' />
        <viewpoint name='NeighborhoodByUseAndReview' />
        <viewpoint name='Reviews'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{E81BEB7C-B123-4811-82A5-EFA4A33DD0CE}' />
    </window>
    <window class='dashboard' name='ExpantionofMarket'>
      <viewpoints>
        <viewpoint name='LessMarketSaturation'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='SaturationANDReviewANDPrice'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='amenities' />
        <viewpoint name='bedrooms'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{57FFB953-E05D-4854-971C-462EFD304E5B}' />
    </window>
    <window class='dashboard' name='Dashboard 4'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{3A5B4F2B-E95F-46EB-81A7-B08AA0C74741}' />
    </window>
    <window class='dashboard' name='Dashboard 5'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{7E79AB5A-B853-4AB4-BE20-042CEBFB2A16}' />
    </window>
    <window class='dashboard' name='Story 1'>
      <viewpoints />
      <active id='5' />
      <simple-id uuid='{2E8F60D2-5D4E-42E3-94E3-042631B84F85}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='87' name='AvgPriceByRoomType' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 4' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard 5' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='ExpantionofMarket' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='LessMarketSaturation' width='192'>
      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
      VaTq3BuyCgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='NeighborhoodByUseAndReview' width='192'>
      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
      Dacp0TNrFgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='NeighbourhoodLocation' width='192'>
      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
      C+YfwBCMilLaAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Overall' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='SaturationANDReviewANDPrice' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nNy9Xawlx3Uu9q2q6t77/MxwfkjRJC2IpCSS5tWvdeErW5J9lQTwSyAgQIAY
      ieEkQF6C+CJBAijAfbDvBQLkIUHuDZLADwl8AySIY+fFCGzD9o0lW7YiayhLFCnaJC/FP3E4
      HA4pzsw5c87e3V1VeVi1qqt7d/fu3nsfcpQlUDNzzt7d1dVVq9b61rfWouvXr3ulFH6SxHvf
      +HPT8XvvYZ2FMRm8cyCinY3xbhSZL5Gxz+ucg/ceSikYY2CtnXzv0lZAfF8aOnln/B4ciACt
      9ORrN8bqPbx3IBCIKD6jPHv7mY1SauMFNEW8941BbLrY0pco19nmWp7CdZTqvE574vomcldy
      VteX67rwHvTE9y7znGXZykZad1/nPRQpQAGKCIpW51opBefc2jF57+Hh4RwvdKNN491YW4Xx
      AgrU2GhdYtJ/ZFkGACjLsnNwU2Xdy/TeT3rRXdfbdqFoUnDeQaF78Ze24sUC/hy/TIKm7TRV
      l3jvUVkL3bMZN72miHUOzjtopddeXxRW3DjOIc9zFEWxyShgNM/X4H17fiWbyHkX/y3ivIcO
      15RNKr/vW/zpumt8ou9om81m0HrzF961cNsTPEU21fxd9/QIJlTHpYgIzjlYyxPvvAcBrM1G
      3GuqEBGM1lufyNZaWGsbpqIP11dKgf81LM45FEWBqqpgrYVSCkVRTH4uIoobbuh9eTkleqQK
      ml0RwWjDSqnjJDHJ5u4aafv9N04A51ynpj89Pe0d2JCkR1P6MqqqihtKbMt1k9O+5lRpm2AA
      okY3yvBsdVxaqfps4NNi+NRyzvHLIkKWHM9jZeznK2sB4heeive+YUqkC4/CzypnYb2DWXOK
      ycnf9rm6RDaZ2uD92LDmhr6ZziURAT1jV0ohI+J361yvaStien+zpQxp97Y97YID2uW0pNfb
      1ixYtTs1NBGqqmTN6Pkl1Bsk3NMjmg5jdLMiBa3XmxmpeO9ROcvf3cKp997He7fvL/82SsOD
      P6eUQlmWK8qB58NHhWitHd74Yh7qeknZ6DzToHYnANY7eM/Xb5uAY077Ff/SE5y3aL+x9N0q
      ou02wJBm7lv8SvHiYNPCNuw2+XOXjm7f+ABETUlKBROhHjubPxYEAsjHl0mkoNaMZ1MThjXW
      uOc0HSbp2HkiIhAomkrx3ulpQRQ3UlmWsNZib28vfr59H6002iOyzoZ3ikH1rpQCeWKkCIDq
      9MhYXILwADWS59E8DRUR0IEoiZ9FiqBIb74BujR8n8bp+5mYPn1av+8auxJFxC8J4AXhLLTW
      rLXQhOTIO1jnAW/hiKIN2jfeTcadm2zTR9lY1p3UKUooPlFqvsrPu0QHE4oGoM30Gqz51aAZ
      RaCGtSoOMhBOaaqdbU2rSpk3i4fyrGxHbYCxNmB7cQ/JWC3Z1ky7FCKCIV2/BM8I2Hw+R1UG
      3JqCSaM0iByc89G+VLp/A0wRWYTpaVjJxmydOAIDAuOc8XUi9xSUp6qqlc8YYxoncZZlDedY
      xtV+T1rpTkc1fe4qWAF98GjneFv/jk422L/RQ/eU/wu/Hn0CrPP+x774LrNp6Np9ptVZbAhF
      CpW3uHPnDhQpWGuR5Vk0S3wMsgAIp4f3WGvjdkm66Lv8G3EqNTXtB+fdThZ+W5RSqKpq0Py0
      1mI+n6MoCjjnYIyB1hrLooCtKmRZ1mkFOMf+QZdtDwDWWzjPoEGf9L33VNN776PS6hIiYjNJ
      Jf8eMTedFxrzM5EuZKmtLdoapOvU2QUa1B6XB+C9ax6lzsF5iyzPozZedbIASBCtZ8brCCc1
      jvW2mdR1Ghpt4lXbWvUsRXwziQm1pSzLaBqJD6GI0BcbdiGWAnTj8kZrWEcrm4Mx/3rebDh1
      jeqHidPToE8a93CON8BUrdoX0e3TZO0BdO3i9s8qZxuY7llIZdkeTKFYOeLjM4Zoog0LQ2sd
      nS05wp3q115E7Gu053jdS0pt3F0gYGOlD5IWREieQ3yD9WNjze8kFtH6LRF1O/StT5JshjXT
      MGWeiAhmU5NiLOqzqWiqHa/29Xe1GMT8EE1mjGn8TuIiWb4fsWqd2Lz88tl3SH2VxlhBvQpj
      jHh4wJ8tGJBK3xjbQUT5U/yDviCZIgWlOYruvevF77vGkQrPe6352Q9bNaumCPuAI17KGE2/
      ySCGHNzUuWr/bFcipszKok3scnH4tNLRLGmYJLQaiOrarOvmJ36Pms4tgeBGRG7PWro4Y3Ii
      iDM8eKqBIg8J2H5De1/D1tvIRibQ1GMmvcfU68gkb0PFGBobEcW4BIAVyK8dmOobc6r908/w
      yeEHbdPUz1BEDXSJiEDvsxk0Vog4RpDn+dpAmfhBpa0i7r8unjIkmwYLgeZ6N32/GPPzsTdr
      O7JjtSLQXJBd127LlDGK86a1xv7ePoqS0Y2D/QN47/lYd6sErL74R2UrPvJTMwl+7YuWxWGD
      ndy12EtbRToAO+zsJG6zEDYVQaiQvNs8z7Esi0E4M1WGPC9n69B3iXOOaSDBjzPtgYm0celt
      tM+uv9u2Q9PxT72X1hp5nrN5oxjRcc5hsTiNpkjfBm6PzzoHKIqWKtEwtJcKkYJWaNwzVRRt
      XtEYzLxL5LRhjH7898Xmlr8LDdkYw0CAc5jlM6Yj91hs3ntk2sRffxAnGhFBJb5E3ABtrSYm
      gTg529xQZJ2jLJqBTQEVx9UVZOm71pRNQERwCQOWQCjKAras4AE4NDH3dEF23Z+18Wb2OiMc
      NbqUktV24W81xkmqiTIBK76N/C4+MwhKBWUYMJqoeJxjpMs5ZCZbodPH68HXaM4a2QaZHBKi
      ZoTYpL/ocganDEIGIv+17fZ11xFOxwokWlWRQzT2WmOFYU4Nay3KijFuT4j2f3sOGqcPNeG6
      MTz7UWMiWsvU3Oba7TFaW9V0aaLgYK7GLgiBf996zgYooHVnNLnrs+tkChRuw6k2VVbOZ7nZ
      Lvj/U6VrAbXhN5H2abDpPYmAsioxn81j8EeQjWjjRsXgYa3r5ewPadBdy64oInINglC/aZCQ
      t+rfqIZyWC6XmM/nWCwWzfEGEttYsQEUqKyFGcGspQ2j470G6hjYTsLb7e+1F4d8tn1FIZ7J
      Z/rGkYbYd72gCITlcomqLDGf70FrjSzLkOc5yrKMjFFrLafYdfB/+sQ6BxAGuSl9su5IJ6Jo
      UkyVVGGkAcDU3JOFNyTO+S7CJUeLlUJZFtBKw3mPqiqhtQG8i1bi0AbWSgOW8xawwjPt+vyO
      N8A6Ef63tz5GBAXtsMEmFJPKOtvIppIH39vbQ1mWkY/u4TtTDTeBXad83jmHsiwxm81QFBbL
      Yhn9EDYJXGSLyuYW7HvIKZYIaMpSXCeyMCU3gL2KVfIba+3NlEGbZtBlOnDgqn/jEnVHcAHE
      bDSlNcpAmvPeg5QDvIpBTqZL9+c/kCL0ciwmSupfWhdOcVKbbwBFCtZVYSPwcawVX06ic3Iz
      gfasczCq1jonJyfR1Gq/UFkIKY/orJL36xwFzlZjKLPFObcVirJkjeYcb9ZwMvDnCLNZ3ljo
      bYdrrLAiYDjVeRcZk2KabO0Ej7CV+xb3FGcT3iPPcpxUJ+G+Kt5bnO+++RGrYYz5M0Y86gQd
      oD69Nt4ARMys48WvVhwmERcwV20UKmtRFAXyLG9o0vZ3eIAuOlNENMon2WSiovPvHBaLBTw8
      cpM1Fj+P0wHxKNdQUHF8tRk3+fbd42HvGgArmtyoqECIOPossQDvVzOodiF9jNN0Ya4TUYJa
      KWhtoJVuIHpDELEKhQh2JYoIpDSbVMmL2iojrG+Qctw4VztJNnj0JRHKkBM8FBSLO9W7GDDp
      cipTe3bjReBlI7Jd7Y2Jp5HzHj5UU5DsMRENHX8P2tQgGTvEVd6LonEJ7rsU1uwuVmhIs7Pa
      4r2Hg4cJiT6VtbW1QO9POZ5UutC1rXOCu+AnKb8hO1wcLKUUMpOhshWKsoBSOhRaqpAl2VDe
      J+xMtWrrdqXvbSPsUPLyn2V5436KCNAa82TxVY5PLa8UYC2oYQrtViI40KJSdsGzu75/H+dL
      zAnCenOKQNBGoyiL5njvAn6T9yMzwoZE2I5NR7CpGVKEJzMG1tlgPtiYB5tq8fTvitSKhu9z
      OjcVFUysdqyh756xlpBSyLTB6eKUSXO2QkarSSG7kD7EpPazeI66UjU3PSFtQMDEvBXFMxab
      F3g1MyZSSmQ83vuGfyd+4rbmXHstyr26ThuPLTeAHHFwHBoXYfSkfjlAXfOFiJCbDEvnOem8
      NbldvoB8T2TnUGgHDDgkqeknjpWzrq7qEDbR2HJ/Q5ymsc86BLUKArcpQqZEKWxw4lpncbpc
      hOoTBawNxQUANiepjir3bfAx9xSKB4CVDVrYEjPKV66xFQrEDxcQICBkU60GRoBmgEsixLPZ
      DGVVQimKC0Q+I/DiWUvjZNqghg/ABDgPxHmw3kHqIxANO5OpttqU2DcER4oooggBTnlGpmck
      JtbIMaXiPVCWRWOBS4KRCwlG8aTZwidIwYx24o3EIroQp602AJcMpIiRA1ih8molpQdVPA2M
      NhxFVAoqpLiti/ROlSHNIRRr+W8bvpMJzry1FtqYxrWcdag8lzr0PticrcUqi7IRYd3x5hdu
      ERHFOjljN1e8BhCBjGlxmWaNIbYagpVgFPKMqdTsS9bweVrDFKjr+AyJJgXbKvLnQrorqHtO
      t9oAKXaveo55ImbflbaKwSXnOBqoSeC9VUdaYD5rOYiWZ9nGgZ+uMfGYR1am8C4G99JxpotX
      Fm1mskiws86hKkuk1DBrTANmles0HP8tTbz25hf+vfMOpa0YW584l3wasBJbyd91bP51naI1
      7i/jYXoDgJp8aC1m+QwSIpb5BliJiN+xTrpQHslI65OdVYbr250x5E4KDkwNICJYW0Uc3RjT
      WFgyoUCgQmzwwoYW0eRF5kWLNk08gKE9RQo648WxWC6wN5tzYnnYDKmzZ6sKJQh5T9L5rkRO
      3ZS0p5UO5/VmG0wWsCiseNJhuK5nW7m1lYjUK5UCGIoUSFOjBtAQ1OoH7r/uPZ9ZaUSR2g9g
      LRS1UkJ3lqMxdfyEr34WiMpU6RuDBHPkOZQOyfPOgrSCJoLWBs41KypXtoIxugEciKyz08c4
      hXLqRnYtpxUj02ZrO9uQDs/oonmiSUXFtsk1I6DgLVeFSyyLriu2rQbnPEhtBgPvZAOkhLb2
      BKf/Tp2QzJjoH7SzoDhQ8sEvfBF2NE3nKddGa7RSKAIfXoWTzhhOAhGGKSCgQf3cYvcCPi6C
      Pmlr4KExyz12KVLxrbQVJKi1naIKwbJq3DjbMSClKCT51BBwu4Rin2wNg246ufLijTIobcU2
      5Aek8cdo1SnZU2mIn30jZm1mWRbZpSbQAqS4lgAG62i96cIeK2cxp0op5MH38diusK8ihaos
      Q9RYN5KU+qRpRvGfzjlY1OmOXf5KW3ZWHHeT7zrPlYMlitpVAmSdjbfJeM9yk7WvnecZF4cq
      CpBX4eTjBBwXTIn5bHam4xJA4SyKaom5Qmo75UXE2XllxYTDMcQqRh4pavuIyEXzrGkqdY1v
      1Krq0/TrSmEMiTg+Rag8LA5a+16CCGx7jMvEWLe+St0uRZEKvBcdq6p5eJiQc2DMiM4pa8QF
      v6NPeO7ObtNvS8NIQY+0v8K6e/K6aFbukJM07bRT2qqXerH2BGgvyHV251iR61prkWdZ3L3t
      a/gR+O9YGQpMnaVIsMp5E4mAVQgCCQFvW4h36PtCSWgLmy3T65qm0g7odf1+bRQ3WZyEUJpS
      uQjdD0WIgdXyKmlcRZEKVBu+T/taozZAeuEuXs7Uhe+8R2UrVEEj6oQ0JyIdUHaVZwtsXklh
      J/dWCrMsD40gfKw6Z4zprTQtsk4BdQUSU9OxbwHx4txOIQzNZ2UrjuGsKfuulYYK/hCRAjxz
      xTgDrwmZCnigqC5ZCccFiq1jqnMcE9WNQlLTKB3z2g3QfsBNF5A4e+IQVlUFCuzQ9hXFZoVH
      IzFlo/tankzJOsvzHHm+ygs5SxGeShp9js05iLVTX4dEmQcJNPVJ229a28rJr3cQx8ogeDCq
      fmjt3AvN2hgDuFalkpD/ADCPSJKPyqoCOUJmTOM0Y8aqj7Tx6AslwbLOGW1HJnchMgibvHxj
      TEyPW/m8UvChiNHUxAjRhkVRYLlcNn5XFEVMf+yrgLxrkQRvYHWxVBX3IShCSZF2BhSBq1Qo
      YqiPKBz5aB75qayDkXkDepgJ+c1TRBaamlh7CEAYF/ciJoD7twH1xtAdkd6kUjXpNNYU5ixQ
      6rvK2PfOwNSFvw4SFbtMBSpxI9jR+QLVCv8j1aB9904/0/cMzjmcnp721q/ZhaTHtUvGJONq
      9BAjLjAFQqMUO/+KIgXDh5RNAqGydtC5WyvJvdJg5LbiPZdDF3Nk8vchmW7Ndy1NSrokvuXW
      WgFqkqMEV0f5AJto/TSgM+goA7HM+FqMNiQuy/U96j66Eiwa2nidHPDks4vFojMHYFtUA+DI
      a4NK3HF9AQHETJjlOZbhhJrnsziGoir5NHSO/wzfybNs0IGNc9Ny/jn+oqMvBoR6P1pvVY9I
      7tdVRHisUPjPh+/3sTjb91VKxYCcoEo6NEEckp1RIYgoJmZITX2ZAMkeEujTe8+YL1WDNXYk
      9zU6jUHbSQnCtEFyl9mWOkBd1we4BezBwcHKz9fJupgCF7nV8e8u+Z58J9VySiksC6YNe+ew
      LAsuO1hVsBXDgrPZjL8PYDabA/CwVX8mmvgeRLTiZIuZlJ6wciJsuvkrx7GNNtlvimRZzpvS
      89lmvY1rp0u4b4PDLK/zzAUKFQ7WUHBO7ero48HYGN0Umw1AA6biJO8sNGJeYlEs13ahr0I5
      EqO4OUWW0BLa8Fd6IrQRqrapJH+enp52ol1uYF6moF9pMlDt+NYZUc5aXuThM/lsxv6StTEq
      OpvNogkJIiyWi5Bj238CykIYWgDyHPLfNjGXXXC3fNhAWZbV3WF61oes3dls1nj3RFKgtzuC
      X1kbGamqcjZSlbcauBxDSgXeTKuGTbJgsyzDfL4HE5xQthltzd0OD7csisjxkGv0UYZTrZpK
      at70NQK31uLk5ATL5bK+/wS72HvPZkrLD0kG14A+4+88J9TL72b5LCaGzLIZiBgNmc3n7DN4
      MQtDI72qgtL9ifFi9/aZSe3AIAMSvvEepohWeivtH8cVOFMCj/cVI2NHW0o2MjcpJusHVKlv
      LFEh1+Sh1TLmUyZB8mO16rbt0xNBAkOzLI8lUmxY8ClJrLIVJ2CsCRLJwup62FS7aV1TELqu
      URRFLNOiiPsEjxFZaACfgkVVNhYWtT4b5yDLGj5CURY42D+I0VCtNBBsWh+QM6kTJMIm0aYL
      bjXIyaVLZHPYwQjz2quvWT+Czff9LhLaWs+X+hpa6QaZcsySNcH/BAAjdnmsN38GRVnZ2XNw
      1CylKMVP5e+cHmcByDHGYWwCoHvYmEDTPmzbilrrBtojdnXa+jOVsixjyRaZWJEhzRZD8Vgt
      ZU7EGDU8p0xKN8a2kimLAicnJ6iqijdBuD8pqoNJ8fDY3lGXKGkqopx48btI2psa7AS6YxdS
      Zl3gTOcdlO8+0aWqXln5RupsVVUNJI39LTO5/igAGEUEpXS0/SpbhV3koUZ40e0H79PCWqsV
      7DpNrzNKRyeMT6MaQVlXy759z7YPICaCIAtyEkgzvPT7VVVhuVwyTyepYtZ1ny5R1MzJi98V
      wpgn6EzFZ1wWzVyBxeIUxhiYLAvgQU00ixCqcF205qy6DaHQXpjY14E0GxaVXkPRTp+3CihV
      V+AuDdBFgKOjdCSBT2BjDBCu6YEVhdn+Tt+Y+p7b1A8cWgSRglYUClKNX/wuJMj3UXWHuqrL
      32UTyL9Tc6Fxr2CjdqVRpiVCJAGkzioCfECXpPJcpCIkObliCu3t7XWOdaxINxLvfaNGEhE3
      0XCO8X/mrddBHflMV5iuqiqQVvFUcXYYQNhEOACl46arQnf1MXMgY+/T7I24TvjTeQ/VUkRE
      FMESB+5AI5FhUgSMeGxpaO6CmUhqNYhoYuHaoFnEk59qCjH+6huLaZ2ImSGYMd9XxUUDoLM2
      ZJdtGV+UTKSgUQGCTT7ImiSYQuI7tE8Cay2Wy2VjE6QisOy6XNUhO1jKME7J0vJsoIOIcLpY
      4GB/n7va71DaC1GFk2BsRH4Qdmwownpu+rj7AtdyE46a4KZoNdi5oigdv2thi3Zt4MZIh2C/
      MTKFuCYZRZVEDYO0TSOpLNwYdCsqGKOiLeRFCvN2jonqTQCsOv2MVM3jv9u/b/sHXSJwXN8m
      2YScF+Manu9/cnp65pSOFLbtnOuOz4+BiYXDb4KJ24c+qVC4OP6O6sDokEiG2FDA1Thflzff
      JrVNduqkz8fius2fAyFiHE6TdTtd0IyuvgQcCaVGZbLGGIKTLI6vUgp7e3t85LbvkoyDacRr
      ygLScM2eTRa/MaYOnvlmC1VZFLumfEtvsK5AmfdccmWTtZO+L0mGkmT+1Py1VQWTBRMSgC+7
      KTFtGbMmTYM9JwzMHU5g6lu0B6cAKOo+NVg7BmiTmo5o2ymVP7uqy63TRLLwnXPRKRaoNH1B
      fXGH91uiYx/mQIPnJssyLEPlNWqVdhdpxzWGilHZEB+SJCX5vIhsBCmOtg1rl+e/Rgjb+REE
      3gTOcw0niW5vabAAAEyWZSENbbWm5C4k0iA6ghmDExZ+5RxrFwcupSjHBSE1uYYnXhHByr18
      /L/69yFsLk5xURQcjAqpiqPG+z5LG7kCEGMF6QKSzR0hw45Tsn09gBXQzOSNmkgA+56CDtnK
      Btt9u5yNNjW7jeaIT6rRaptLfCpRR1LMWDFlWUTkpq01dvHCGaabLjHSqRSsSopSEXdsSUUe
      nksAdsBeSurXSfZR8whPTSE5RZbLJZPDzJlXjtmZqAggAEpLzSJqLho036sL5Lp2dTz5uybd
      rNkUNoTkWcB7UAZQzzyl0fGu60f6QkdfMonGN3hllUWe53FTC7HSVtVGMSyVtixKH3JX5auF
      HjH5e6HIrPgAZegXxVFfDzbt6zHPZjPcd+99OHdw2MiQkkjz0FaW5287xaenp2t5Su+HjI3K
      yzsjhVhwQLS+h1CN2U8QF3IIbOgScerTNTP0XeuZmRmDWrZiTF82RlBIXbQTFXyodLNErpJH
      VFjwgHXj5mj1efrs7zVmRddLEZSg/XMJdkyVWZbHlkQMbQbbtCqjjSqh+txkqKoK8/k8UgYk
      WbwdzU3t6PRFCjVaIo3W2hWi3PstwjMahdAFZMjZUMgWdS1/hH+rMI/hqAQpCu2h3OhNIBj9
      TICCHkuBFypDxUJtz7SJfpfkDcSNMYJ2ISdyez0Rrf5sjOwsH0AGJdMnEV0JkAGYRJRqYPJV
      BZNl8MRxAaEapDyVO6cnOLpzjPl8HrB/thHTFkxtrpP8PM0JKIoiml/GGJRlGVt/flDCWnD9
      50RJpFqT+BcA0P38nqIzLADAGLNPUDxjshWTVK4vSfdt04tQl2yXNEiJeq+7p0/WU7wXagLj
      VCNoqx5hbRFYU1rhtD+/rvqBnCoSfufJq38nXRdNsAnTqDMF7Sf9aRvjEz+5pdyICLP5jNmr
      CdwqG0Dsy6IoIuV2W4kQ5kizcEpQkqi771bXaZ1i+7IBxFEea/YREWZ5zvTiVmU2AINtkNIe
      C12cpKF7Kk8oA0WeU2cDSjXy/aT+yNYeXpem7/ucT/zP6PyIHembVGW2V8MCCNi3OHW2lXDj
      fQh192g6dnINKleT4uJi9k14T6q3AYh1fMQp3sUpMKbM966lz6yRZ4t5CcGx7ON09V0jC+/H
      OgeHKuYtTFEYU5VL2pJKFOsYFFMUtAll+Q2wHeqTptX1iWgbPiprzo2wQdM8WI+ah6+Vjlqp
      KksmxykFeFfzQgIWLazF8+fOoSwrLJaLaO8ybAe0R2lCPf90nEQUzSg5CeQUkCba28imDZ03
      lb7FL6dQW9vbcHpLMKovjtMWCfrxRrCw3q7w8fs4XENjb/tpcmo5a+FSS2BkcVwJ6smsGDE5
      xtRf7xKiVfu660H4z+TBQsSyDPWBkDqnznFdeEMx458UozRi/0uJDEUER4HzoRSKogACJdl7
      j8pbmOQoTl96ltU8nFTrEXET77Zi6MshvtulvTC6TKK0iUVZVVzCUWtISRatxi1chqNDPwjl
      G2tDrIWxs8dR/J57tOIBZaCYi7Pdtxl4kyb0eRc89dJWIaNmGuJBIMxn40wDyTsoq7LRMtOY
      rO6rVVXwzsejWY7lPMsbtIKU4yFcEhMqJ/iOiLDWGoeHh9jf3+fvq7SXl12pxiCUCNUytcTH
      +EmRFPVqQJdCFGzNEc977cPJexBwYOw98yxjPlZAeATxmWJj9JlSSiloYxp0FS4pY7AsChTV
      cLWP9HrGOYtz585hsVjChQwgTxRvzNp62MEQ7SwYep8wyuAi+9QE+A1aUAgX2uW4aP6Ebw7u
      6qGftzFr7z329vbitaPf0vFytdbY39/HyclJDJa9X7WEzlJi4K9is5KzqjyWxZJLu/vmdOQm
      Q1GWKKpyFJIn1Tt8oC5wK1wpDT/dzE5P4niiJOapsHpVMIdsD2dJosZ8McCQZh/g9PQUSmnM
      8hlOlwtAcUTRkK5NjZ5jn4hQFEU0K4b8Cf5ZKL8RFqaDmEMEhKjjKmKxmd2cTkLKExK7X3IH
      NCn4nvdijMHh4WHvdVNJq18MjeXuEEKesQb18KiqWsvzInPNOdMay2IJ78L766Cpi3CwjHO9
      JZovQMUQOVDeexc1WvrLaaXjaWKCORv5W8E04rpJVSywJa22KJz6aYKVUUo3c2GVwnw2q7Pm
      WxlOnQMPUTiuvsWavI+GzCZFzVdpozkSMRSseExtl8GxDSy81CFdx9ocFyXt5qPIXI4tRbhL
      KkqXcLzAY1kWwbn1wXeqxVoHIs4OdBLJdQ7es3mRrYkVKKWQkYnzzzWNfOeziXEfmhMAACAA
      SURBVHYGEHPK2+Pl4sI+8pJMUgZRKYVsJkrNwhFX365CDEfgUhvQH7kzgzBKcZDJ+0SL1wPr
      eglt71wrBeXT3YoYHKkRoCaVWO4hDm1l67J/4pCbu0pjrpe+uUpLd48VQcjOahMoYqBAqllo
      zcnlUobFw0MF84JL0ij4YMqkBcqGxifK03vPWD0Bi4IXZGpKifK0zjKtui92QFxryfOu7Ly/
      UgrOWnjnsQykRhV6zHlXoagKzPU8RsONVCbe29+PD1uFhIe+up0iKWqSBpEcWs5V0PrU+k68
      TvjfUOCkTWcYI417bLmQxlzLx9Nr1emceq+hQrjbiigkD2Ce14zXylYogRpEALA3n0eKBRHT
      Q5ZlgcVygTzLuLjxmmeUWEFRcvML7qVWt3nioNh4iFiUbvfDcWdJiyoqWkGTKPxbCjMDISle
      qhQAdZVi7wNPpHVUyZ9dOy/cP3JQAO78p9e8TBv43UMT6bx0+1CxYtyYrie70KBrnb4wFuHc
      cFOMu/f0EjPTe06qkXeXmSw2lZbT2FZ18QB5/1LpTkznWT5bqyBkE8h95eRPo9xT3tUQ8KG1
      juCG9w7eAVnY6BL/kM1nUo9ZKx3gMW490ydDYXyp2y52n9x06OE8EOkNnb+PQbQ6gRpATNbo
      wrllMoZEkta31bYSpQa278R41hJNV79aqQNA1MbyWaAuQwIEJCbMu9jVJ6enoXgVX7PvVCBi
      WkdlGbURP3GXeSiy0bz3qEihKJaYzed1jECo8WKOy26XgAL7ArWmb198eJEGngupyCidgh0P
      SVphWT7fVb7d+WFKRmPM2Jyp2ryOjxHOXS7+LjbrLoRJaKsBI9nI6+bYg0lsRpuQR4D4+bIa
      V7G6DJB5F3t4isTu8x3vUBvN5WUs+xZSsbARB5C/CpQk5KKqqqDzzeryjz3KZODruDGp9hnr
      eI0RRQSMqDy3Turx7Hahsj/GeRBDKNUUGZo7ganXXkMRrPOoyiJ8hwKKaKG1gbUOytRrR4ph
      CZoEsJ/hnQckd2HN2NoSNw0lxRySr3MZFxUVU9+149kvSMAyRDqV1pPx97aDu06zjmljKZK1
      stZ2IXwkb389PvVo43jFkHCVtpB3O/H6XTnSwLBJuq4Fq0CSaeJQY+GFyndpdp6ckPJ97wVh
      YgoM+xjTQmRCKpTGKx0jRVmWyPM85jl0PXODDIdg1wl0NIW12DmhHjH3qK1lpcPfyEaVd1kQ
      iUUYkBTgualEt7HIVnrdsQE1510MZrbvuW1QThH3O6u0FdSDgZRAXTGZjonrXSKmlQvRYYkP
      9AVbu8fQXzgNPCSmz1sXrBnducEMiGBIBS4MkM9mMeF8W9E6HOGOGxjXmyCUXRyo3ns3StvE
      E5OBiNYWjYr+UWuTlLbq5fC3US4JGI2JDwz5X7uYc0lXtUn1OwCx/asEVruIdwAaLFQuBLyZ
      tTH4GaVRFst6DC1/h6kawXFzAfY02nCViORCoummNlWTlyf35iwtJlulMYGfFJGcWkM1XWNs
      1/YIkSY/I+KgX9fcdm2q6fEBapUA6A/WbfIuBHAg1AGotNJel8jCqzcAbcwR6huTmDzaMCIn
      NO20ggTA8LuJD05cf7Esy07TR17+VJu56yShkAOgW5DU+oeTQqofTLtTDtYlWgTN12aTcH5b
      VE/Gk1IKtKWmbtvXbHMDisAmxoRrtUX4Ul1VohUpKM3K05EFs3V8rBiRNgPxoUYn0nhCeP/W
      ORiz/ft0vi7Mq0MvOkD2lwd5Sg8BRrEkIihFYuH9SuBKNNWuJI05TLpuPMq6fjUOgdrG/o0v
      U6Dj5HcMWboGma+9WIauu41Yx/0EpAAsUMdqYjPsgQrba5EhX8+vCxsiBV6s1A7SmlvQgoNq
      oo2lKkW4YHz/s/kMp6enbE5tMAftd+mcQ57nqMoSpeVsPmEy91kvhpNhTMx66luQu9a4HE2c
      dk0igumpJAes589ItPYsioCl5okQtt7vU0o0dUplR0CQXPA15NRKF89qLMVHE5VZuoRlWUCy
      64TuoVRdyJgrRFAkMXLgycRxCHlNaNgIn+7r0zBG2u+bKCA/WQ5fcF2noizhFKDR3a/YOOsY
      7/e+0xERhuZZvFCl1neVTGXd59Y5hxI02cbkHEI2RGKJvy1Om5T+2/w5gxWpRuM+YPnKOCRu
      AsfdZ6qyhA4LTkxdrRmMSMfsnePexKgj+qxNA6JH0vKWEBj1zTKSzqFCnZZKpODgUPkK2moG
      R6oKJZW9i1/WnQABXSfESs9f4nqtztpYbYKI02kRkqzaBcCMJKEsi4LT4DpOgMpWa9vdbyKE
      ZnHXra41YqFx5bQteutOGMu20VvB0Vd/riKxK73f0Fi0YtiyDD2GtVJwWgNeCk2VsCRceRUT
      46vAzpTShenJMhiMVAoZZSAhN/q6W6W1Fq5y3CQ9VHZLjcloanmPUvquaYA68g+6aNOpCLzq
      nIMj15nMZPhh66Z0kneb5lxmZ7D45driVE6NIm8izjlU5fQId/sawDAfCuhHW8aepuxjdODb
      G8wPUbMxt1IKKuPxl1Z6JCAulspWqCoLT8z7Ny2KxygIkijmDHjvkSk+SWQtVbZqZPw572GT
      qnEmZN9JY/V1JXVSEVaDk9NKa47T6LrtrjyD4SRxy7TXgMgIDJrW3DxrEbShDfOlA5YjcROe
      PEO5zFzctDLDtgGkcBXsCvKbKl2nhlEaVfh3URaNqGme5zuhZctmTgskl0neLvscjBK5kLlF
      SvH9TYbT09M6SaUlfe/ECnkyKCwmeYacB1/XmjVSlMg67sGUhbY0BEDtiJPeQE56FtDQonTw
      UCFhYpulQ4p7x3ZRAwTZWLc5SsvNvTfhD/GJtxs0TcY8xZnvmvu0K6cOudlpp89dmHNt8d7z
      OrMuOOSItn62x9XKpebncrkEBhSPgBptEaZqneADLPwynoQkSVdACkvyUZjnOQQe3WTBpUkh
      Ius8/SHnUpOgNnpS3EDEe84O8t7B5LOV30mHcwBQ1J/gIUjP0P37TLldm3iCvqQV1TYzj7gC
      dNssG0vT2FS89yjKOgdZKQUyjDDNZjPYyqIoOU1zKDFLTDeAzSqEtUxoFu1lkqcDQgQ75gSn
      D6mIYtfC2WwGV23WI9ZaruPPtOj1C1YCJH12deSfT4QuRUtWlUVVlaCeUu0+0YJdHQsbYxmx
      GNrHsphfu6CXiOjgDEsu7aZxmr4xnTWEq5TC3mwekZrUwbYhYysmaoUT14VyFRJ9l+SaMinM
      RgDaqlspDe9djVwl68jISydQtJsENVjY1Ro4o2gRiWNbJZHbvs97qTwxZQZbYxLmIaRMnlKx
      1o+1lsPiNGy48AuYfm/5bvxZa5sR0WjKxFhJbXiBJsfKbnyZzYXflYNSGkatBl0VuNqDFCd2
      AZqVlyf9CVJItvl9gqf6HSilQCE+0i5qZqx30F5DqSTaOwKhGJJGk7vQYtN79NIo1EBZkj5J
      4TIX/BdxtmSD80YgmJmJC7899tTOHROQaS94D0QURXjnZ9FsvE/60KI+EVNv7Ek2Ju10qkhj
      6z6RTVCWZazSLYWXgXpNSeEslbwLlShfow2cYtaxohBwQ/PZTRviqhzngN45OekNjK0za5pB
      oXHl9KbqI2k0TVTnd7bvPTaJhNGAzSowyDe4MNMHw1GaItMz1loFD7xkv02DRYdkRan4ulG3
      nNqSN57yx1bu630jCp9nGU4Xp7HC4Gw2X4FTV7ahIgX4/hb266o2vF8LgF/AbugM2+Q9yEvx
      W46l05QS7hM2WbjbSxqnERHCn3c+UCPGM2L7RHzA2MhDUezZJjZpluUBBaxNnpRiLkUT+Bcc
      cIvVTWL014Na76mRESYlziViNoX9KQ7npse/7PoxGP2UZtxj7gsMb9w+Lr/IJifYyj3AdnF7
      /tpd7PvGKmP0ONsK1AIBOz/uHYzxN6pQQY6hWB35XrN8FgEE52wgbDZVTeUsNHhjSsl0r1Sd
      hUYUI9xdJ3SEQWUDWGtRmQp52HFTHCbnNrcXecDrM8S8Dw00Ok6nyfcUAGCNHW1DLqvG2S0u
      AqMVbelKSu+SdnGxsziJ03ma0rRjnRilobIkSt1OXPehjikpVKhW1qQsfmloopRCaTk/OU8q
      gHfem4hia1AQB4ukFr7WXMRIOnCse9CtnKWOW6TwpNh81g8zLaeYYmMdVn4h00ylOPaYDztQ
      zKlnvF3mVu/3MY1YeDeJ1hp6oGi69x5lVVMnKmeRhbqftmLs39pQaCvMQ57laxWB955h0Kri
      YqPWuQZK4L2HCkGxdRPbh6CMfilUk5ciHpxUDxPpCorUzhnDqaAaAdoF7XkTc0sirHKKKqWg
      N/ATOqPWHYhVCgdO4c3sSs7KB/Tex26QrrU2iqqsn9szlwhAiGivX/yVszBlVcZAQjqJMToX
      tK6YHFPx5nWBJRFFCpbCMa7E83cgpaCS6G/7/kVVwPtkA1JCE9i+A9TGoohiJbtN2iINLaih
      SHX87gdwEFi3u/ItqVSBAqNDDjKbwaxUsowpFaW0vyJO/lm3+LnTqFtdIV0ah5SKPOoq1I8f
      a2KsSxZPRdLuXHBeTDDDqqpqlPBr3AMKoFBpOmh7oQd8kOZAahIqGj+WlJohKYPpohpa/Fqp
      0e/mLOSsaOazLA9FfBH7UEj2lzAIZlkeN/4oZUOEWZb3q0iJoEqd0NMFJzdIl27p4rL+Ph0b
      qgX1pdqdiEDJz7x1sTS2ZCqlJDBZHHej7dtnEg4Fl4g4IOmI2a9TFtWUomC7Fhn3ptI+8dJe
      C1prKMewpvJ1vgLXoPUhIUg1rpFymYQYwWgS86eION/CrJux2CkRbFeXRYl8lqOoloMVt8aK
      9Q4aqxURGn/34DaoxLAwm0ZNk0zMHm6jenf38BrTcE6TjjVQf1Jk07XgvY8NLbquJ0pA/i3W
      CNf9WU1BFb+2qipI7+qgYjk1s65+CiMFQ+WL4li0BxijcERwlcVsNo8d29Nw9DpZwWEnLFZn
      XexsLhQEiUoKk3VdSfcPWqYsklob2v7oZ4ecNZNziqwDQWJV7fAZKasiiFllmRWqtebFqxSW
      S67140LewGKx4PiEUjFJvyrZJ5CsMw9CnmdcIoUHBnjA2EAykmoGfU5Xu+WlrXjHkuFEispO
      rxs0RSj4BJWt4MDRR9Kc2wo3vvvKWcsmPP11QqAAA6qIk68bQ+P7vaaYD+uOWyLtmvMDYIUF
      K0oLQCQs2oqbMxZBVe/N5tGMkQBZDM6GXtEOwRLwHipkmxHYRHaOC68pRbGPGBCaAGqFYrkM
      qZhongBKKWivI++CtXp/SQlJNtBKgww7yITxp8E66aptKZMpCEt6MgFYsQPfj+hodNzBimzX
      ECQRpxcShW46oUs6ASvPjeRn7S6Q7WvqMEdlKKmiaPdxhPi+gj8pIoFXrRRKH9ieAChUKczC
      s6bMBPL8e+trnr+UWVc6IJbWckCVCFoZUBbqAyUR5RgvgF91gmUxjY0miv0GoG6kMNJBlu/z
      gzc/X9mKnZQWhBo/55vZTCk+TKQAKddHdCZmkWwusTGlbetZSKoEBFKW3gYq6arTjg+MjV/0
      0QTa0hWYHDN2AFELt3k8RNysz4V4SVlVzAItS85QzDJeV46Jj1J/Kc5/YB9kGWcyZsZEJKwL
      bBHOEEPt1A2DTqn+lnr/tqpgTIbSFbFqLzvQw5PVVcRVnNne73kfcGcTJ0P8kTCy0TSC7su3
      I7kI8Qb+k6s21GVLxiyeIT7RVOGKchRt6Iig9YAJ7edKkZI+06cr6NY2r8ZIep24EIPG39/f
      x8npCVMdlMLB/gFOF6fwAOazGax1KMsSmebCbYtiGU8LseVzk8X+Yfxwq2OISoEINnmOnUSK
      4sVDIoMOiQzy8FKqrktrENHK4gewtgxLXPiEsBnqOvByrHd1mOyLMMvvuswZ1YovbCq7xskF
      LWo/b9ciTREVH3IzonmYfCedE6ERS59fqRwen2fNXMqfYstL4CrPcxBxe93lcgkCRTPHOovZ
      bBb+7qAUNa5vtIFFFbhZBM+NaabNG2oF0LkBZGK8OEl+3HEa8XwQ53VaLp+tE6zeBntznUh/
      4toX6b8fSEG3FudQ4roHYm3S1KGsNeLuHWpZrGNlKrVAq6bvVViu0S/HlpymaayAwu8l0to+
      qdMF3weOADXOno7dhkK5sgGAunRhWZYrPktafUKAhLR6uJcT35i1LVrXCVsnfIo06dBhwYtt
      BSJucjcRHXDOAa7eaUVZxIdn+3ycJoyTNASjhS6XXMkiCaj1LH4x2fgZPeTR6iji+wejjlnk
      8i66TByRdHPJNXNtQkTdN+z7+oSr792Ow6TX7fo7UDufbe0vix+oFZ/8TMa/zozqe398Im8P
      7aZWh5FipzEZAexpp0EJsTGntLFs/Dv8abRhpGjEA3Dl4fX3UlRnKsGPyyeIiyl5EZt0YJkq
      MtdpArjzfoU/k26MFDacAix0vS+5n5QrHLsB01RDETk9ADR6Bou5k5Yg3NvbixsgrdQwNSay
      q1TT9L7GeQ9Ihw4SnLmpaWIx1C04+Jy141aOy21FJtVkBt72w359303+tXOzp+t+nNBdwRjJ
      Hx4+3QAMmiGpjNGsUwAOIY1V1mIeWqFGMzf8XU4Tea/e+7r2DhH29vZiO1WRouJ+wWdBnJsq
      RhFFWkGfBsxNFrVHV99gYI0WAYKTQwGj3XGSdUih22b5bgJhTtFkopWN0li6AqXl1rBdc94F
      FEyRsZ8f+hynEyKYrBVOlwtOTg8nh2j4NME9Ah5hYUtVh7QPtfXsWO+yEXhXHaqxYtqefZ+I
      9hDqtJge0u5ylue9G4gQon5VdSZmBgc16m6Doo2mTsgmR7PUuBx6LqlcIdF0rXSowWmhVb/T
      vckL3eQZuoQ1eDBFacatrqxF5bkXmPUOsyxvWQo+rgsijsIKuiPtlFyoD7otPJ0+o8DTm8jk
      1WiSCgpCQyUARVH2HsFiG9rQ8tMmdu0uhIKzToo3QmWr2FlxirTHlCIYffdVYTEPjg81kCAt
      heTlSeJ2+79NxIPh0NF9kgfuFaI3ANiZneU59mZz7M3mTEkuSxQBzUnRs5S+4L3HcrnEPDSq
      9uBNYzoqPY8V6yxKu1rhe1OIefI5lEKd4S+Y5TOO4AVGX5f2FX57bJ4W0gx3yT+JWHVI42SU
      Z/web5+E45x1QrkmZbSJkqDxqoQP03AQPZBlJviYvsHDGtLwkjswFNVNmZOygGd5vvL51Nav
      xx649/kM1jmUZRFYnBp5chqkm0piCXYLMyUVpRSsmFThUttE4HcWCMuMCVHJujug5NKyo+1q
      h1XreLzu6v58CvBkU2i8MSXqmnZFmSpT7FmtFFSoAial/WQelGYTU5LwI9s1iWkMJfGPQUpS
      NEdrhWVRdAazhkwyIsLebB5Lq1fWAlTGvA3rHDLwGsiyjLvHT3wffUKgnfaqaLw5sd02EZl8
      jVoDCEIgcN4sn+HUnYJ6GnFsKlnI/LcnFlVo+eTtxLzYDQ3JTeZLvtO1WJVS8MbDhUQPqdRh
      EWr4A8i2mLt0vMKhEZNUoutD8YZ0nDPFWViVtbGZhVIKxujG54pi2YgBbHMK7BqpixtAOCV9
      /JsuXsi6QabNL6wPlb20xhAQKrgzvLTjWc8uLUJBX0GyiKSdz3gR7RQrzmE1BbNmyZ5dvEDm
      V+6gSGFZLGGdwyzPd96sMNOmsYDHcpvSa5jQ9V3MXJl3k5k6juGB0nL/rrtJGm9SQtB9Mhbu
      4wmtGvYqEdv/zPNYdb6cZweuqEpYWzFc5plpKkVux+DcMgbWNtOc4PAEsflzWxSp973aAhGz
      JaVu/641oCxg8QmkZHlbIohhbcPpZ3jcxdqsAPtifKogMoVtKGx11rGWqVKXR48arznAqbAa
      IyME13IMFVG0X8uqAgwBUlvP1yX3gBpOk4lmWoaPGmrIlpR+vFEbTTxyCf3NqD+olycn5yZ9
      mteJC4pGGl1ba+F7TGyhZKTzL9UV0p8Lh0xSVIG64NXdJnFEEqRpmxtVcMomXTTU4RfNLdf3
      ziPPMhhj4MPEiwbpktTckpe01vxCXQF4kwpp0aG+izRV37sZI+tPzpapRxQjuu3vSmO7xrWB
      hrOexUpsBGfrLLOUZXs3ydot2a6nPvrCtGosSAMOE/rVprICw3Vc0zrOhhqaSEaaXEzO+f+L
      9Pll6+Ida+fAc18urXSDwgCgwejsgjgBdqRn+SxWanDOhdMqNNSG7/zeBylSZAsIJpDY/l1H
      lPQQmyppx3QRQYN0pkEVaso1KPQMls9xCN6KY9bahOtGUzf3u/uO3C6JvtcA7VwQFE7vE16R
      jeZiX7xjHfQoiTVSVxNEsfRgOwYg4xAOkKK6ZpFznLhijAmla3gNpOS3u2UTeHAKptIGhruI
      c2Nko0xnUGGs8xses04goVV/ggjwjh1l+QwRwVZhghVBQ0MRv5x5iDyeLk5D/UfV+2LS8Wba
      rA1Q3U0iiqBPrLORSiC5tJIBJabkNhC2mJdEDGBk2kStLg0UmwhhTWv0geqRXBCzLK8T2Fun
      yAct3JAlnADsaHJbmW2HV1mu596HWNTOrcV8Pg+N+SyKoqg/6xFxZBlRWRbwbrWFqgsmUTv5
      JcsyFGWx1RN1JeSflYwJYAF10otFM7gIsL+1aZOPNEglmyFdsK5jc0oRWkZ8bPTRxE8oiwKc
      w8tmFEeo744NkAYSAxlu/OD6drKYHAKJdRVojaeLBxcuQp1MLymU6T0UERZLrkjXZc5EJzpJ
      bAGEL2JhaBzRr0vOeuGLOTO2q4wQ6IgIJjfRbJJ+WcDmjfKss3ENcHI/byjlQ8PqVraWmGOL
      5SJE3nnhG22giKuLe8/NsaEU8oT/MyWetImMVVxStNhMKWoFINag72IwSom6MQ8mZSmGUBel
      1GBtUYY8VYQ+gWQzec/R0w1zGM56A/Rp/UGuT8vMI1AsJOxC/AVUV3noupZzDg7N6nlpVF5O
      AGddCI6G2E5VN6XLQy9poH53JjShSP1F8QO63JNdzm/bPxkjihQsOorj9t2gywlrY9Jjbx61
      n1LYm89xcnraaKk65SG6nL+65+/dBWeOEe85R7eL79K3KUzCx19XGp2IoNvmTOu6KlzTORtp
      0C7x2ZbB9JHMMvEfnHfwpcV8NsdiuQiEte640rYiyJdUH7Ehx2BSBJv0+g3gQ4RWWJ6K6toq
      dQnwabankMDmsxnKotzYdm2LaH/h0fykoECpeNTkunZGWJ+4UN2vHalOocsp5hYQlEeSSO+1
      ARFXXQPVUKJWBBBD1MKnWhZL5FmOqipXriuKdBsR6FdOMfFHJNbgQhOVdXwz730zKb7LNpMg
      jASXjDaRN8Lh7w2aVwsGawyqsmq8KNFgUzeE9x7LsgB5iUH8ZGl/mRcxRwXtAUZsAHjAoZHg
      317wfSbRkIiZlh6ycZE5F2nbQKB4p7ECiinDK9fc9L3I6aham0hQPyBEtp2DA1Y2fJzjJGLd
      OAGGbPH04RFSG8W7Ty++EtDquJ5HSJTu6EQvfHWpd9N1jfbP0yhjWsdnE813t0iqjOTF952U
      0jVeJEU55N/RjEUd4SWw9iZQoy1p33hScEKyuuTzApUCQGYyVOVq0sqU5+6bC9H6Ds3gX73R
      CY7avSCbz5Dew7Qv0PUlYUhK5Qj5PFFzYiSYkkYE02tL5FIR48Snp6crDyF9YOusMd+oZeNc
      HV00SnNhrOD4Wevg0OxIwxBe7cPI8/TFE4bmov3ZXW8q612Ee9u0j6Gcg06l1XEyp52A0mcw
      AY5mn6rfbJD7iNObilYaleSCJAu/b0G3rxlPFfiGSd3e/PJz3TMfihQy3Q3sCLwr11NqTQ8h
      G5ygtviAIsixKqUNTShYJBMsGyL+2ztoo7G/t4/lctHonxWTQkiFfmW2XrSoOSVKpw8W9Jyv
      U/LSTco/0/DecRqdrytfyOTGiQYg7FHvmmMSkcwmHzbQLjvCp6iO/HvXIn4cUC9SeYdG6fhs
      6xCoLpHFKaZbnudYLBcrn0tN4OY1a05Ye1a77qyoe57GjFODTTSijtqgqXfdRzpgaKvekV1Q
      pdRlB4QiXcFkGeazGe7cuQMXIpsAGh688wFXVtwKhy+AUGWOnSwpbJXCqOnEuIRoFxErpRp+
      Qbpx44SOWNCCMzvvoXYc3TR6lT6yK+ENlvy7ZSIREbCGPd7Xn7k2qeqKfFVVMifIrTJYqWPx
      Sg6yQ7P6SIpydYko0NT66Bpj2vwxM1lMn13JCKsCvKWSY6TtHA/BbOkLTOExEGE+m+H20VHn
      9yQvVl5UWZaxpqgMPB1HatIAgXrr6gw0xbBIf6UK6q5JOiRp+fizEDERp+S4ts2JbcwzZnba
      yAgVH0GUiffcK1muLPewoVw7PEVERmvDvRxaz9M3rvhOrYXD+CJs3/3ud/Hxj38cv/u7v4sv
      felLuHjxIm7cuIEnn3wSr7/+Oi5cuIAsy/CXf/mXuHz5Mqqqwmc/+1lcv34d58+fB924ccOn
      JoHYiVEjJ+F257kVZcz46UjAlsWRLjzRyIcHh7h9dLvzQcTkSG23MS9RwvDxk0SxEG9bhDox
      Bi+WxUjBSWx30QEk8Lf7JJUpIjybqGxGREIFwfMtgEA2j9TZAVEoW17D+c6v2u8SQRbfz1rL
      tGgTTuowxsjA7JkzF01fNbpo1nvvvYe/+qu/wuXLl7FYLDCfz/Hoo4/iO9/5Du6//37cvn0b
      xhhcvnwZp6enuHDhAq5evRpSNYvuMGsaJaxJUhThRbG5K2uj45OKTGrc1ZAFZTttNtH6aSCs
      Ez3ydaJ4/TO5Bi/GoZhCl/PWJ/K83tdmYX0Ngdxq3Fk+M8WEiU75tmViaLrG9361ip7MuyQd
      SUAsCzQHow2y8J9we1QAPyqp6x8yAbmJtY1UCTlFmNRnO59X7j2lYtyFCxdw/fp1/MzP/Axu
      3ryJixcv4plnnsF9992Ht956K47lhz/8IbIswwsvvIDDw0MYY3Dvvfc2FQp9FAAAIABJREFU
      TwCemG67ViDFKtBb08/kSaGjhmMZHloSY+bzOay1sfGefEZE0I+ue9tQV5PQ37Hm/ZJ2zCRt
      1CEbgahuzNGmmqd8dKKaR7VOBKlJn11qogrC0RXLOWuRDdzI4EPSzC4zkR8k7zsLNf23lW16
      QAAdZVH6Fr9NnNb2Z9Jm2Cu/c9ywjEJluJT4ltqrslGy1L6Hr6sQkwLdJXh+e/NGXwmAkirN
      yecj9JbAwnqDRep9qBbRcvqR/Lu9+EV5tLVqWpJl2zmNFkKivCSv2igTeww0SiRaC9qiQFZ8
      Dtl0EZ2b5teN5gJ1ZWENmSvye601UHI/MZmI1FmT68cHClwjses3zSWt7VkfTatdS3thNVGN
      Wtpw6aZj6SpFnl6v77qdOR4YfndTpOsaOhDqypLrBZksYxaBL6Ny25WIb8djWU/ujLWr0OoP
      wBfoxoBrmJKDYvHopXELND0i5ZpddqAc4dvwg9p4fR+cu42832aG3DOVMSXd+8a4CVo05Tti
      zyM03ivLAgcHB6juVL3vfkiGaCHp9cYUX5Y8FIUQB5AFA3RHHNs4O0IBrHU1MUVkcEYbLJfL
      zoErpXZGipNr97VlEhRkSg6EXDOVIWdNTk05xc5CYr3RkZyhVBicWL8I288+hfwo9xBlJAFG
      YZJOkoGPR0vDr/lgIqI4jHMORWhQllYGG3URqfk/8J00HU5rhUVocizOSwp/7mrxcx5Bv4gt
      rSYEvqSlEjxTFvqoCeIIszO8XV7yGI0rcztVo5Igemvun3ZwTxGwMeOrbK3t5Vp5lqNCufa5
      2rJuHqcmA0UI13lOOs9NtlHVXu8xWKmh1vA6JtMAiC2NjNLvO6ojp80YSSPjYjev+y4/F8OF
      uoWwVa4bOm7c0zF1o7Dl2krPbQe0D2JsPhMHPMdUkW43SE+lTTtpi25lGlprkWdZqBe0Cv3u
      BBJORJ6zETBNoGcAMNyFr/shhzR7OtHrB8yRZWNM47i+GxCddSILa0p7qN7T0Nf9vobEoaZx
      uBB9HSu+zlUf+Iy0xRqunr1unOvMGCmXTpri8xBR/LPLNB1z39Hi634F4i9JQ0APQMND9cFg
      ErDok7oGZ3cNoPi5sNAjrwcIHBGHoizWasMPWtpHb0oQlHKOYzWWCmDCuhNEIUF1JmrDvo3q
      nMMylD2MJlOiGUV8x8+GZF2xK4lxpC1s+5A92RRj7j9mnNL8hdc3JacOz29lbT8MmlKQ+x5M
      k4YasWvFV2gH3Iw24VTYvDT5LqUvkNQEAZI2o5gW+R37fBFexnQHegiSFqddkYLpuew6LlJ6
      6m/i3AtpzXawjGXspa3WAiJSeTyFmIVG0dXQTysVuxnFgKoZSImc8rLWiTiPzlrszfe4GXI+
      48oQVYX5fB4x47TboPD2dynrnHzrHRRUbw3O9sbYZa369LpZACScr1mv214zXSwptymVdchW
      Wu4yo+nAhbU2Nt4eknV1UFXQ6s2frTGrg+2jgs80eALsSoi4C3gG5tmXrggLXEhUGsWywGyW
      w8OgLIqEar3bsYhJ18fjH+Pgvt9inQV2nHsA1IuZgEG6cdf3AA4+D7kb0hfNowmt1xXC+68/
      JlDWF68a+nymDfI8x8HBAQDg9tHR9B5hUyWNFos9mEYh4/FUlCAQsjwPqJJbC9P1yevvvomn
      Xn4mluYWcb7m5PTZkJsEuNrX2hWawfNFa+3sPrmzPMHr777ZifaIM9pewnEB9syNEOGMMoNO
      sDiaacJ6W/rmZ1cFtNrXb6/FzJiz3wBjhYhgw4Ldm+9t/NLfu3Mb/+hf/Cb+0b/4TfzR019v
      3gN1RYGuRSFowSYLtz3e3QX0NntFzjv8xv/1z/Cr/+N/hr98/qnOz0gdp7ZULSg1XcBRia15
      vnSzOO8a15Q/2/eJ1w/Q+C6kff2iKGIq7v7+/uoG4J5P1cYLcAqK0MaRCcRlTZxjvyBcS+i2
      467rI3DS/rQKppWU+mu/RBv6XU3tLtm+W6pltpWttOEIlKQ9xjYNxXuutrHNWdY+yYUUqXs2
      9y6Dosaw2ZPKYrHAUUjM6qRDW+8ijWBKZBioaRVrvfie5BSpbjbLc5ycnMaXKHUnx4zltXeu
      4vqtd/Czj/w9GDXevk2Lfu3qBYg9m8J+fXh33z2nvgOR4+UJ3j16Dx++/MBWEWlpPJgu5Cmn
      ZHtNKaUwm81WiiLsWmazGfb39+G9x61btxq0G+899vb2ujcAgFiJmNQ0YlrXC+8SyeSSXF3p
      Nqi0wv7eHo6Oj4FQ3VmclrOWNmFvF5IqBAAxrwFoOodtdGmIWrIp/BgxeDW9RlBbtp2r2WwW
      T/uzkr29Pcxms5iof3x8DCLCPffcU/ufX/3qV/9JetyVtmL+h6mrk6WT3vbOu7TYmEnl4Eh9
      BBdlAecdDg4OUBRc29MYEzuO/PVf/zUefPDB3mu/+uqruHDhAm7cuNG7Yb72ta9hNpvh3Llz
      vePaVRg+FXG+xfzywQRrH/V/8zd/g+eeew73338/XnvtNezv7+OVV17BbDbD66+/DiLC9evX
      QUR49dVXcfHiRbzwwguoqgp//Md/jPvvvx9vvvkmjDE4OjrCG2+8gUuXLqEsS/zhH/4hTk9P
      8fLLL+P09BRKKZyenuL69euw1uLo6Ahvv/02nn/+ebz11ls4PDzE1atXY/T+9PQUy+USN27c
      wK1bt3D+/PmQqzF9IznvUVUl9vb2dkp9aIsgTpKLIHkoxpi6gklXTrBSKnrx1tpGtTYOYOmY
      wb8tbCgPvyiWscKwmD2RGm0M/uiP/ggHBwf45Cc/ieeeew7Xr1/HhQsXYK3FxYsX8e1vfxtf
      +cpX8Oqrr+L27duoqgqXL1/G7du38eSTT+Lhhx/GN77xDWRZhuVyicPDQ7zyyis4Pj7GF77w
      BXz961/Hr/zKr+D8+fNbPc86scHH6sp++63f+i38w3/4D/HCCy/gnXfeweOPP457770XR0dH
      ePnll/HFL34RL7/8MsqyxOXLl3F8fIyHHnoIL7/8MoqiwKc//Wlcu3YNN2/ehLUW+/v7eOCB
      B3B0dIQsy/CpT30Kf/Inf4ILFy4AYA15+/ZtbmE7m+Gpp57Cpz71KTz88MN4/vnncfnyZbz5
      5pu49957cXx8jPPnz+Odd97B/v4+fumXfglF0lmyz2ltnzTe14n/RIS9vb0zNYUODw9j8O34
      +Dj+TPwC1T6CjDbhuExKSaAePMDFqaYQyoZEjlICw1LWruYN37lzJzrCb731FsqyxGc+8xnO
      6ifCY489hsceeww/9VM/haIoMJ/P40N+4QtfwHK5xGuvvYZ3330Xr7zyCg4ODvC5z30Oi8UC
      n/70p/GjH/0Ily9fjnai0B36NJMH8P+++Df4xvNXJmsvFYJnXRrz53/+53H9+nUcHBzg4x//
      OC5fvoyHHnoIeZ7jQx/6EF566SVorXHp0iXce++92Nvbw4svvoiiKOCcw8nJCd544w0opXDf
      fffh4sWLePjhh/GpT30KL7/8Mq5cuRK/K7b4Qw89hP39fVy7dg3nz5/HhQsX8OKLL4KI8MYb
      b+Bzn/scXnjhBSwWCzz00EN44IEHcO7cuYgGretdJoE8EYlIe7CyXSwW2NvbG5yzIc7Zuvk/
      Pj5u1KcC0KDl0JvXrvnI0HNsdiyLZShzgV5EpO8lTm0skUJiog0kclzZCooU3nrrLezv72M+
      n+NHP/oRHnrooWhDlmWJW7duxZ2+t7eHk5MTWGtx4cIFzOdzFEUBay0ODg5w584deO9x7tw5
      XL9+HcfHx7jnnntw8+ZNfPjDH0YZKj6QUpjls86Xe/W96/i3/7v/GIDH//7r/xwfvf8jjeex
      3oHQLDu+TmRBTpFbt27hqaeewoMPPognn3xy0ne3lW19ACl+ZpTG3t4evPex33MqNYEQ8bSJ
      fCHiU2y5WDYc3DzPsQy0+7SzZYxgZ1k0g+n62297UkxWk5yAqqog5Qb5Is1OjkPJK5t2VnHO
      AYoTG6qqik4bEWGW5zHhoaqqScksqaTHcV0jU3gtFG1dgDfAfDbrXMQnxSl+/bd/A5Wz+B/+
      w3+Ke/ZqnyKtTrwV8hKuc1aR6fej6feQCDVe/KD9/X2cnp6uaHSB5NmHqsmJ2SzH4f4BlFJY
      LpdYLpeYz7md1mKxwGKxWDG3RJRStSN87fpbXjjfQu6quTiScMw7rwrMR611UvEAOyGyRZ42
      6lY7jRv4evDLYsktnUbcU2qRsgPqoi8jGigzkgSkmCYsfcVoNQe3ed26b9Y2z9wnXOV4tYbp
      mOutUxCRBtGifvSRAYfGvQ2K1F6Us9kMx3eOV2oVdY3pwoULK3ymsixxcnISqm64WF+WO9c0
      UbZ77rknIGIglLaMjqfchCkKOtbaAXz0npVSTAYhRoWEurCNyDGlScE7h7IoUZUlbFXBVdyg
      oaoqFGXByMRI2zt9P+nE8vAJR7ePYLTB0e3buHXzFvI8R57nqMqq0Wz7ypUreP311yOMmJkM
      uclwdHQUf/bee+/h5OQEt27dis/T/k8+v27hqFAcauoCK20V+3L1zwlHaduBKIaw18tUGnjf
      GBrXDJZD1jKtZR7bn08dZ+ccjo6Oor1fhf9kDtpJQufPn4+bxxBxV8a1g/UcSbXOwjsHKVGi
      iaAMVwAAdQd5pmgMvmb3eAR2y7LxNWW6jnjvPaqK0/Wefvpp/OIv/iKeeeYZPPLII3jppZfw
      +uuv495778W1a9fwiU98ApcuXYJzDj/84Q8BAK+99hqefPJJvPHGGzg+PsbHPvYxXLx4Ea+9
      9hp+/OMfwxiDJ554As8//zw++9nP4oUXXsC1a9egtcZsNkOe5/j85z9fn3IdcuPox7jy0vdx
      bu8A/+Bjn2k0gwCG26mOzYttv4uxPgj7N/2bOFJKMO6EFDRI8kTWidY6QqgnJyfRd3DewYZ1
      CHR3tp/P541/GzF9xixMZ23gqDePTbazdDxa2w8tzsjULLAGHyU84Gw243FsYXJJqpxW7GD/
      +Z//OcqyxEsvvYQsy3D+/HksFgt89rOfxcsvv4xLly7h7/7u7/DYY4/h5s2bePPNN1GWJT78
      4Q/jxz/+Ma5cuYKvfOUr0FrjwoULePXVV/Hcc8/hc5/7HL7zne8gyzI8/vjjOH/+PF555RU8
      8MADeO+993Dfffd1ju/5N3+I//R//ae4ecJlJD/z8JP457/2G8FMpdjbdx2N4aykr3iZ/Cm9
      BobozCJ5nmM+n2O5XOLk5GTt5yW6a63F7du3o3mktYavOEdA/DrvuCYtRNsbw9Hf1PRqP8CQ
      9NmGBMSqzl2aeSrC4cMCLaoSpa1icE5rncC0PukhME1Eg8EDTz75JL785S/joYcewuXLl6GU
      wg9+8AMcHh5if38fFy9ehNYav/ALv4AvfelLKMsS58+fx8WLF/Hggw/ip3/6p/HEE0/g1q1b
      OHfuHD7xiU/Ae48HH3wQ3/rWt/DRj34UjzzySNxE9957Lw4PDwcpwf/L1/7PuPgB4OlX/xZ/
      /nd/zUULMMy1OuvFn1a1AxCqBVaBZMiQZ2yYNzAWrTX29/dj0C6tFtIn+/v72N/fR1EUjcUP
      8EZKDTjpcp920dzf319VGjdu3GBS7AbITSrcN6yCCTYc+c2iqlJctSxLNndCwIKIMJvNYCsx
      wTYfr7U28tX39/Ybv3v22Wdx8+ZNfOELXzizciZAP4xIRPi1/+k/x/Nv/rDx81//5X8f/+4X
      vhJaBKlRPbDOQtrOa1egq23Dt01gKZHZBXt2CRHh3Llz0Frj5OQkIjyyBrz3gCIc7B/g9tHt
      yF5IS6If7h/EuFEqO0uI4aZqhhco2EdIo7pjRBaFtRaemqYW30OhsAVAwDw4qhuNVSloRVgs
      LE4Xi9iUwjqLRz/2UdiqwvEdjhqSUsizrNFYY8xzyESLtpSTUWIbfdfy3uOXnvwHjQ1gtMHP
      P/azAd3pzuTqE0GTphScHZIusysVD18nv4MxdyLCcrnEbDZDlmUxFjNGjDE4PDyE9x5HR0eN
      IBbACtPkGc4fnuMYQHYZR8fHOL5z3NiU8/m8U2GarofoE2FLDjlg3ORBxQCG1qqGFkdIxP5N
      zmaVB7TR3P4o1KHnChMZb7axCyHUGOVO9Q5ZliPPMyyLApqSbohyjAbN4q2FM4a7IY6Upoas
      S40D47KvfvWL/xZOiwX+5PvfwLm9Q/xH/9q/g4/d/5EGkW60owuaNPZthSsGulhjSkzG2WwG
      7z1OTk5GvzOx96uqCk1VmrVpnXfQxuCec7VmJyLkWTNNVRC4LqEbN254OUbWaTjx7scWVPXe
      s3Yduf7biRdxkGHRVs5iPpvBe56cxQCHpBH0Cv6CjN1oDQS/5OiYeTJAnSzdNk906Ja+jYm4
      yXdTDTZVhmMMq0UIZI62PSkECMm0AYhw7vAQWZbBe4+bN2+Ofpb5fI79/X0sFouGcxzjRcHn
      vHThYuxFJ7+/eesWjNGYz+eoygoni1NcunCx/wQYK2zb1zkCUie0zxYlIi6HN/IUGLLr5XdF
      WYbwN/ef6qP1pnUzhXrNn+PfF8US5w7PYX9/v1GtWhx22QAyualZ89wbL+L3v/Mv4b3Dv/mz
      /zo+85H1NITFYoH9/X3cuXNnxRk7OTnB/n7ti9y6dQvvvvsuPvKRjzQ4LGNE/Kcs607WF64T
      N8ZzePf4PZzfO8Q8m22VhaW1RlmVsXz9wcEB8jxvaGYpiyh/n81mWCwWK77QwcEBsizD8fFx
      p59QVhU8edzbWvzWWpwsTlGUBfb37+ES7EpFVKpLJplAQNP8YS2yvjirlD3ZRmSM3CuMtZhQ
      dcuyWInappuSTRsXahGVmOXcUMN5Hxo6s12poILZVaNWmcmwWC4i/Pi3V/8V/pPf/g2cFrwB
      //T7f4n//j/4TXz24b83OP5vf/vb+PKXv4x3330X3/zmN0FEuHr1Kj7/+c/j2rVrePzxx/Hu
      u+/iE5/4BK5cuYJHH30U3/rWt7C3t4eHHnoIAHD9+nV861vfwi//8i/jgQcewO3bt3F8fIx3
      3nkHjz76KF544QU89thjuHr1Kj75yU/GuEkzAMhBsNNiga/+H/81vvfKc7j3/CX8N//eP8bH
      f+rhjd/PwcEBbh3dxt58jvls3mlN7O/v4+TkJPJw2otfKYXDw0MopRr4fiouWCrnzh0ia8VR
      tNZwNhArMwZPqrIajLc0RpmaIGNkDBIjZtC6Mnrp59f9TghrDG95zGdzUCupJ71O5C5Buhiy
      U1hVDK3O8ll8ltilMkBnWuvYfA0A/u+/+X/i4geAZVXg97/zp6OeDQBeeeUVfOhDH8JnPvMZ
      fOQjH8Hjjz8O7z3+7M/+DM888wyWyyWKosArr7yCsixxeHiI5557DleuXMFjjz2GJ554Anfu
      3MHt27fx9NNP4+rVqzg9PcW1a9dw9epVvPjii6PG8S+f/Stceen7KG2Fa++9jf/5a78DoG40
      PSRdATTvPS5duIj9vf1eUzrLMhweHqIsS9y+fRuLxaLxO0Fpjo6OVha/nFzWWczmM+zN91bG
      wfB5hdksj6DDsijgBkqwrDTJOwsc2VYWxnB7NR8m11Nw45L1Lg/Zx8HRoZZLVVXYm++FljwW
      VrHTZROEICVBCQcoMwbGaHagreWGcGB/Isu5cUdVltzeJ8QaFstFo7nDJpRcgJ3wb3zjG9jb
      28OFCxfwgx/8AHt7e7Flz4MPPog8z5FlGe677z783M/9HI6OjvAXf/EXuHjxIj70oQ9hPp/j
      6OgIly9fxpUrVzALHTevXbsW0ZI8zyO9eMina1NXxK6OTVB8s1GJmJNEhMPDQxwdHcUI7mw2
      m7Ru7ty50/j33t4e5vM5yrJsIETiT6g4DkaFzh+e67yftRbOOuwfnovfL4plWHvdspIS2ZZN
      NkUXNhx+AKWkhzA3y/AjTwa5jlQEi6zAEACxVQVn68y1lPgmvkpqCmR5HiYnayRNL5dL3Dnh
      FyTRa7HZy6LA3179V/j13/5NLEoO3OQmwz/7td/A33/0k4Nj1zuCIVPx3uOpp57CcrnEF7/4
      xcZ7Wld46s7yFP/F//Zf4dnXn8fFwwv4b3/1H+OJBz8KoXNL/i5vCB9q6jPN4OI9FwKS1k2J
      Xyenp6c4vnMHRMD5c+eRZRlOT08bJ4Isfvk7wOvp0sVLjCz6ZjcY7z1uvPsO8izD4cFhnO8b
      776Dey9dXo8CdT3IJm1nJJdYD0BPMuAxCJEs+r5KARIsS08NIm7IUBRF4ggHpzaMSSkFbQyK
      5RKz+TxOmHOOMeRYn5P9HOZDsTJ4+rW/xe8/9adw3uErn/s38Pcf/dTo+ZExDyFpzgeu1cjr
      1aXYu/lX9X2b4Kn1Dm/dfBuXDi5gL5+vH7f3kSa+rSwWi0iujIHP1pgF+SNi+npucsxmM8zy
      fMWu//F776GyVWOxO+fw3s2buHSxGwECAHrzrWs+M2ZnvHDv67RKaWjdxcnmu1OwN/uT6KuQ
      ktkutZ3ej7RCnuXRjs+MgXUc5GKnqF+cdzHa7B23gU0DOWOfmR9n/HdOTk5weHiId955B/fc
      c08sBTN0jx/+8Id45JFH1p4m1lq8+OKLeOSRRwavOSQ3b96MqZPp31O5ceMGrl69ivPnz+P+
      ++9fycVeLBYxQcV7j+Pj49587Dt37sTEGEAoFlxO/cI9FwaVaVEUePe9H+PCPRewlzyvcw63
      j27jnvP39L4b/dWv/pf/ZBeN0hpC7dounL2zugE40irZZ52XiuFuAH61TqZArREfdg7LooAN
      zRikKd/Q83nv4RKKhUhsB+Xqvrp8n1qTpmZeF77eJy+88AK89/iDP/iDSA14+umnQUT4nd/5
      HTzyyCP43ve+h4ODA7z66qt4/vnnceXKFdx3331455138Nprr+Hk5AS3b9/GD37wA7zzzjv4
      2te+hieffBLf/OY3cf/990NrjaeeegqHh4d46aWX8Morr8Rk++9+97t4++23cefOHSyXy1gr
      55lnnsHe3h5u3ryJ3/u938OlS5dQFAXefvttvP322zg+PsZrr70Wr/+9730PTzzxBL7+9a9H
      rf79738fDz74YBzjs88+i3PnzuH73/8+Tk9P8dZbb2G5XOLZZ5/Ffffdh+9973v4/6q7kt04
      rit6Xk3dVdXVA9kiKcuiJMsCLUOCDQOGdgbyB9lkEST7rLLIxgGyylcE+YYg26y0krKwgBgS
      JMsDAdlgJJtik60eax7ey+INrCbZA4eW47uRIVeXqqvfu+/ec+8595tvvsGtW7cAlNhihgHP
      82aiOAA/zdMsQ811J959FMdI0/RYA1zZ9D9//vlfL7LnRSIpE/jvjA2W55J0f/j5o/eT0iJy
      o5x0DROhV1EUSNKEC58ahsKnp3n18nMCoqVWtPLqug7XrcGxbbiuw5NLIsS7xJw0HiZCbPpD
      2t3g34/x8m//gHvzKszWcaK94zi4f/8+bt++jb29PbTbbfz0008IggAbGxsYDAbo9Xro9Xro
      9/v48MMPsb6+ju3tbbz//vvodrtqQa6trUHTNGxsbGBjYwPff/89PvroI3z99dfY2tpS6FIY
      hrh8+TJevXqFa9eu4eXLlyiKAp1OB2EYot/v48aNG9jZ2cHBwQFWVlbwySef4Msvv8TTp08x
      HA6haRqyLMN4PIZlWRgOh+p5GGN49uwZwjBEq9VCmvIwdHd3F6urq+j3+/B9H1999RUIIbh1
      6xYeP36Mq1evglKq4F5KKXRDx0qzNXfxy9+uUrEmQvWCUgyGA9S9+sx7LF0cd55xKiJDxoqp
      Y4c0oR1UliafZHcVyNIM0ASpRsCWURyBEF5VDMMQGk7eiNJ7UzE8ularwTkBZgOAmuPCtbnY
      EqeOEgAMURQjy1J1Yv337//E8D/PUdlo4/qffn/sPtKzbW1todvtIgxDRebf29vDzZs3MRgM
      sLm5qcII27Zx48YNtFotdLtduK6LdrsNz/NAKcWTJ0+wtbWFq1ev4v79+9jc3MSjR49w5coV
      GAaf1SthyFqthvX1dViWpeRS7t69i1qthnq9Dl3XEccxfvjhB7RaLeR5jlarhVqthh9//BH3
      7t2DrusKulxbW+P5oq5jPB6j0WgoaqvruhiNRvA8D/v7+2g2m1hdXYXrunjnnXfw/PlzFRpl
      eY6CFWh5rVM1I5YXf57n6A36oAU9pgp31OaiQMs2GbpkeQ7TMkEWjL/LfUlJmiLLUp53CB0h
      ycktGEXd83h5/AR4VZXuDQNezVOV17OEhFmewfcDFLTA8MFj7P/rITb/8BvYN989du0vZULO
      2zQ5MMV1XHhu7UzvhzGG/e4BkjiG47hor67OvJ50Oh02j/96XlsESqWUQhPhiiYQkHkoEiAQ
      nyJXDC/TMNBsNhH4geIWS5LOUZiNgSn1B8exLwQIkM9VUIrA95Hl+dKHf0igQJqs9srJ8nlR
      QNMIKpUqnBnx8Ns06fjkb5ymKYbilHDmyKRMM9lm0ev3EUYh7GoV7dX2zO9rUMaWyiKS44Tm
      NVnJ/hvempCBMoDM2Djlv5f81kJg/YEfqBDFtm1E4xhO3YZhGAjCEABDlvEqcKvZnLvw5Y91
      tK9d/nk0KZff1/M8dHtvAAD6lPCrbIvqqk58hvGEUS4komncCdQbvKYRBNA0Aq/mqXBnVlK4
      bJMV3pE/BmMMq60VaJqGarXKyTRnHDiSioHchPB5FEbGw+lev49mozEVOTPm4fXnNQGfL3Yt
      oEjNsolJw2Lek+P0/L91XYdlWfB9n3cSMi6Oapgm6nUPcZyAUoZ63VvI658k33e01eKkd0gI
      QbPRxNjnfexSB/VoF2a5LjBNMfnE5xKV2/bKKkD4QBEZCxPCaYK6YcAT/fT9fh/j8Vgx2t62
      UUoVk6sQjL+BPkSr0QQhBNXK6SHbPM8xGPHkvNXgUG0UR/BqHjSN8JnEM9a3sWxPMG/WmDTl
      ZSGlQDRFg9SJropQ00x6YsqYEswihKhjkTGGLE0RBgRVuwq7enIVHWsTAAAHNElEQVTD1kl2
      kvdYpP2BEN6bvtLkiMg48JHnhYKJtYwCpq7mVBAyf3bvxP3BF/lR1WzGmGJNNQS/udvtqh6f
      wWDAC0pCoVnWIOYljOc1ydKSvVwAr4eYhoHaKWJ+3qKSCJ6ArxrkhqMhXy+aDse28abfOwaN
      HrWloEDlmH/RVgoVUoAohpauW6BUtO/qOhidfS+9BENOu3+SJigYRcM7nwboaRwHh+m4GkQY
      RYjjCMnrLp7+7i/Y+PWvsPnH35665UTKtyTZybRCKSo8GAwwGo2OecK9vT3liaXc4rI3wKGR
      iXGxfhDArtoLQZ4AD6uHoyF0TVct7WmW4U3vDRhjaNYbqkFv3j0vbANIKJEJKFFKm5x2oUze
      9AhKZJgz46lp6E0Z5rRtG/XadHXoZRohBK7jwHUc9PsBf15Ng24aoAWvlktvLsOqJEmUh5bw
      rgxv4jjmQr+Oe+zfAYDd3d0Jsrls8CvnM4Zh4PLly3P1Oc9jjDFEUaQ2LWMMxDSh6Yd50aKn
      sdQAskwTrSYP4wg5nIApB2KMfX8h5elzw6CygxOEKLW2i2wjKHcGEk2bGwqd9NlcJIkN0Xh1
      kWEfEyHXWT4Xj30Y1SpMyzx2AsiqtkpuCVGy5tKbp1mKer1+TEwqjmN0Oh0VcpQXvdxYMjS0
      LAvvvvvu0vJAxhiSJMFoNFLShWmaotFoqO+1SCtJeb4Bv3iSHz32xxj7Pp88I1rdKaWoue7M
      8OpCToCzQqiHp8Z00vYEwgKg4GyYhcboULk5ATi2s5QjnjGGIAiQZdkEA+rYs5QWM6UUaZpy
      BboiRx7lU68rO5QyJ1YuCOMIVTNJEnQ6HbUAyoteLjapA2uaJkwRltWWNIQkz3M1jkjTNNWa
      IL9H+c951hv0j3V2yg0WBIHqGpAbStM0uM6Sc4DzeNOcFgBj0BcgissfjxACEMzNBwDe+akR
      goLRC+lgnGYPHjyAruu4c+cODg4OcOXKFeWlnzx5wimcSYKVlRXcvn0bz549w+7uLqrVKt57
      7z1FBhmPx3j16hW2trZgGAYePnyIjz/+GPv7+6rH586dO4jjGJvXNuHW3GOeW05dkVVZCS+r
      lhLxXJqmAZrIt8RrTNP0Qk9IqdwtN6Hc3LM0kaaZJtQ53vR7sKtVtbDzIkd/OIDn1WGZJvwg
      QCryollkeGkTE2LOY+UcYPGCkjj6FhS6lVAn0cT1C4ZDlYrFWWNLQLxkCLSzs6NCoe3tbezt
      7aHb7QIArl+/jtevX8O2bc5bDUN0u12srq6i0+ng0aNHGI/HWFtbwxdffAHHcfDixQusr6+j
      KAp899136HQ6ADi1cnt7G59++ukxTSOAI1ZE04STOGR3yXBIbgpAQKWGjma9AcYO52hd1Cbw
      Ax9RHEMjBKZlIghDNESbxWlN5kWj8QiGYSqHRsXzOjZPoiuVigrxGGNz0b4LCfwkiYLgZC3O
      aaZrXOntNPEnIUSFQIt4Ev6DHoYmMrZeBMZc1IIgUPJ+Ozs7ME0Tw+EQ29vbaLfb+Pbbb9Fo
      NJQUomma+Oyzz3Dv3j3s7++jWq2qYRgffPABer0eKKV48eIFOp0OarWa+tylS5dw9+5d9SPL
      hrMyib/ZaPDcoHIY8smqeDnmllqunFedIc9zhGGoxgnNI9XMMkop4oTPmahUq0izDM16YypZ
      fxEzDEPUORjCKMLBmy7yLJuobsuwR6pAzKV3/ty9QOcxQrjK2KwROwWlaDWbCg5jjKE36MOu
      2mcuuZdNohJv2+T8NPkDy5i+vNHDKMJwNESapDBMA3mW8YHkwpvqhsFPgEYDuqar7yHHRFmW
      derkuKCFGEXEK7JZniGKItS9+rnfN2MMe/sdFUppmoZL7Usn8kQopRj7PhpzRl797N2g5zHp
      vSa82pH/L8MlySXWNC4pmGYp7ClqYacxQsiEpMnbNJkgy/cwMfqHEK6h5NXha1w23BAbhhaT
      mkeyAlsuHFqWhaIo4ItCkydohvL0pIzBNAxEUYQ8z2GJISZ5niOMIjBKUa3aiJOYY/VnWPyM
      cZI7EVpOMrEHOCrkOu7UsqGcKjPPfnEbQBFPBAwmJffkDDF5DcD7Yryai96gD8u0oOucOEEI
      QZbmosB2vlcge09+DiuTgI61V4j8yLFtUEYVid00TWQsU9Vn0zQ5N5sxWJalaguWZSHLMvhC
      kc2p2vCDAEl6OI6o7tVVgU++/ziOUbEqKGiBOInRqDfO7PmTNMXYH4NSipVWSw1okd9VKsDJ
      vyvXN3gIR+cWGI1lzmldhvFhByIXEKezxMelTlAsij+SsEEpBTM4XFaxeJJkGSbyLEeRnz3O
      /X8xuQnKVoZALcNEpVJBkiS8aCROAtmbJItlsnqaJIkKpwifgoLReDwhOAvwRRaI2bsyrIri
      CJqmI88zuI4LQ9cXFsEtW55zPR/HdtAf9NHr9UHIJHTqBwHXFmKcysrEu5AnvGVaipY5zf4H
      IZrzOlfzvRUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      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
      gXgkgiwbCNNharnC2GgKDYhEkqSXssR7eu/ZvLriUSanpugb2kF6bpJgrIdquUAqlaJiC2Ih
      jYWlNOGATrEmiEeC1ESM1EA/7tQUgYBBtV5HVu7uT5rNZgknEiSjBsuZLMmuLjRZJR4BWVKQ
      ELiuhyIr1KpF4vE4ya4uZAk826F38H1KRpIN4hHACZIumcRVi8npZYZGdlAtF3lw3zCFQgEA
      RZFBU6kuzdHT24eCg0CiXineH8FwtVptc3n6A0QwGNx0Xq5dp2x6xCOhezyrm8/rdpDP50kk
      EndhRj5uNi/TsjD0ToHyN8d9twN8WKBoAeLaBz2L94a7Sfy3wp0QP9yXVqBtbGMV2wywjfsa
      2wywjfsa2wywjfsa2wywjfsa2wywjfsa2wywjfsa2wywjfsa94UjTJZlVPXH71G353V7eD/m
      dV+EQmxjG5thWwTaxn2NbQbYxn2NbQbYxn2NbQbYxn2NbQbYxn2NbQbYxn2NbQb4kGN28hrP
      P/88mULlg57KhxI/ft6ObdwWhsf2cOb8FczMNC+fXiAZCTGTc+jtTvL4kQc/6On92KPjDlDK
      rXDixAkuXp1Yf/xWx3tLtbtbQ6eem2d6pQyAUytx4sQJzoxfwPHWzmZhYWGLPXpcu3b9rs5x
      ZeXmZyTfCluf+1pUCyu88ebb1Ne98qvXJ3nwwZ1cHr9AtHeY5fnZ9zQ/gHdfeo65wiYnG66D
      UytRqjmcH78AQC63+dG3p06f6njdKszz3EvvbGh/4vTpDfdOnDhNvu3v0+++ybvvvMXF6zOt
      azebQxMdd4ArJ1+m69GfJ2FO8fyLb/CZTzx5y47uJur5BWZqMjt6I5QXr5Cni4/sTPKtb3+X
      L/7s5267v/z0OF/525f4F//y94nrd+e4pJdfeZmf/7mfv6023/7Ot/n8P/r8exv3tbf56c99
      HqXtMZ544jhdyRgXLlzlkx87zLfPTvBzn/3kexoHYSHH+lm4eoFFUUNWNKZm5gmEYuzsj5Gr
      mES7B5k4/wZeoIeffmSQ65Vuzp44QbJ/gIW5KZwLZzDrJgNDQ0ysVHj4wAP098SZm7rO8twi
      XT1x9j5ynEun3uGJJ57g0vVFUmEJS8DU5CQXT53ADsYR9QJvv/EjoqndXB9/BS/Qw6HeOGdP
      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
    </thumbnail>
    <thumbnail height='192' name='Top N Airbnb' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='UseBySeason' width='192'>
      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
      iaZQ7D3/H4YmqA+mccstAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='amenities' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='bedrooms' width='192'>
      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
      F27emQcAAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
